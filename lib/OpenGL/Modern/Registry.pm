package OpenGL::Modern::Registry;

# ATTENTION: This file is automatically generated by utils/generate-registry.pl
#            Manual changes will be lost.
use strict;
use warnings;

sub gl_functions {qw(
  glAccum
  glAcquireKeyedMutexWin32EXT
  glActiveProgramEXT
  glActiveShaderProgram
  glActiveStencilFaceEXT
  glActiveTexture
  glActiveTextureARB
  glActiveVaryingNV_c
  glAddressSpace
  glAddSwapHintRectWIN
  glAllocMPEGPredictorsSGIX_c
  glAlphaFragmentOp1ATI
  glAlphaFragmentOp2ATI
  glAlphaFragmentOp3ATI
  glAlphaFunc
  glAlphaFuncQCOM
  glAlphaFuncx
  glApplyTextureEXT
  glAreProgramsResidentNV_c
  glAreTexturesResidentEXT_c
  glAreTexturesResident_c
  glAreVertexArraysResidentSGIX_c
  glArrayElement
  glArrayElementEXT
  glArrayObjectATI
  glAsyncMarkerSGIX
  glAttachObjectARB
  glAttachShader
  glBegin
  glBeginConditionalRender
  glBeginConditionalRenderNV
  glBeginConditionalRenderNVX
  glBeginFragmentShaderATI
  glBeginOcclusionQueryNV
  glBeginPerfMonitorAMD
  glBeginPerfQueryINTEL
  glBeginQuery
  glBeginQueryANGLE
  glBeginQueryARB
  glBeginQueryIndexed
  glBeginSceneEXT
  glBeginTransformFeedback
  glBeginTransformFeedbackEXT
  glBeginTransformFeedbackNV
  glBeginVertexShaderEXT
  glBeginVideoCaptureNV
  glBindArraySetEXT_c
  glBindAttribLocationARB_c
  glBindAttribLocation_c
  glBindBuffer
  glBindBufferARB
  glBindBufferBase
  glBindBufferBaseEXT
  glBindBufferBaseNV
  glBindBufferOffsetEXT
  glBindBufferOffsetNV
  glBindBufferRange
  glBindBufferRangeEXT
  glBindBufferRangeNV
  glBindBuffersBase_c
  glBindBuffersRange_c
  glBindFragDataLocationEXT_c
  glBindFragDataLocationIndexedEXT_c
  glBindFragDataLocationIndexed_c
  glBindFragDataLocation_c
  glBindFragmentShaderATI
  glBindFramebuffer
  glBindFramebufferEXT
  glBindImageTexture
  glBindImageTextureEXT
  glBindImageTextures_c
  glBindLightParameterEXT
  glBindMaterialParameterEXT
  glBindMultiTextureEXT
  glBindParameterEXT
  glBindProgramARB
  glBindProgramNV
  glBindProgramPipeline
  glBindRenderbuffer
  glBindRenderbufferEXT
  glBindSampler
  glBindSamplers_c
  glBindTexGenParameterEXT
  glBindTexture
  glBindTextureEXT
  glBindTextures_c
  glBindTextureUnit
  glBindTextureUnitParameterEXT
  glBindTransformFeedback
  glBindTransformFeedbackNV
  glBindVertexArray
  glBindVertexArrayAPPLE
  glBindVertexArraySGIX
  glBindVertexBuffer
  glBindVertexBuffers_c
  glBindVertexShaderEXT
  glBindVideoCaptureStreamBufferNV
  glBindVideoCaptureStreamTextureNV
  glBinormalPointerEXT_c
  glBitmap_c
  glBlendBarrierKHR
  glBlendBarrierNV
  glBlendColor
  glBlendColorEXT
  glBlendEquation
  glBlendEquationEXT
  glBlendEquationi
  glBlendEquationiARB
  glBlendEquationiEXT
  glBlendEquationIndexedAMD
  glBlendEquationSeparate
  glBlendEquationSeparateEXT
  glBlendEquationSeparatei
  glBlendEquationSeparateiARB
  glBlendEquationSeparateiEXT
  glBlendEquationSeparateIndexedAMD
  glBlendFunc
  glBlendFunci
  glBlendFunciARB
  glBlendFunciEXT
  glBlendFuncIndexedAMD
  glBlendFuncSeparate
  glBlendFuncSeparateEXT
  glBlendFuncSeparatei
  glBlendFuncSeparateiARB
  glBlendFuncSeparateiEXT
  glBlendFuncSeparateIndexedAMD
  glBlendParameteriNV
  glBlitFramebuffer
  glBlitFramebufferANGLE
  glBlitFramebufferEXT
  glBlitFramebufferNV
  glBlitNamedFramebuffer
  glBufferAddressRangeNV
  glBufferDataARB_c
  glBufferData_c
  glBufferPageCommitmentARB
  glBufferParameteriAPPLE
  glBufferRegionEnabled
  glBufferStorageExternalEXT
  glBufferStorageEXT_c
  glBufferStorageMemEXT
  glBufferStorage_c
  glBufferSubDataARB_c
  glBufferSubData_c
  glCallCommandListNV
  glCallList
  glCallLists_c
  glCheckFramebufferStatus
  glCheckFramebufferStatusEXT
  glCheckNamedFramebufferStatus
  glCheckNamedFramebufferStatusEXT
  glClampColor
  glClampColorARB
  glClear
  glClearAccum
  glClearBufferData_c
  glClearBufferfi
  glClearBufferfv_c
  glClearBufferiv_c
  glClearBufferSubData_c
  glClearBufferuiv_c
  glClearColor
  glClearColorIiEXT
  glClearColorIuiEXT
  glClearColorx
  glClearDepth
  glClearDepthdNV
  glClearDepthf
  glClearDepthx
  glClearIndex
  glClearNamedBufferDataEXT_c
  glClearNamedBufferData_c
  glClearNamedBufferSubDataEXT_c
  glClearNamedBufferSubData_c
  glClearNamedFramebufferfi
  glClearNamedFramebufferfv_c
  glClearNamedFramebufferiv_c
  glClearNamedFramebufferuiv_c
  glClearPixelLocalStorageuiEXT_c
  glClearStencil
  glClearTexImageEXT_c
  glClearTexImage_c
  glClearTexSubImageEXT_c
  glClearTexSubImage_c
  glClientActiveTexture
  glClientActiveTextureARB
  glClientActiveVertexStreamATI
  glClientAttribDefaultEXT
  glClientWaitSync
  glClientWaitSyncAPPLE
  glClipControl
  glClipPlanef_c
  glClipPlanex_c
  glClipPlane_c
  glColor3b
  glColor3bv_c
  glColor3d
  glColor3dv_c
  glColor3f
  glColor3fVertex3fSUN
  glColor3fVertex3fvSUN_c
  glColor3fv_c
  glColor3hNV
  glColor3hvNV_c
  glColor3i
  glColor3iv_c
  glColor3s
  glColor3sv_c
  glColor3ub
  glColor3ubv_c
  glColor3ui
  glColor3uiv_c
  glColor3us
  glColor3usv_c
  glColor4b
  glColor4bv_c
  glColor4d
  glColor4dv_c
  glColor4f
  glColor4fNormal3fVertex3fSUN
  glColor4fNormal3fVertex3fvSUN_c
  glColor4fv_c
  glColor4hNV
  glColor4hvNV_c
  glColor4i
  glColor4iv_c
  glColor4s
  glColor4sv_c
  glColor4ub
  glColor4ubVertex2fSUN
  glColor4ubVertex2fvSUN_c
  glColor4ubVertex3fSUN
  glColor4ubVertex3fvSUN_c
  glColor4ubv_c
  glColor4ui
  glColor4uiv_c
  glColor4us
  glColor4usv_c
  glColor4x
  glColorFormatNV
  glColorFragmentOp1ATI
  glColorFragmentOp2ATI
  glColorFragmentOp3ATI
  glColorMask
  glColorMaski
  glColorMaskiEXT
  glColorMaskIndexedEXT
  glColorMaterial
  glColorP3ui
  glColorP3uiv_c
  glColorP4ui
  glColorP4uiv_c
  glColorPointerEXT_c
  glColorPointerListIBM_c
  glColorPointervINTEL_c
  glColorPointer_c
  glColorSubTableEXT_c
  glColorSubTable_c
  glColorTableEXT_c
  glColorTableParameterfvSGI_c
  glColorTableParameterfv_c
  glColorTableParameterivSGI_c
  glColorTableParameteriv_c
  glColorTableSGI_c
  glColorTable_c
  glCombinerInputNV
  glCombinerOutputNV
  glCombinerParameterfNV
  glCombinerParameterfvNV_c
  glCombinerParameteriNV
  glCombinerParameterivNV_c
  glCombinerStageParameterfvNV_c
  glCommandListSegmentsNV
  glCompileCommandListNV
  glCompileShader
  glCompileShaderARB
  glCompileShaderIncludeARB_c
  glCompressedMultiTexImage1DEXT_c
  glCompressedMultiTexImage2DEXT_c
  glCompressedMultiTexImage3DEXT_c
  glCompressedMultiTexSubImage1DEXT_c
  glCompressedMultiTexSubImage2DEXT_c
  glCompressedMultiTexSubImage3DEXT_c
  glCompressedTexImage1DARB_c
  glCompressedTexImage1D_c
  glCompressedTexImage2DARB_c
  glCompressedTexImage2D_c
  glCompressedTexImage3DARB_c
  glCompressedTexImage3DNV_c
  glCompressedTexImage3D_c
  glCompressedTexSubImage1DARB_c
  glCompressedTexSubImage1D_c
  glCompressedTexSubImage2DARB_c
  glCompressedTexSubImage2D_c
  glCompressedTexSubImage3DARB_c
  glCompressedTexSubImage3DNV_c
  glCompressedTexSubImage3D_c
  glCompressedTextureImage1DEXT_c
  glCompressedTextureImage2DEXT_c
  glCompressedTextureImage3DEXT_c
  glCompressedTextureSubImage1DEXT_c
  glCompressedTextureSubImage1D_c
  glCompressedTextureSubImage2DEXT_c
  glCompressedTextureSubImage2D_c
  glCompressedTextureSubImage3DEXT_c
  glCompressedTextureSubImage3D_c
  glConservativeRasterParameterfNV
  glConservativeRasterParameteriNV
  glConvolutionFilter1DEXT_c
  glConvolutionFilter1D_c
  glConvolutionFilter2DEXT_c
  glConvolutionFilter2D_c
  glConvolutionParameterf
  glConvolutionParameterfEXT
  glConvolutionParameterfvEXT_c
  glConvolutionParameterfv_c
  glConvolutionParameteri
  glConvolutionParameteriEXT
  glConvolutionParameterivEXT_c
  glConvolutionParameteriv_c
  glCopyBufferSubData
  glCopyBufferSubDataNV
  glCopyColorSubTable
  glCopyColorSubTableEXT
  glCopyColorTable
  glCopyColorTableSGI
  glCopyConvolutionFilter1D
  glCopyConvolutionFilter1DEXT
  glCopyConvolutionFilter2D
  glCopyConvolutionFilter2DEXT
  glCopyImageSubData
  glCopyImageSubDataEXT
  glCopyImageSubDataNV
  glCopyMultiTexImage1DEXT
  glCopyMultiTexImage2DEXT
  glCopyMultiTexSubImage1DEXT
  glCopyMultiTexSubImage2DEXT
  glCopyMultiTexSubImage3DEXT
  glCopyNamedBufferSubData
  glCopyPathNV
  glCopyPixels
  glCopyTexImage1D
  glCopyTexImage1DEXT
  glCopyTexImage2D
  glCopyTexImage2DEXT
  glCopyTexSubImage1D
  glCopyTexSubImage1DEXT
  glCopyTexSubImage2D
  glCopyTexSubImage2DEXT
  glCopyTexSubImage3D
  glCopyTexSubImage3DEXT
  glCopyTexSubImage3DNV
  glCopyTextureImage1DEXT
  glCopyTextureImage2DEXT
  glCopyTextureLevelsAPPLE
  glCopyTextureSubImage1D
  glCopyTextureSubImage1DEXT
  glCopyTextureSubImage2D
  glCopyTextureSubImage2DEXT
  glCopyTextureSubImage3D
  glCopyTextureSubImage3DEXT
  glCoverageModulationNV
  glCoverageModulationTableNV_c
  glCoverFillPathInstancedNV_c
  glCoverFillPathNV
  glCoverStrokePathInstancedNV_c
  glCoverStrokePathNV
  glCreateBuffers_c
  glCreateCommandListsNV_c
  glCreateFramebuffers_c
  glCreateMemoryObjectsEXT_c
  glCreatePerfQueryINTEL_c
  glCreateProgram
  glCreateProgramObjectARB
  glCreateProgramPipelines_c
  glCreateQueries_c
  glCreateRenderbuffers_c
  glCreateSamplers_c
  glCreateShader
  glCreateShaderObjectARB
  glCreateShaderProgramEXT_c
  glCreateShaderProgramv_c
  glCreateStatesNV_c
  glCreateSyncFromCLeventARB
  glCreateTextures_c
  glCreateTransformFeedbacks_c
  glCreateVertexArrays_c
  glCullFace
  glCullParameterdvEXT_c
  glCullParameterfvEXT_c
  glCurrentPaletteMatrixARB
  glDataPipe
  glDebugMessageCallbackAMD_c
  glDebugMessageCallbackARB_c
  glDebugMessageCallback_c
  glDebugMessageControlARB_c
  glDebugMessageControl_c
  glDebugMessageEnableAMD_c
  glDebugMessageInsertAMD_c
  glDebugMessageInsertARB_c
  glDebugMessageInsert_c
  glDeformSGIX
  glDeleteArraySetsEXT_c
  glDeleteAsyncMarkersSGIX
  glDeleteBufferRegion
  glDeleteBuffersARB_c
  glDeleteBuffers_c
  glDeleteCommandListsNV_c
  glDeleteFencesAPPLE_c
  glDeleteFencesNV_c
  glDeleteFragmentShaderATI
  glDeleteFramebuffersEXT_c
  glDeleteFramebuffers_c
  glDeleteLists
  glDeleteMemoryObjectsEXT_c
  glDeleteMPEGPredictorsSGIX_c
  glDeleteNamedStringARB_c
  glDeleteNamesAMD_c
  glDeleteObjectARB
  glDeleteOcclusionQueriesNV_c
  glDeletePathsNV
  glDeletePerfMonitorsAMD_c
  glDeletePerfQueryINTEL
  glDeleteProgram
  glDeleteProgramPipelines_c
  glDeleteProgramsARB_c
  glDeleteProgramsNV_c
  glDeleteQueriesANGLE_c
  glDeleteQueriesARB_c
  glDeleteQueries_c
  glDeleteRenderbuffersEXT_c
  glDeleteRenderbuffers_c
  glDeleteSamplers_c
  glDeleteSemaphoresEXT_c
  glDeleteShader
  glDeleteStatesNV_c
  glDeleteSync
  glDeleteSyncAPPLE
  glDeleteTexturesEXT_c
  glDeleteTextures_c
  glDeleteTransformFeedbacksNV_c
  glDeleteTransformFeedbacks_c
  glDeleteVertexArraysAPPLE_c
  glDeleteVertexArraysSGIX_c
  glDeleteVertexArrays_c
  glDeleteVertexShaderEXT
  glDepthBoundsdNV
  glDepthBoundsEXT
  glDepthFunc
  glDepthMask
  glDepthRange
  glDepthRangeArrayfvNV_c
  glDepthRangeArrayv_c
  glDepthRangedNV
  glDepthRangef
  glDepthRangeIndexed
  glDepthRangeIndexedfNV
  glDepthRangex
  glDetachObjectARB
  glDetachShader
  glDetailTexFuncSGIS_c
  glDisable
  glDisableClientState
  glDisableClientStateiEXT
  glDisableClientStateIndexedEXT
  glDisableDriverControlQCOM
  glDisablei
  glDisableiEXT
  glDisableIndexedEXT
  glDisableiNV
  glDisableVariantClientStateEXT
  glDisableVertexArrayAttrib
  glDisableVertexArrayAttribEXT
  glDisableVertexArrayEXT
  glDisableVertexAttribAPPLE
  glDisableVertexAttribArray
  glDisableVertexAttribArrayARB
  glDiscardFramebufferEXT_c
  glDispatchCompute
  glDispatchComputeGroupSizeARB
  glDispatchComputeIndirect
  glDrawArrays
  glDrawArraysEXT
  glDrawArraysIndirect_c
  glDrawArraysInstanced
  glDrawArraysInstancedANGLE
  glDrawArraysInstancedARB
  glDrawArraysInstancedBaseInstance
  glDrawArraysInstancedBaseInstanceEXT
  glDrawArraysInstancedEXT
  glDrawArraysInstancedNV
  glDrawBuffer
  glDrawBufferRegion
  glDrawBuffersARB_c
  glDrawBuffersATI_c
  glDrawBuffersEXT_c
  glDrawBuffersIndexedEXT_c
  glDrawBuffersNV_c
  glDrawBuffers_c
  glDrawCommandsAddressNV_c
  glDrawCommandsNV_c
  glDrawCommandsStatesAddressNV_c
  glDrawCommandsStatesNV_c
  glDrawElementArrayAPPLE
  glDrawElementArrayATI
  glDrawElementsBaseVertexEXT_c
  glDrawElementsBaseVertex_c
  glDrawElementsIndirect_c
  glDrawElementsInstancedANGLE_c
  glDrawElementsInstancedARB_c
  glDrawElementsInstancedBaseInstanceEXT_c
  glDrawElementsInstancedBaseInstance_c
  glDrawElementsInstancedBaseVertexBaseInstanceEXT_c
  glDrawElementsInstancedBaseVertexBaseInstance_c
  glDrawElementsInstancedBaseVertexEXT_c
  glDrawElementsInstancedBaseVertex_c
  glDrawElementsInstancedEXT_c
  glDrawElementsInstancedNV_c
  glDrawElementsInstanced_c
  glDrawElements_c
  glDrawPixels_c
  glDrawRangeElementArrayAPPLE
  glDrawRangeElementArrayATI
  glDrawRangeElementsBaseVertexEXT_c
  glDrawRangeElementsBaseVertex_c
  glDrawRangeElementsEXT_c
  glDrawRangeElements_c
  glDrawTextureNV
  glDrawTransformFeedback
  glDrawTransformFeedbackInstanced
  glDrawTransformFeedbackNV
  glDrawTransformFeedbackStream
  glDrawTransformFeedbackStreamInstanced
  glDrawVkImageNV
  glEdgeFlag
  glEdgeFlagFormatNV
  glEdgeFlagPointerEXT_c
  glEdgeFlagPointerListIBM_c
  glEdgeFlagPointer_c
  glEdgeFlagv_c
  glElementPointerAPPLE_c
  glElementPointerATI_c
  glEnable
  glEnableClientState
  glEnableClientStateiEXT
  glEnableClientStateIndexedEXT
  glEnableDriverControlQCOM
  glEnablei
  glEnableiEXT
  glEnableIndexedEXT
  glEnableiNV
  glEnableVariantClientStateEXT
  glEnableVertexArrayAttrib
  glEnableVertexArrayAttribEXT
  glEnableVertexArrayEXT
  glEnableVertexAttribAPPLE
  glEnableVertexAttribArray
  glEnableVertexAttribArrayARB
  glEnd
  glEndConditionalRender
  glEndConditionalRenderNV
  glEndConditionalRenderNVX
  glEndFragmentShaderATI
  glEndList
  glEndOcclusionQueryNV
  glEndPerfMonitorAMD
  glEndPerfQueryINTEL
  glEndQuery
  glEndQueryANGLE
  glEndQueryARB
  glEndQueryIndexed
  glEndSceneEXT
  glEndTilingQCOM
  glEndTransformFeedback
  glEndTransformFeedbackEXT
  glEndTransformFeedbackNV
  glEndVertexShaderEXT
  glEndVideoCaptureNV
  glEvalCoord1d
  glEvalCoord1dv_c
  glEvalCoord1f
  glEvalCoord1fv_c
  glEvalCoord2d
  glEvalCoord2dv_c
  glEvalCoord2f
  glEvalCoord2fv_c
  glEvalMapsNV
  glEvalMesh1
  glEvalMesh2
  glEvalPoint1
  glEvalPoint2
  GLEW_3DFX_multisample
  GLEW_3DFX_tbuffer
  GLEW_3DFX_texture_compression_FXT1
  GLEW_AMD_blend_minmax_factor
  GLEW_AMD_compressed_3DC_texture
  GLEW_AMD_compressed_ATC_texture
  GLEW_AMD_conservative_depth
  GLEW_AMD_debug_output
  GLEW_AMD_depth_clamp_separate
  GLEW_AMD_draw_buffers_blend
  GLEW_AMD_framebuffer_sample_positions
  GLEW_AMD_gcn_shader
  GLEW_AMD_gpu_shader_half_float
  GLEW_AMD_gpu_shader_int16
  GLEW_AMD_gpu_shader_int64
  GLEW_AMD_interleaved_elements
  GLEW_AMD_multi_draw_indirect
  GLEW_AMD_name_gen_delete
  GLEW_AMD_occlusion_query_event
  GLEW_AMD_performance_monitor
  GLEW_AMD_pinned_memory
  GLEW_AMD_program_binary_Z400
  GLEW_AMD_query_buffer_object
  GLEW_AMD_sample_positions
  GLEW_AMD_seamless_cubemap_per_texture
  GLEW_AMD_shader_atomic_counter_ops
  GLEW_AMD_shader_ballot
  GLEW_AMD_shader_explicit_vertex_parameter
  GLEW_AMD_shader_stencil_export
  GLEW_AMD_shader_stencil_value_export
  GLEW_AMD_shader_trinary_minmax
  GLEW_AMD_sparse_texture
  GLEW_AMD_stencil_operation_extended
  GLEW_AMD_texture_gather_bias_lod
  GLEW_AMD_texture_texture4
  GLEW_AMD_transform_feedback3_lines_triangles
  GLEW_AMD_transform_feedback4
  GLEW_AMD_vertex_shader_layer
  GLEW_AMD_vertex_shader_tessellator
  GLEW_AMD_vertex_shader_viewport_index
  GLEW_ANDROID_extension_pack_es31a
  GLEW_ANGLE_depth_texture
  GLEW_ANGLE_framebuffer_blit
  GLEW_ANGLE_framebuffer_multisample
  GLEW_ANGLE_instanced_arrays
  GLEW_ANGLE_pack_reverse_row_order
  GLEW_ANGLE_program_binary
  GLEW_ANGLE_texture_compression_dxt1
  GLEW_ANGLE_texture_compression_dxt3
  GLEW_ANGLE_texture_compression_dxt5
  GLEW_ANGLE_texture_usage
  GLEW_ANGLE_timer_query
  GLEW_ANGLE_translated_shader_source
  GLEW_APPLE_aux_depth_stencil
  GLEW_APPLE_client_storage
  GLEW_APPLE_clip_distance
  GLEW_APPLE_color_buffer_packed_float
  GLEW_APPLE_copy_texture_levels
  GLEW_APPLE_element_array
  GLEW_APPLE_fence
  GLEW_APPLE_float_pixels
  GLEW_APPLE_flush_buffer_range
  GLEW_APPLE_framebuffer_multisample
  GLEW_APPLE_object_purgeable
  GLEW_APPLE_pixel_buffer
  GLEW_APPLE_rgb_422
  GLEW_APPLE_row_bytes
  GLEW_APPLE_specular_vector
  GLEW_APPLE_sync
  GLEW_APPLE_texture_2D_limited_npot
  GLEW_APPLE_texture_format_BGRA8888
  GLEW_APPLE_texture_max_level
  GLEW_APPLE_texture_packed_float
  GLEW_APPLE_texture_range
  GLEW_APPLE_transform_hint
  GLEW_APPLE_vertex_array_object
  GLEW_APPLE_vertex_array_range
  GLEW_APPLE_vertex_program_evaluators
  GLEW_APPLE_ycbcr_422
  GLEW_ARB_arrays_of_arrays
  GLEW_ARB_base_instance
  GLEW_ARB_bindless_texture
  GLEW_ARB_blend_func_extended
  GLEW_ARB_buffer_storage
  GLEW_ARB_clear_buffer_object
  GLEW_ARB_clear_texture
  GLEW_ARB_clip_control
  GLEW_ARB_cl_event
  GLEW_ARB_color_buffer_float
  GLEW_ARB_compatibility
  GLEW_ARB_compressed_texture_pixel_storage
  GLEW_ARB_compute_shader
  GLEW_ARB_compute_variable_group_size
  GLEW_ARB_conditional_render_inverted
  GLEW_ARB_conservative_depth
  GLEW_ARB_copy_buffer
  GLEW_ARB_copy_image
  GLEW_ARB_cull_distance
  GLEW_ARB_debug_output
  GLEW_ARB_depth_buffer_float
  GLEW_ARB_depth_clamp
  GLEW_ARB_depth_texture
  GLEW_ARB_derivative_control
  GLEW_ARB_direct_state_access
  GLEW_ARB_draw_buffers
  GLEW_ARB_draw_buffers_blend
  GLEW_ARB_draw_elements_base_vertex
  GLEW_ARB_draw_indirect
  GLEW_ARB_draw_instanced
  GLEW_ARB_enhanced_layouts
  GLEW_ARB_ES2_compatibility
  GLEW_ARB_ES3_1_compatibility
  GLEW_ARB_ES3_2_compatibility
  GLEW_ARB_ES3_compatibility
  GLEW_ARB_explicit_attrib_location
  GLEW_ARB_explicit_uniform_location
  GLEW_ARB_fragment_coord_conventions
  GLEW_ARB_fragment_layer_viewport
  GLEW_ARB_fragment_program
  GLEW_ARB_fragment_program_shadow
  GLEW_ARB_fragment_shader
  GLEW_ARB_fragment_shader_interlock
  GLEW_ARB_framebuffer_no_attachments
  GLEW_ARB_framebuffer_object
  GLEW_ARB_framebuffer_sRGB
  GLEW_ARB_geometry_shader4
  GLEW_ARB_get_program_binary
  GLEW_ARB_get_texture_sub_image
  GLEW_ARB_gl_spirv
  GLEW_ARB_gpu_shader5
  GLEW_ARB_gpu_shader_fp64
  GLEW_ARB_gpu_shader_int64
  GLEW_ARB_half_float_pixel
  GLEW_ARB_half_float_vertex
  GLEW_ARB_imaging
  GLEW_ARB_indirect_parameters
  GLEW_ARB_instanced_arrays
  GLEW_ARB_internalformat_query
  GLEW_ARB_internalformat_query2
  GLEW_ARB_invalidate_subdata
  GLEW_ARB_map_buffer_alignment
  GLEW_ARB_map_buffer_range
  GLEW_ARB_matrix_palette
  GLEW_ARB_multisample
  GLEW_ARB_multitexture
  GLEW_ARB_multi_bind
  GLEW_ARB_multi_draw_indirect
  GLEW_ARB_occlusion_query
  GLEW_ARB_occlusion_query2
  GLEW_ARB_parallel_shader_compile
  GLEW_ARB_pipeline_statistics_query
  GLEW_ARB_pixel_buffer_object
  GLEW_ARB_point_parameters
  GLEW_ARB_point_sprite
  GLEW_ARB_polygon_offset_clamp
  GLEW_ARB_post_depth_coverage
  GLEW_ARB_program_interface_query
  GLEW_ARB_provoking_vertex
  GLEW_ARB_query_buffer_object
  GLEW_ARB_robustness
  GLEW_ARB_robustness_application_isolation
  GLEW_ARB_robustness_share_group_isolation
  GLEW_ARB_robust_buffer_access_behavior
  GLEW_ARB_sampler_objects
  GLEW_ARB_sample_locations
  GLEW_ARB_sample_shading
  GLEW_ARB_seamless_cubemap_per_texture
  GLEW_ARB_seamless_cube_map
  GLEW_ARB_separate_shader_objects
  GLEW_ARB_shader_atomic_counters
  GLEW_ARB_shader_atomic_counter_ops
  GLEW_ARB_shader_ballot
  GLEW_ARB_shader_bit_encoding
  GLEW_ARB_shader_clock
  GLEW_ARB_shader_draw_parameters
  GLEW_ARB_shader_group_vote
  GLEW_ARB_shader_image_load_store
  GLEW_ARB_shader_image_size
  GLEW_ARB_shader_objects
  GLEW_ARB_shader_precision
  GLEW_ARB_shader_stencil_export
  GLEW_ARB_shader_storage_buffer_object
  GLEW_ARB_shader_subroutine
  GLEW_ARB_shader_texture_image_samples
  GLEW_ARB_shader_texture_lod
  GLEW_ARB_shader_viewport_layer_array
  GLEW_ARB_shading_language_100
  GLEW_ARB_shading_language_420pack
  GLEW_ARB_shading_language_include
  GLEW_ARB_shading_language_packing
  GLEW_ARB_shadow
  GLEW_ARB_shadow_ambient
  GLEW_ARB_sparse_buffer
  GLEW_ARB_sparse_texture
  GLEW_ARB_sparse_texture2
  GLEW_ARB_sparse_texture_clamp
  GLEW_ARB_spirv_extensions
  GLEW_ARB_stencil_texturing
  GLEW_ARB_sync
  GLEW_ARB_tessellation_shader
  GLEW_ARB_texture_barrier
  GLEW_ARB_texture_border_clamp
  GLEW_ARB_texture_buffer_object
  GLEW_ARB_texture_buffer_object_rgb32
  GLEW_ARB_texture_buffer_range
  GLEW_ARB_texture_compression
  GLEW_ARB_texture_compression_bptc
  GLEW_ARB_texture_compression_rgtc
  GLEW_ARB_texture_cube_map
  GLEW_ARB_texture_cube_map_array
  GLEW_ARB_texture_env_add
  GLEW_ARB_texture_env_combine
  GLEW_ARB_texture_env_crossbar
  GLEW_ARB_texture_env_dot3
  GLEW_ARB_texture_filter_anisotropic
  GLEW_ARB_texture_filter_minmax
  GLEW_ARB_texture_float
  GLEW_ARB_texture_gather
  GLEW_ARB_texture_mirrored_repeat
  GLEW_ARB_texture_mirror_clamp_to_edge
  GLEW_ARB_texture_multisample
  GLEW_ARB_texture_non_power_of_two
  GLEW_ARB_texture_query_levels
  GLEW_ARB_texture_query_lod
  GLEW_ARB_texture_rectangle
  GLEW_ARB_texture_rg
  GLEW_ARB_texture_rgb10_a2ui
  GLEW_ARB_texture_stencil8
  GLEW_ARB_texture_storage
  GLEW_ARB_texture_storage_multisample
  GLEW_ARB_texture_swizzle
  GLEW_ARB_texture_view
  GLEW_ARB_timer_query
  GLEW_ARB_transform_feedback2
  GLEW_ARB_transform_feedback3
  GLEW_ARB_transform_feedback_instanced
  GLEW_ARB_transform_feedback_overflow_query
  GLEW_ARB_transpose_matrix
  GLEW_ARB_uniform_buffer_object
  GLEW_ARB_vertex_array_bgra
  GLEW_ARB_vertex_array_object
  GLEW_ARB_vertex_attrib_64bit
  GLEW_ARB_vertex_attrib_binding
  GLEW_ARB_vertex_blend
  GLEW_ARB_vertex_buffer_object
  GLEW_ARB_vertex_program
  GLEW_ARB_vertex_shader
  GLEW_ARB_vertex_type_10f_11f_11f_rev
  GLEW_ARB_vertex_type_2_10_10_10_rev
  GLEW_ARB_viewport_array
  GLEW_ARB_window_pos
  GLEW_ARM_mali_program_binary
  GLEW_ARM_mali_shader_binary
  GLEW_ARM_rgba8
  GLEW_ARM_shader_framebuffer_fetch
  GLEW_ARM_shader_framebuffer_fetch_depth_stencil
  GLEW_ATIX_point_sprites
  GLEW_ATIX_texture_env_combine3
  GLEW_ATIX_texture_env_route
  GLEW_ATIX_vertex_shader_output_point_size
  GLEW_ATI_draw_buffers
  GLEW_ATI_element_array
  GLEW_ATI_envmap_bumpmap
  GLEW_ATI_fragment_shader
  GLEW_ATI_map_object_buffer
  GLEW_ATI_meminfo
  GLEW_ATI_pn_triangles
  GLEW_ATI_separate_stencil
  GLEW_ATI_shader_texture_lod
  GLEW_ATI_texture_compression_3dc
  GLEW_ATI_texture_env_combine3
  GLEW_ATI_texture_float
  GLEW_ATI_texture_mirror_once
  GLEW_ATI_text_fragment_shader
  GLEW_ATI_vertex_array_object
  GLEW_ATI_vertex_attrib_array_object
  GLEW_ATI_vertex_streams
  GLEW_EGL_KHR_context_flush_control
  GLEW_EGL_NV_robustness_video_memory_purge
  GLEW_EXT_422_pixels
  GLEW_EXT_abgr
  GLEW_EXT_base_instance
  GLEW_EXT_bgra
  GLEW_EXT_bindable_uniform
  GLEW_EXT_blend_color
  GLEW_EXT_blend_equation_separate
  GLEW_EXT_blend_func_extended
  GLEW_EXT_blend_func_separate
  GLEW_EXT_blend_logic_op
  GLEW_EXT_blend_minmax
  GLEW_EXT_blend_subtract
  GLEW_EXT_buffer_storage
  GLEW_EXT_Cg_shader
  GLEW_EXT_clear_texture
  GLEW_EXT_clip_cull_distance
  GLEW_EXT_clip_volume_hint
  GLEW_EXT_cmyka
  GLEW_EXT_color_buffer_float
  GLEW_EXT_color_buffer_half_float
  GLEW_EXT_color_subtable
  GLEW_EXT_compiled_vertex_array
  GLEW_EXT_compressed_ETC1_RGB8_sub_texture
  GLEW_EXT_conservative_depth
  GLEW_EXT_convolution
  GLEW_EXT_coordinate_frame
  GLEW_EXT_copy_image
  GLEW_EXT_copy_texture
  GLEW_EXT_cull_vertex
  GLEW_EXT_debug_label
  GLEW_EXT_debug_marker
  GLEW_EXT_depth_bounds_test
  GLEW_EXT_direct_state_access
  GLEW_EXT_discard_framebuffer
  GLEW_EXT_draw_buffers
  GLEW_EXT_draw_buffers2
  GLEW_EXT_draw_buffers_indexed
  GLEW_EXT_draw_elements_base_vertex
  GLEW_EXT_draw_instanced
  GLEW_EXT_draw_range_elements
  GLEW_EXT_EGL_image_array
  GLEW_EXT_external_buffer
  GLEW_EXT_float_blend
  GLEW_EXT_fog_coord
  GLEW_EXT_fragment_lighting
  GLEW_EXT_frag_depth
  GLEW_EXT_framebuffer_blit
  GLEW_EXT_framebuffer_multisample
  GLEW_EXT_framebuffer_multisample_blit_scaled
  GLEW_EXT_framebuffer_object
  GLEW_EXT_framebuffer_sRGB
  GLEW_EXT_geometry_point_size
  GLEW_EXT_geometry_shader
  GLEW_EXT_geometry_shader4
  GLEW_EXT_gpu_program_parameters
  GLEW_EXT_gpu_shader4
  GLEW_EXT_gpu_shader5
  GLEW_EXT_histogram
  GLEW_EXT_index_array_formats
  GLEW_EXT_index_func
  GLEW_EXT_index_material
  GLEW_EXT_index_texture
  GLEW_EXT_instanced_arrays
  GLEW_EXT_light_texture
  GLEW_EXT_map_buffer_range
  GLEW_EXT_memory_object
  GLEW_EXT_memory_object_fd
  GLEW_EXT_memory_object_win32
  GLEW_EXT_misc_attribute
  GLEW_EXT_multiple_textures
  GLEW_EXT_multisample
  GLEW_EXT_multisampled_render_to_texture
  GLEW_EXT_multisampled_render_to_texture2
  GLEW_EXT_multisample_compatibility
  GLEW_EXT_multiview_draw_buffers
  GLEW_EXT_multi_draw_arrays
  GLEW_EXT_multi_draw_indirect
  GLEW_EXT_packed_depth_stencil
  GLEW_EXT_packed_float
  GLEW_EXT_packed_pixels
  GLEW_EXT_paletted_texture
  GLEW_EXT_pixel_buffer_object
  GLEW_EXT_pixel_transform
  GLEW_EXT_pixel_transform_color_table
  GLEW_EXT_point_parameters
  GLEW_EXT_polygon_offset
  GLEW_EXT_polygon_offset_clamp
  GLEW_EXT_post_depth_coverage
  GLEW_EXT_provoking_vertex
  GLEW_EXT_pvrtc_sRGB
  GLEW_EXT_raster_multisample
  GLEW_EXT_read_format_bgra
  GLEW_EXT_render_snorm
  GLEW_EXT_rescale_normal
  GLEW_EXT_scene_marker
  GLEW_EXT_secondary_color
  GLEW_EXT_semaphore
  GLEW_EXT_semaphore_fd
  GLEW_EXT_semaphore_win32
  GLEW_EXT_separate_shader_objects
  GLEW_EXT_separate_specular_color
  GLEW_EXT_shader_framebuffer_fetch
  GLEW_EXT_shader_group_vote
  GLEW_EXT_shader_image_load_formatted
  GLEW_EXT_shader_image_load_store
  GLEW_EXT_shader_implicit_conversions
  GLEW_EXT_shader_integer_mix
  GLEW_EXT_shader_io_blocks
  GLEW_EXT_shader_non_constant_global_initializers
  GLEW_EXT_shader_pixel_local_storage
  GLEW_EXT_shader_pixel_local_storage2
  GLEW_EXT_shader_texture_lod
  GLEW_EXT_shadow_funcs
  GLEW_EXT_shadow_samplers
  GLEW_EXT_shared_texture_palette
  GLEW_EXT_sparse_texture
  GLEW_EXT_sparse_texture2
  GLEW_EXT_sRGB
  GLEW_EXT_sRGB_write_control
  GLEW_EXT_stencil_clear_tag
  GLEW_EXT_stencil_two_side
  GLEW_EXT_stencil_wrap
  GLEW_EXT_subtexture
  GLEW_EXT_texture
  GLEW_EXT_texture3D
  GLEW_EXT_texture_array
  GLEW_EXT_texture_buffer_object
  GLEW_EXT_texture_compression_astc_decode_mode
  GLEW_EXT_texture_compression_astc_decode_mode_rgb9e5
  GLEW_EXT_texture_compression_bptc
  GLEW_EXT_texture_compression_dxt1
  GLEW_EXT_texture_compression_latc
  GLEW_EXT_texture_compression_rgtc
  GLEW_EXT_texture_compression_s3tc
  GLEW_EXT_texture_cube_map
  GLEW_EXT_texture_cube_map_array
  GLEW_EXT_texture_edge_clamp
  GLEW_EXT_texture_env
  GLEW_EXT_texture_env_add
  GLEW_EXT_texture_env_combine
  GLEW_EXT_texture_env_dot3
  GLEW_EXT_texture_filter_anisotropic
  GLEW_EXT_texture_filter_minmax
  GLEW_EXT_texture_format_BGRA8888
  GLEW_EXT_texture_integer
  GLEW_EXT_texture_lod_bias
  GLEW_EXT_texture_mirror_clamp
  GLEW_EXT_texture_norm16
  GLEW_EXT_texture_object
  GLEW_EXT_texture_perturb_normal
  GLEW_EXT_texture_rectangle
  GLEW_EXT_texture_rg
  GLEW_EXT_texture_shared_exponent
  GLEW_EXT_texture_snorm
  GLEW_EXT_texture_sRGB
  GLEW_EXT_texture_sRGB_decode
  GLEW_EXT_texture_sRGB_R8
  GLEW_EXT_texture_sRGB_RG8
  GLEW_EXT_texture_storage
  GLEW_EXT_texture_swizzle
  GLEW_EXT_texture_type_2_10_10_10_REV
  GLEW_EXT_texture_view
  GLEW_EXT_timer_query
  GLEW_EXT_transform_feedback
  GLEW_EXT_unpack_subimage
  GLEW_EXT_vertex_array
  GLEW_EXT_vertex_array_bgra
  GLEW_EXT_vertex_array_setXXX
  GLEW_EXT_vertex_attrib_64bit
  GLEW_EXT_vertex_shader
  GLEW_EXT_vertex_weighting
  GLEW_EXT_win32_keyed_mutex
  GLEW_EXT_window_rectangles
  GLEW_EXT_x11_sync_object
  GLEW_EXT_YUV_target
  GLEW_GREMEDY_frame_terminator
  GLEW_GREMEDY_string_marker
  GLEW_HP_convolution_border_modes
  GLEW_HP_image_transform
  GLEW_HP_occlusion_test
  GLEW_HP_texture_lighting
  GLEW_IBM_cull_vertex
  GLEW_IBM_multimode_draw_arrays
  GLEW_IBM_rasterpos_clip
  GLEW_IBM_static_data
  GLEW_IBM_texture_mirrored_repeat
  GLEW_IBM_vertex_array_lists
  GLEW_INGR_color_clamp
  GLEW_INGR_interlace_read
  GLEW_INTEL_conservative_rasterization
  GLEW_INTEL_fragment_shader_ordering
  GLEW_INTEL_framebuffer_CMAA
  GLEW_INTEL_map_texture
  GLEW_INTEL_parallel_arrays
  GLEW_INTEL_performance_query
  GLEW_INTEL_texture_scissor
  GLEW_KHR_blend_equation_advanced
  GLEW_KHR_blend_equation_advanced_coherent
  GLEW_KHR_context_flush_control
  GLEW_KHR_debug
  GLEW_KHR_no_error
  GLEW_KHR_parallel_shader_compile
  GLEW_KHR_robustness
  GLEW_KHR_robust_buffer_access_behavior
  GLEW_KHR_texture_compression_astc_hdr
  GLEW_KHR_texture_compression_astc_ldr
  GLEW_KHR_texture_compression_astc_sliced_3d
  GLEW_KTX_buffer_region
  GLEW_MESAX_texture_stack
  GLEW_MESA_pack_invert
  GLEW_MESA_resize_buffers
  GLEW_MESA_shader_integer_functions
  GLEW_MESA_window_pos
  GLEW_MESA_ycbcr_texture
  GLEW_NVX_blend_equation_advanced_multi_draw_buffers
  GLEW_NVX_conditional_render
  GLEW_NVX_gpu_memory_info
  GLEW_NVX_linked_gpu_multicast
  GLEW_NV_3dvision_settings
  GLEW_NV_alpha_to_coverage_dither_control
  GLEW_NV_bgr
  GLEW_NV_bindless_multi_draw_indirect
  GLEW_NV_bindless_multi_draw_indirect_count
  GLEW_NV_bindless_texture
  GLEW_NV_blend_equation_advanced
  GLEW_NV_blend_equation_advanced_coherent
  GLEW_NV_blend_minmax_factor
  GLEW_NV_blend_square
  GLEW_NV_clip_space_w_scaling
  GLEW_NV_command_list
  GLEW_NV_compute_program5
  GLEW_NV_conditional_render
  GLEW_NV_conservative_raster
  GLEW_NV_conservative_raster_dilate
  GLEW_NV_conservative_raster_pre_snap_triangles
  GLEW_NV_copy_buffer
  GLEW_NV_copy_depth_to_color
  GLEW_NV_copy_image
  GLEW_NV_deep_texture3D
  GLEW_NV_depth_buffer_float
  GLEW_NV_depth_clamp
  GLEW_NV_depth_range_unclamped
  GLEW_NV_draw_buffers
  GLEW_NV_draw_instanced
  GLEW_NV_draw_texture
  GLEW_NV_draw_vulkan_image
  GLEW_NV_EGL_stream_consumer_external
  GLEW_NV_evaluators
  GLEW_NV_explicit_attrib_location
  GLEW_NV_explicit_multisample
  GLEW_NV_fbo_color_attachments
  GLEW_NV_fence
  GLEW_NV_fill_rectangle
  GLEW_NV_float_buffer
  GLEW_NV_fog_distance
  GLEW_NV_fragment_coverage_to_color
  GLEW_NV_fragment_program
  GLEW_NV_fragment_program2
  GLEW_NV_fragment_program4
  GLEW_NV_fragment_program_option
  GLEW_NV_fragment_shader_interlock
  GLEW_NV_framebuffer_blit
  GLEW_NV_framebuffer_mixed_samples
  GLEW_NV_framebuffer_multisample
  GLEW_NV_framebuffer_multisample_coverage
  GLEW_NV_generate_mipmap_sRGB
  GLEW_NV_geometry_program4
  GLEW_NV_geometry_shader4
  GLEW_NV_geometry_shader_passthrough
  GLEW_NV_gpu_multicast
  GLEW_NV_gpu_program4
  GLEW_NV_gpu_program5
  GLEW_NV_gpu_program5_mem_extended
  GLEW_NV_gpu_program_fp64
  GLEW_NV_gpu_shader5
  GLEW_NV_half_float
  GLEW_NV_image_formats
  GLEW_NV_instanced_arrays
  GLEW_NV_internalformat_sample_query
  GLEW_NV_light_max_exponent
  GLEW_NV_multisample_coverage
  GLEW_NV_multisample_filter_hint
  GLEW_NV_non_square_matrices
  GLEW_NV_occlusion_query
  GLEW_NV_packed_depth_stencil
  GLEW_NV_packed_float
  GLEW_NV_packed_float_linear
  GLEW_NV_pack_subimage
  GLEW_NV_parameter_buffer_object
  GLEW_NV_parameter_buffer_object2
  GLEW_NV_path_rendering
  GLEW_NV_path_rendering_shared_edge
  GLEW_NV_pixel_buffer_object
  GLEW_NV_pixel_data_range
  GLEW_NV_platform_binary
  GLEW_NV_point_sprite
  GLEW_NV_polygon_mode
  GLEW_NV_present_video
  GLEW_NV_primitive_restart
  GLEW_NV_read_depth
  GLEW_NV_read_depth_stencil
  GLEW_NV_read_stencil
  GLEW_NV_register_combiners
  GLEW_NV_register_combiners2
  GLEW_NV_robustness_video_memory_purge
  GLEW_NV_sample_locations
  GLEW_NV_sample_mask_override_coverage
  GLEW_NV_shader_atomic_counters
  GLEW_NV_shader_atomic_float
  GLEW_NV_shader_atomic_float64
  GLEW_NV_shader_atomic_fp16_vector
  GLEW_NV_shader_atomic_int64
  GLEW_NV_shader_buffer_load
  GLEW_NV_shader_noperspective_interpolation
  GLEW_NV_shader_storage_buffer_object
  GLEW_NV_shader_thread_group
  GLEW_NV_shader_thread_shuffle
  GLEW_NV_shadow_samplers_array
  GLEW_NV_shadow_samplers_cube
  GLEW_NV_sRGB_formats
  GLEW_NV_stereo_view_rendering
  GLEW_NV_tessellation_program5
  GLEW_NV_texgen_emboss
  GLEW_NV_texgen_reflection
  GLEW_NV_texture_array
  GLEW_NV_texture_barrier
  GLEW_NV_texture_border_clamp
  GLEW_NV_texture_compression_latc
  GLEW_NV_texture_compression_s3tc
  GLEW_NV_texture_compression_s3tc_update
  GLEW_NV_texture_compression_vtc
  GLEW_NV_texture_env_combine4
  GLEW_NV_texture_expand_normal
  GLEW_NV_texture_multisample
  GLEW_NV_texture_npot_2D_mipmap
  GLEW_NV_texture_rectangle
  GLEW_NV_texture_rectangle_compressed
  GLEW_NV_texture_shader
  GLEW_NV_texture_shader2
  GLEW_NV_texture_shader3
  GLEW_NV_transform_feedback
  GLEW_NV_transform_feedback2
  GLEW_NV_uniform_buffer_unified_memory
  GLEW_NV_vdpau_interop
  GLEW_NV_vertex_array_range
  GLEW_NV_vertex_array_range2
  GLEW_NV_vertex_attrib_integer_64bit
  GLEW_NV_vertex_buffer_unified_memory
  GLEW_NV_vertex_program
  GLEW_NV_vertex_program1_1
  GLEW_NV_vertex_program2
  GLEW_NV_vertex_program2_option
  GLEW_NV_vertex_program3
  GLEW_NV_vertex_program4
  GLEW_NV_video_capture
  GLEW_NV_viewport_array
  GLEW_NV_viewport_array2
  GLEW_NV_viewport_swizzle
  GLEW_OES_byte_coordinates
  GLEW_OML_interlace
  GLEW_OML_resample
  GLEW_OML_subsample
  GLEW_OVR_multiview
  GLEW_OVR_multiview2
  GLEW_OVR_multiview_multisampled_render_to_texture
  GLEW_PGI_misc_hints
  GLEW_PGI_vertex_hints
  GLEW_QCOM_alpha_test
  GLEW_QCOM_binning_control
  GLEW_QCOM_driver_control
  GLEW_QCOM_extended_get
  GLEW_QCOM_extended_get2
  GLEW_QCOM_framebuffer_foveated
  GLEW_QCOM_perfmon_global_mode
  GLEW_QCOM_shader_framebuffer_fetch_noncoherent
  GLEW_QCOM_tiled_rendering
  GLEW_QCOM_writeonly_rendering
  GLEW_REGAL_enable
  GLEW_REGAL_error_string
  GLEW_REGAL_ES1_0_compatibility
  GLEW_REGAL_ES1_1_compatibility
  GLEW_REGAL_extension_query
  GLEW_REGAL_log
  GLEW_REGAL_proc_address
  GLEW_REND_screen_coordinates
  GLEW_S3_s3tc
  GLEW_SGIS_clip_band_hint
  GLEW_SGIS_color_range
  GLEW_SGIS_detail_texture
  GLEW_SGIS_fog_function
  GLEW_SGIS_generate_mipmap
  GLEW_SGIS_line_texgen
  GLEW_SGIS_multisample
  GLEW_SGIS_multitexture
  GLEW_SGIS_pixel_texture
  GLEW_SGIS_point_line_texgen
  GLEW_SGIS_shared_multisample
  GLEW_SGIS_sharpen_texture
  GLEW_SGIS_texture4D
  GLEW_SGIS_texture_border_clamp
  GLEW_SGIS_texture_edge_clamp
  GLEW_SGIS_texture_filter4
  GLEW_SGIS_texture_lod
  GLEW_SGIS_texture_select
  GLEW_SGIX_async
  GLEW_SGIX_async_histogram
  GLEW_SGIX_async_pixel
  GLEW_SGIX_bali_g_instruments
  GLEW_SGIX_bali_r_instruments
  GLEW_SGIX_bali_timer_instruments
  GLEW_SGIX_blend_alpha_minmax
  GLEW_SGIX_blend_cadd
  GLEW_SGIX_blend_cmultiply
  GLEW_SGIX_calligraphic_fragment
  GLEW_SGIX_clipmap
  GLEW_SGIX_color_matrix_accuracy
  GLEW_SGIX_color_table_index_mode
  GLEW_SGIX_complex_polar
  GLEW_SGIX_convolution_accuracy
  GLEW_SGIX_cube_map
  GLEW_SGIX_cylinder_texgen
  GLEW_SGIX_datapipe
  GLEW_SGIX_decimation
  GLEW_SGIX_depth_pass_instrument
  GLEW_SGIX_depth_texture
  GLEW_SGIX_dvc
  GLEW_SGIX_flush_raster
  GLEW_SGIX_fog_blend
  GLEW_SGIX_fog_factor_to_alpha
  GLEW_SGIX_fog_layers
  GLEW_SGIX_fog_offset
  GLEW_SGIX_fog_patchy
  GLEW_SGIX_fog_scale
  GLEW_SGIX_fog_texture
  GLEW_SGIX_fragments_instrument
  GLEW_SGIX_fragment_lighting_space
  GLEW_SGIX_fragment_specular_lighting
  GLEW_SGIX_framezoom
  GLEW_SGIX_icc_texture
  GLEW_SGIX_igloo_interface
  GLEW_SGIX_image_compression
  GLEW_SGIX_impact_pixel_texture
  GLEW_SGIX_instrument_error
  GLEW_SGIX_interlace
  GLEW_SGIX_ir_instrument1
  GLEW_SGIX_line_quality_hint
  GLEW_SGIX_list_priority
  GLEW_SGIX_mpeg1
  GLEW_SGIX_mpeg2
  GLEW_SGIX_nonlinear_lighting_pervertex
  GLEW_SGIX_nurbs_eval
  GLEW_SGIX_occlusion_instrument
  GLEW_SGIX_packed_6bytes
  GLEW_SGIX_pixel_texture
  GLEW_SGIX_pixel_texture_bits
  GLEW_SGIX_pixel_texture_lod
  GLEW_SGIX_pixel_tiles
  GLEW_SGIX_polynomial_ffd
  GLEW_SGIX_quad_mesh
  GLEW_SGIX_reference_plane
  GLEW_SGIX_resample
  GLEW_SGIX_scalebias_hint
  GLEW_SGIX_shadow
  GLEW_SGIX_shadow_ambient
  GLEW_SGIX_slim
  GLEW_SGIX_spotlight_cutoff
  GLEW_SGIX_sprite
  GLEW_SGIX_subdiv_patch
  GLEW_SGIX_subsample
  GLEW_SGIX_tag_sample_buffer
  GLEW_SGIX_texture_add_env
  GLEW_SGIX_texture_coordinate_clamp
  GLEW_SGIX_texture_lod_bias
  GLEW_SGIX_texture_mipmap_anisotropic
  GLEW_SGIX_texture_multi_buffer
  GLEW_SGIX_texture_phase
  GLEW_SGIX_texture_range
  GLEW_SGIX_texture_scale_bias
  GLEW_SGIX_texture_supersample
  GLEW_SGIX_vector_ops
  GLEW_SGIX_vertex_array_object
  GLEW_SGIX_vertex_preclip
  GLEW_SGIX_vertex_preclip_hint
  GLEW_SGIX_ycrcb
  GLEW_SGIX_ycrcba
  GLEW_SGIX_ycrcb_subsample
  GLEW_SGI_color_matrix
  GLEW_SGI_color_table
  GLEW_SGI_complex
  GLEW_SGI_complex_type
  GLEW_SGI_fft
  GLEW_SGI_texture_color_table
  GLEW_SUNX_constant_data
  GLEW_SUN_convolution_border_modes
  GLEW_SUN_global_alpha
  GLEW_SUN_mesh_array
  GLEW_SUN_read_video_pixels
  GLEW_SUN_slice_accum
  GLEW_SUN_triangle_list
  GLEW_SUN_vertex
  GLEW_VERSION_1_1
  GLEW_VERSION_1_2
  GLEW_VERSION_1_2_1
  GLEW_VERSION_1_3
  GLEW_VERSION_1_4
  GLEW_VERSION_1_5
  GLEW_VERSION_2_0
  GLEW_VERSION_2_1
  GLEW_VERSION_3_0
  GLEW_VERSION_3_1
  GLEW_VERSION_3_2
  GLEW_VERSION_3_3
  GLEW_VERSION_4_0
  GLEW_VERSION_4_1
  GLEW_VERSION_4_2
  GLEW_VERSION_4_3
  GLEW_VERSION_4_4
  GLEW_VERSION_4_5
  GLEW_VERSION_4_6
  GLEW_WIN_phong_shading
  GLEW_WIN_scene_markerXXX
  GLEW_WIN_specular_fog
  GLEW_WIN_swap_hint
  glExecuteProgramNV_c
  glExtGetBufferPointervQCOM_c
  glExtGetBuffersQCOM_c
  glExtGetFramebuffersQCOM_c
  glExtGetProgramBinarySourceQCOM_c
  glExtGetProgramsQCOM_c
  glExtGetRenderbuffersQCOM_c
  glExtGetShadersQCOM_c
  glExtGetTexLevelParameterivQCOM_c
  glExtGetTexSubImageQCOM_c
  glExtGetTexturesQCOM_c
  glExtIsProgramBinaryQCOM
  glExtractComponentEXT
  glExtTexObjectStateOverrideiQCOM
  glFeedbackBuffer_c
  glFenceSync
  glFenceSyncAPPLE
  glFinalCombinerInputNV
  glFinish
  glFinishAsyncSGIX_c
  glFinishFenceAPPLE
  glFinishFenceNV
  glFinishObjectAPPLE
  glFinishTextureSUNX
  glFlush
  glFlushMappedBufferRange
  glFlushMappedBufferRangeAPPLE
  glFlushMappedBufferRangeEXT
  glFlushMappedNamedBufferRange
  glFlushMappedNamedBufferRangeEXT
  glFlushPixelDataRangeNV
  glFlushRasterSGIX
  glFlushVertexArrayRangeAPPLE_c
  glFlushVertexArrayRangeNV
  glFogCoordd
  glFogCoorddEXT
  glFogCoorddvEXT_c
  glFogCoorddv_c
  glFogCoordf
  glFogCoordfEXT
  glFogCoordFormatNV
  glFogCoordfvEXT_c
  glFogCoordfv_c
  glFogCoordhNV
  glFogCoordhvNV_c
  glFogCoordPointerEXT_c
  glFogCoordPointerListIBM_c
  glFogCoordPointer_c
  glFogf
  glFogFuncSGIS_c
  glFogfv_c
  glFogi
  glFogiv_c
  glFogLayersSGIX_c
  glFogx
  glFogxv_c
  glFragmentColorMaterialEXT
  glFragmentColorMaterialSGIX
  glFragmentCoverageColorNV
  glFragmentLightfEXT
  glFragmentLightfSGIX
  glFragmentLightfvEXT_c
  glFragmentLightfvSGIX_c
  glFragmentLightiEXT
  glFragmentLightiSGIX
  glFragmentLightivEXT_c
  glFragmentLightivSGIX_c
  glFragmentLightModelfEXT
  glFragmentLightModelfSGIX
  glFragmentLightModelfvEXT_c
  glFragmentLightModelfvSGIX_c
  glFragmentLightModeliEXT
  glFragmentLightModeliSGIX
  glFragmentLightModelivEXT_c
  glFragmentLightModelivSGIX_c
  glFragmentMaterialfEXT
  glFragmentMaterialfSGIX
  glFragmentMaterialfvEXT_c
  glFragmentMaterialfvSGIX_c
  glFragmentMaterialiEXT
  glFragmentMaterialiSGIX
  glFragmentMaterialivEXT_c
  glFragmentMaterialivSGIX_c
  glFramebufferDrawBufferEXT
  glFramebufferDrawBuffersEXT_c
  glFramebufferFetchBarrierQCOM
  glFramebufferFoveationConfigQCOM_c
  glFramebufferFoveationParametersQCOM
  glFramebufferParameteri
  glFramebufferPixelLocalStorageSizeEXT
  glFramebufferReadBufferEXT
  glFramebufferRenderbuffer
  glFramebufferRenderbufferEXT
  glFramebufferSampleLocationsfvARB_c
  glFramebufferSampleLocationsfvNV_c
  glFramebufferSamplePositionsfvAMD_c
  glFramebufferTexture
  glFramebufferTexture1D
  glFramebufferTexture1DEXT
  glFramebufferTexture2D
  glFramebufferTexture2DEXT
  glFramebufferTexture2DMultisampleEXT
  glFramebufferTexture3D
  glFramebufferTexture3DEXT
  glFramebufferTextureARB
  glFramebufferTextureEXT
  glFramebufferTextureFaceARB
  glFramebufferTextureFaceEXT
  glFramebufferTextureLayer
  glFramebufferTextureLayerARB
  glFramebufferTextureLayerEXT
  glFramebufferTextureLayerNV
  glFramebufferTextureMultisampleMultiviewOVR
  glFramebufferTextureMultiviewOVR
  glFrameTerminatorGREMEDY
  glFrameZoomSGIX
  glFreeObjectBufferATI
  glFrontFace
  glFrustum
  glFrustumf
  glFrustumx
  glGenAsyncMarkersSGIX
  glGenBuffersARB_c
  glGenBuffers_c
  glGenerateMipmap
  glGenerateMipmapEXT
  glGenerateMultiTexMipmapEXT
  glGenerateTextureMipmap
  glGenerateTextureMipmapEXT
  glGenFencesAPPLE_c
  glGenFencesNV_c
  glGenFragmentShadersATI
  glGenFramebuffersEXT_c
  glGenFramebuffers_c
  glGenLists
  glGenMPEGPredictorsSGIX_c
  glGenNamesAMD_c
  glGenOcclusionQueriesNV_c
  glGenPathsNV
  glGenPerfMonitorsAMD_c
  glGenProgramPipelines_c
  glGenProgramsARB_c
  glGenProgramsNV_c
  glGenQueriesANGLE_c
  glGenQueriesARB_c
  glGenQueries_c
  glGenRenderbuffersEXT_c
  glGenRenderbuffers_c
  glGenSamplers_c
  glGenSemaphoresEXT_c
  glGenSymbolsEXT
  glGenTexturesEXT_c
  glGenTextures_c
  glGenTransformFeedbacksNV_c
  glGenTransformFeedbacks_c
  glGenVertexArraysAPPLE_c
  glGenVertexArraysSGIX_c
  glGenVertexArrays_c
  glGenVertexShadersEXT
  glGetActiveAtomicCounterBufferiv_c
  glGetActiveAttribARB_c
  glGetActiveAttrib_c
  glGetActiveSubroutineName_c
  glGetActiveSubroutineUniformiv_c
  glGetActiveSubroutineUniformName_c
  glGetActiveUniformARB_c
  glGetActiveUniformBlockiv_c
  glGetActiveUniformBlockName_c
  glGetActiveUniformName_c
  glGetActiveUniformsiv_c
  glGetActiveUniform_c
  glGetActiveVaryingNV_c
  glGetArrayObjectfvATI_c
  glGetArrayObjectivATI_c
  glGetAttachedObjectsARB_c
  glGetAttachedShaders_c
  glGetAttribLocationARB_c
  glGetAttribLocation_c
  glGetBooleanIndexedvEXT_c
  glGetBooleani_v_c
  glGetBooleanv_c
  glGetBufferParameteri64v_c
  glGetBufferParameterivARB_c
  glGetBufferParameteriv_c
  glGetBufferParameterui64vNV_c
  glGetBufferPointervARB_c
  glGetBufferPointerv_c
  glGetBufferSubDataARB_c
  glGetBufferSubData_c
  glGetClipPlanef_c
  glGetClipPlanex_c
  glGetClipPlane_c
  glGetColorTableEXT_c
  glGetColorTableParameterfvEXT_c
  glGetColorTableParameterfvSGI_c
  glGetColorTableParameterfv_c
  glGetColorTableParameterivEXT_c
  glGetColorTableParameterivSGI_c
  glGetColorTableParameteriv_c
  glGetColorTableSGI_c
  glGetColorTable_c
  glGetCombinerInputParameterfvNV_c
  glGetCombinerInputParameterivNV_c
  glGetCombinerOutputParameterfvNV_c
  glGetCombinerOutputParameterivNV_c
  glGetCombinerStageParameterfvNV_c
  glGetCommandHeaderNV
  glGetCompressedMultiTexImageEXT_c
  glGetCompressedTexImageARB_c
  glGetCompressedTexImage_c
  glGetCompressedTextureImageEXT_c
  glGetCompressedTextureImage_c
  glGetCompressedTextureSubImage_c
  glGetConvolutionFilterEXT_c
  glGetConvolutionFilter_c
  glGetConvolutionParameterfvEXT_c
  glGetConvolutionParameterfv_c
  glGetConvolutionParameterivEXT_c
  glGetConvolutionParameteriv_c
  glGetCoverageModulationTableNV_c
  glGetDebugMessageLogAMD_c
  glGetDebugMessageLogARB_c
  glGetDebugMessageLog_c
  glGetDetailTexFuncSGIS_c
  glGetDoubleIndexedvEXT_c
  glGetDoublei_vEXT_c
  glGetDoublei_v_c
  glGetDoublev_c
  glGetDriverControlsQCOM_c
  glGetDriverControlStringQCOM_c
  glGetError
  glGetExtensionREGAL_c
  glGetFenceivNV_c
  glGetFinalCombinerInputParameterfvNV_c
  glGetFinalCombinerInputParameterivNV_c
  glGetFirstPerfQueryIdINTEL_c
  glGetFixedv_c
  glGetFloatIndexedvEXT_c
  glGetFloati_vEXT_c
  glGetFloati_vNV_c
  glGetFloati_v_c
  glGetFloatv_c
  glGetFogFuncSGIS_c
  glGetFogLayersSGIX_c
  glGetFragDataIndexEXT_c
  glGetFragDataIndex_c
  glGetFragDataLocationEXT_c
  glGetFragDataLocation_c
  glGetFragmentLightfvEXT_c
  glGetFragmentLightfvSGIX_c
  glGetFragmentLightivEXT_c
  glGetFragmentLightivSGIX_c
  glGetFragmentMaterialfvEXT_c
  glGetFragmentMaterialfvSGIX_c
  glGetFragmentMaterialivEXT_c
  glGetFragmentMaterialivSGIX_c
  glGetFramebufferAttachmentParameterivEXT_c
  glGetFramebufferAttachmentParameteriv_c
  glGetFramebufferParameterfvAMD_c
  glGetFramebufferParameterivEXT_c
  glGetFramebufferParameteriv_c
  glGetFramebufferPixelLocalStorageSizeEXT
  glGetGraphicsResetStatus
  glGetGraphicsResetStatusARB
  glGetHandleARB
  glGetHistogramEXT_c
  glGetHistogramParameterfvEXT_c
  glGetHistogramParameterfv_c
  glGetHistogramParameterivEXT_c
  glGetHistogramParameteriv_c
  glGetHistogram_c
  glGetImageHandleARB
  glGetImageHandleNV
  glGetImageTransformParameterfvHP_c
  glGetImageTransformParameterivHP_c
  glGetInfoLogARB_c
  glGetInteger64i_v_c
  glGetInteger64vAPPLE_c
  glGetInteger64v_c
  glGetIntegerIndexedvEXT_c
  glGetIntegeri_vEXT_c
  glGetIntegeri_v_c
  glGetIntegerui64i_vNV_c
  glGetIntegerui64vNV_c
  glGetIntegerv_c
  glGetInternalformati64v_c
  glGetInternalformativ_c
  glGetInternalformatSampleivNV_c
  glGetInvariantBooleanvEXT_c
  glGetInvariantFloatvEXT_c
  glGetInvariantIntegervEXT_c
  glGetLightfv_c
  glGetLightiv_c
  glGetLightxv_c
  glGetLocalConstantBooleanvEXT_c
  glGetLocalConstantFloatvEXT_c
  glGetLocalConstantIntegervEXT_c
  glGetMapAttribParameterfvNV_c
  glGetMapAttribParameterivNV_c
  glGetMapControlPointsNV_c
  glGetMapdv_c
  glGetMapfv_c
  glGetMapiv_c
  glGetMapParameterfvNV_c
  glGetMapParameterivNV_c
  glGetMaterialfv_c
  glGetMaterialiv_c
  glGetMaterialxv_c
  glGetMemoryObjectParameterivEXT_c
  glGetMinmaxEXT_c
  glGetMinmaxParameterfvEXT_c
  glGetMinmaxParameterfv_c
  glGetMinmaxParameterivEXT_c
  glGetMinmaxParameteriv_c
  glGetMinmax_c
  glGetMPEGParameterfvSGIX_c
  glGetMPEGParameterivSGIX_c
  glGetMPEGPredictorSGIX_c
  glGetMPEGQuantTableubv_c
  glGetMultisamplefvNV_c
  glGetMultisamplefv_c
  glGetMultiTexEnvfvEXT_c
  glGetMultiTexEnvivEXT_c
  glGetMultiTexGendvEXT_c
  glGetMultiTexGenfvEXT_c
  glGetMultiTexGenivEXT_c
  glGetMultiTexImageEXT_c
  glGetMultiTexLevelParameterfvEXT_c
  glGetMultiTexLevelParameterivEXT_c
  glGetMultiTexParameterfvEXT_c
  glGetMultiTexParameterIivEXT_c
  glGetMultiTexParameterIuivEXT_c
  glGetMultiTexParameterivEXT_c
  glGetNamedBufferParameteri64v_c
  glGetNamedBufferParameterivEXT_c
  glGetNamedBufferParameteriv_c
  glGetNamedBufferParameterui64vNV_c
  glGetNamedBufferPointervEXT_c
  glGetNamedBufferPointerv_c
  glGetNamedBufferSubDataEXT_c
  glGetNamedBufferSubData_c
  glGetNamedFramebufferAttachmentParameterivEXT_c
  glGetNamedFramebufferAttachmentParameteriv_c
  glGetNamedFramebufferParameterfvAMD_c
  glGetNamedFramebufferParameterivEXT_c
  glGetNamedFramebufferParameteriv_c
  glGetNamedProgramivEXT_c
  glGetNamedProgramLocalParameterdvEXT_c
  glGetNamedProgramLocalParameterfvEXT_c
  glGetNamedProgramLocalParameterIivEXT_c
  glGetNamedProgramLocalParameterIuivEXT_c
  glGetNamedProgramStringEXT_c
  glGetNamedRenderbufferParameterivEXT_c
  glGetNamedRenderbufferParameteriv_c
  glGetNamedStringARB_c
  glGetNamedStringivARB_c
  glGetnColorTableARB_c
  glGetnCompressedTexImageARB_c
  glGetnCompressedTexImage_c
  glGetnConvolutionFilterARB_c
  glGetNextPerfQueryIdINTEL_c
  glGetnHistogramARB_c
  glGetnMapdvARB_c
  glGetnMapfvARB_c
  glGetnMapivARB_c
  glGetnMinmaxARB_c
  glGetNonlinLightfvSGIX_c
  glGetNonlinMaterialfvSGIX_c
  glGetnPixelMapfvARB_c
  glGetnPixelMapuivARB_c
  glGetnPixelMapusvARB_c
  glGetnPolygonStippleARB_c
  glGetnSeparableFilterARB_c
  glGetnTexImageARB_c
  glGetnTexImage_c
  glGetnUniformdvARB_c
  glGetnUniformdv_c
  glGetnUniformfvARB_c
  glGetnUniformfv_c
  glGetnUniformi64vARB_c
  glGetnUniformivARB_c
  glGetnUniformiv_c
  glGetnUniformui64vARB_c
  glGetnUniformuivARB_c
  glGetnUniformuiv_c
  glGetObjectBufferfvATI_c
  glGetObjectBufferivATI_c
  glGetObjectLabelEXT_c
  glGetObjectLabel_c
  glGetObjectParameterfvARB_c
  glGetObjectParameterivAPPLE_c
  glGetObjectParameterivARB_c
  glGetObjectPtrLabel_c
  glGetOcclusionQueryivNV_c
  glGetOcclusionQueryuivNV_c
  glGetPathColorGenfvNV_c
  glGetPathColorGenivNV_c
  glGetPathCommandsNV_c
  glGetPathCoordsNV_c
  glGetPathDashArrayNV_c
  glGetPathLengthNV
  glGetPathMetricRangeNV_c
  glGetPathMetricsNV_c
  glGetPathParameterfvNV_c
  glGetPathParameterivNV_c
  glGetPathSpacingNV_c
  glGetPathTexGenfvNV_c
  glGetPathTexGenivNV_c
  glGetPerfCounterInfoINTEL_c
  glGetPerfMonitorCounterDataAMD_c
  glGetPerfMonitorCounterInfoAMD_c
  glGetPerfMonitorCountersAMD_c
  glGetPerfMonitorCounterStringAMD_c
  glGetPerfMonitorGroupsAMD_c
  glGetPerfMonitorGroupStringAMD_c
  glGetPerfQueryDataINTEL_c
  glGetPerfQueryIdByNameINTEL_c
  glGetPerfQueryInfoINTEL_c
  glGetPixelMapfv_c
  glGetPixelMapuiv_c
  glGetPixelMapusv_c
  glGetPixelTransformParameterfvEXT_c
  glGetPixelTransformParameterfvSGI_c
  glGetPixelTransformParameterivEXT_c
  glGetPixelTransformParameterivSGI_c
  glGetPointerIndexedvEXT_c
  glGetPointeri_vEXT_c
  glGetPointerv_c
  glGetPolygonStipple_c
  glGetProcAddressREGAL_c
  glGetProgramBinary_c
  glGetProgramEnvParameterdvARB_c
  glGetProgramEnvParameterfvARB_c
  glGetProgramInfoLog_c
  glGetProgramInterfaceiv_c
  glGetProgramivARB_c
  glGetProgramivNV_c
  glGetProgramiv_c
  glGetProgramLocalParameterdvARB_c
  glGetProgramLocalParameterfvARB_c
  glGetProgramNamedParameterdvNV_c
  glGetProgramNamedParameterfvNV_c
  glGetProgramParameterdvNV_c
  glGetProgramParameterfvNV_c
  glGetProgramPipelineInfoLog_c
  glGetProgramPipelineiv_c
  glGetProgramResourcefvNV_c
  glGetProgramResourceIndex_c
  glGetProgramResourceiv_c
  glGetProgramResourceLocationIndexEXT_c
  glGetProgramResourceLocationIndex_c
  glGetProgramResourceLocation_c
  glGetProgramResourceName_c
  glGetProgramStageiv_c
  glGetProgramStringARB_c
  glGetProgramStringNV_c
  glGetQueryBufferObjecti64v
  glGetQueryBufferObjectiv
  glGetQueryBufferObjectui64v
  glGetQueryBufferObjectuiv
  glGetQueryIndexediv_c
  glGetQueryivANGLE_c
  glGetQueryivARB_c
  glGetQueryiv_c
  glGetQueryObjecti64vANGLE_c
  glGetQueryObjecti64vEXT_c
  glGetQueryObjecti64v_c
  glGetQueryObjectivANGLE_c
  glGetQueryObjectivARB_c
  glGetQueryObjectiv_c
  glGetQueryObjectui64vANGLE_c
  glGetQueryObjectui64vEXT_c
  glGetQueryObjectui64v_c
  glGetQueryObjectuivANGLE_c
  glGetQueryObjectuivARB_c
  glGetQueryObjectuiv_c
  glGetRenderbufferParameterivEXT_c
  glGetRenderbufferParameteriv_c
  glGetSamplerParameterfv_c
  glGetSamplerParameterIiv_c
  glGetSamplerParameterIuiv_c
  glGetSamplerParameteriv_c
  glGetSemaphoreParameterui64vEXT_c
  glGetSeparableFilterEXT_c
  glGetSeparableFilter_c
  glGetShaderInfoLog_c
  glGetShaderiv_c
  glGetShaderPrecisionFormat_c
  glGetShaderSourceARB_c
  glGetShaderSource_c
  glGetSharpenTexFuncSGIS_c
  glGetStageIndexNV
  glGetString
  glGetSubroutineIndex_c
  glGetSubroutineUniformLocation_c
  glGetSyncivAPPLE_c
  glGetSynciv_c
  glGetTexBumpParameterfvATI_c
  glGetTexBumpParameterivATI_c
  glGetTexEnvfv_c
  glGetTexEnviv_c
  glGetTexEnvxv_c
  glGetTexFilterFuncSGIS_c
  glGetTexGendv_c
  glGetTexGenfv_c
  glGetTexGeniv_c
  glGetTexImage_c
  glGetTexLevelParameterfv_c
  glGetTexLevelParameteriv_c
  glGetTexParameterfv_c
  glGetTexParameterIivEXT_c
  glGetTexParameterIiv_c
  glGetTexParameterIuivEXT_c
  glGetTexParameterIuiv_c
  glGetTexParameteriv_c
  glGetTexParameterPointervAPPLE_c
  glGetTexParameterxv_c
  glGetTextureHandleARB
  glGetTextureHandleNV
  glGetTextureImageEXT_c
  glGetTextureImage_c
  glGetTextureLevelParameterfvEXT_c
  glGetTextureLevelParameterfv_c
  glGetTextureLevelParameterivEXT_c
  glGetTextureLevelParameteriv_c
  glGetTextureParameterfvEXT_c
  glGetTextureParameterfv_c
  glGetTextureParameterIivEXT_c
  glGetTextureParameterIiv_c
  glGetTextureParameterIuivEXT_c
  glGetTextureParameterIuiv_c
  glGetTextureParameterivEXT_c
  glGetTextureParameteriv_c
  glGetTextureSamplerHandleARB
  glGetTextureSamplerHandleNV
  glGetTextureSubImage_c
  glGetTrackMatrixivNV_c
  glGetTransformFeedbacki64_v_c
  glGetTransformFeedbackiv_c
  glGetTransformFeedbacki_v_c
  glGetTransformFeedbackVaryingEXT_c
  glGetTransformFeedbackVaryingNV_c
  glGetTransformFeedbackVarying_c
  glGetTranslatedShaderSourceANGLE_c
  glGetUniformBlockIndex_c
  glGetUniformBufferSizeEXT
  glGetUniformdv_c
  glGetUniformfvARB_c
  glGetUniformfv_c
  glGetUniformi64vARB_c
  glGetUniformi64vNV_c
  glGetUniformIndices_c
  glGetUniformivARB_c
  glGetUniformiv_c
  glGetUniformLocationARB_c
  glGetUniformLocation_c
  glGetUniformOffsetEXT
  glGetUniformSubroutineuiv_c
  glGetUniformui64vARB_c
  glGetUniformui64vNV_c
  glGetUniformuivEXT_c
  glGetUniformuiv_c
  glGetUnsignedBytei_vEXT_c
  glGetUnsignedBytevEXT_c
  glGetVariantArrayObjectfvATI_c
  glGetVariantArrayObjectivATI_c
  glGetVariantBooleanvEXT_c
  glGetVariantFloatvEXT_c
  glGetVariantIntegervEXT_c
  glGetVariantPointervEXT_c
  glGetVaryingLocationNV_c
  glGetVectorOperationSGIX
  glGetVertexArrayIndexed64iv_c
  glGetVertexArrayIndexediv_c
  glGetVertexArrayIntegeri_vEXT_c
  glGetVertexArrayIntegervEXT_c
  glGetVertexArrayiv_c
  glGetVertexArrayPointeri_vEXT_c
  glGetVertexArrayPointervEXT_c
  glGetVertexAttribArrayObjectfvATI_c
  glGetVertexAttribArrayObjectivATI_c
  glGetVertexAttribdvARB_c
  glGetVertexAttribdvNV_c
  glGetVertexAttribdv_c
  glGetVertexAttribfvARB_c
  glGetVertexAttribfvNV_c
  glGetVertexAttribfv_c
  glGetVertexAttribIivEXT_c
  glGetVertexAttribIiv_c
  glGetVertexAttribIuivEXT_c
  glGetVertexAttribIuiv_c
  glGetVertexAttribivARB_c
  glGetVertexAttribivNV_c
  glGetVertexAttribiv_c
  glGetVertexAttribLdvEXT_c
  glGetVertexAttribLdv_c
  glGetVertexAttribLi64vNV_c
  glGetVertexAttribLui64vARB_c
  glGetVertexAttribLui64vNV_c
  glGetVertexAttribPointervARB_c
  glGetVertexAttribPointervNV_c
  glGetVertexAttribPointerv_c
  glGetVideoCaptureivNV_c
  glGetVideoCaptureStreamdvNV_c
  glGetVideoCaptureStreamfvNV_c
  glGetVideoCaptureStreamivNV_c
  glGetVideoi64vNV_c
  glGetVideoivNV_c
  glGetVideoui64vNV_c
  glGetVideouivNV_c
  glGetVkProcAddrNV_c
  glGlobalAlphaFactorbSUN
  glGlobalAlphaFactordSUN
  glGlobalAlphaFactorfSUN
  glGlobalAlphaFactoriSUN
  glGlobalAlphaFactorsSUN
  glGlobalAlphaFactorubSUN
  glGlobalAlphaFactoruiSUN
  glGlobalAlphaFactorusSUN
  glHint
  glHistogram
  glHistogramEXT
  glIglooInterfaceSGIX_c
  glImageTransformParameterfHP
  glImageTransformParameterfvHP_c
  glImageTransformParameteriHP
  glImageTransformParameterivHP_c
  glImportMemoryFdEXT
  glImportMemoryWin32HandleEXT_c
  glImportMemoryWin32NameEXT_c
  glImportSemaphoreFdEXT
  glImportSemaphoreWin32HandleEXT_c
  glImportSemaphoreWin32NameEXT_c
  glImportSyncEXT
  glIndexd
  glIndexdv_c
  glIndexf
  glIndexFormatNV
  glIndexFuncEXT
  glIndexfv_c
  glIndexi
  glIndexiv_c
  glIndexMask
  glIndexMaterialEXT
  glIndexPointerEXT_c
  glIndexPointerListIBM_c
  glIndexPointer_c
  glIndexs
  glIndexsv_c
  glIndexub
  glIndexubv_c
  glInitNames
  glInsertComponentEXT
  glInsertEventMarkerEXT_c
  glInterleavedArrays_c
  glInterleavedTextureCoordSetsSGIS
  glInterpolatePathsNV
  glInvalidateBufferData
  glInvalidateBufferSubData
  glInvalidateFramebuffer_c
  glInvalidateNamedFramebufferData_c
  glInvalidateNamedFramebufferSubData_c
  glInvalidateSubFramebuffer_c
  glInvalidateTexImage
  glInvalidateTexSubImage
  glIsAsyncMarkerSGIX
  glIsBuffer
  glIsBufferARB
  glIsBufferResidentNV
  glIsCommandListNV
  glIsEnabled
  glIsEnabledi
  glIsEnablediEXT
  glIsEnabledIndexedEXT
  glIsEnablediNV
  glIsFenceAPPLE
  glIsFenceNV
  glIsFramebuffer
  glIsFramebufferEXT
  glIsImageHandleResidentARB
  glIsImageHandleResidentNV
  glIsList
  glIsMemoryObjectEXT
  glIsMPEGPredictorSGIX
  glIsNameAMD
  glIsNamedBufferResidentNV
  glIsNamedStringARB_c
  glIsObjectBufferATI
  glIsOcclusionQueryNV
  glIsPathNV
  glIsPointInFillPathNV
  glIsPointInStrokePathNV
  glIsProgram
  glIsProgramARB
  glIsProgramNV
  glIsProgramPipeline
  glIsQuery
  glIsQueryANGLE
  glIsQueryARB
  glIsRenderbuffer
  glIsRenderbufferEXT
  glIsSampler
  glIsSemaphoreEXT
  glIsShader
  glIsStateNV
  glIsSupportedREGAL_c
  glIsSync
  glIsSyncAPPLE
  glIsTexture
  glIsTextureEXT
  glIsTextureHandleResidentARB
  glIsTextureHandleResidentNV
  glIsTransformFeedback
  glIsTransformFeedbackNV
  glIsVariantEnabledEXT
  glIsVertexArray
  glIsVertexArrayAPPLE
  glIsVertexArraySGIX
  glIsVertexAttribEnabledAPPLE
  glLabelObjectEXT_c
  glLGPUCopyImageSubDataNVX
  glLGPUInterlockNVX
  glLGPUNamedBufferSubDataNVX_c
  glLightEnviEXT
  glLightf
  glLightfv_c
  glLighti
  glLightiv_c
  glLightModelf
  glLightModelfv_c
  glLightModeli
  glLightModeliv_c
  glLightModelx
  glLightModelxv_c
  glLightx
  glLightxv_c
  glLineStipple
  glLineWidth
  glLineWidthx
  glLinkProgram
  glLinkProgramARB
  glListBase
  glListDrawCommandsStatesClientNV_c
  glLoadIdentity
  glLoadIdentityDeformationMapSGIX
  glLoadMatrixd_c
  glLoadMatrixf_c
  glLoadMatrixx_c
  glLoadName
  glLoadProgramNV_c
  glLoadTransposeMatrixdARB_c
  glLoadTransposeMatrixd_c
  glLoadTransposeMatrixfARB_c
  glLoadTransposeMatrixf_c
  glLockArraysEXT
  glLogicOp
  glLogMessageCallbackREGAL
  glMakeBufferNonResidentNV
  glMakeBufferResidentNV
  glMakeImageHandleNonResidentARB
  glMakeImageHandleNonResidentNV
  glMakeImageHandleResidentARB
  glMakeImageHandleResidentNV
  glMakeNamedBufferNonResidentNV
  glMakeNamedBufferResidentNV
  glMakeTextureHandleNonResidentARB
  glMakeTextureHandleNonResidentNV
  glMakeTextureHandleResidentARB
  glMakeTextureHandleResidentNV
  glMap1d_c
  glMap1f_c
  glMap2d_c
  glMap2f_c
  glMapBufferARB_c
  glMapBufferRangeEXT_c
  glMapBufferRange_c
  glMapBuffer_c
  glMapControlPointsNV_c
  glMapGrid1d
  glMapGrid1f
  glMapGrid2d
  glMapGrid2f
  glMapNamedBufferEXT_c
  glMapNamedBufferRangeEXT_c
  glMapNamedBufferRange_c
  glMapNamedBuffer_c
  glMapObjectBufferATI_c
  glMapParameterfvNV_c
  glMapParameterivNV_c
  glMapTexture2DINTEL_c
  glMapVertexAttrib1dAPPLE_c
  glMapVertexAttrib1fAPPLE_c
  glMapVertexAttrib2dAPPLE_c
  glMapVertexAttrib2fAPPLE_c
  glMaterialf
  glMaterialfv_c
  glMateriali
  glMaterialiv_c
  glMaterialx
  glMaterialxv_c
  glMatrixFrustumEXT
  glMatrixIndexPointerARB_c
  glMatrixIndexubvARB_c
  glMatrixIndexuivARB_c
  glMatrixIndexusvARB_c
  glMatrixLoad3x2fNV_c
  glMatrixLoad3x3fNV_c
  glMatrixLoaddEXT_c
  glMatrixLoadfEXT_c
  glMatrixLoadIdentityEXT
  glMatrixLoadTranspose3x3fNV_c
  glMatrixLoadTransposedEXT_c
  glMatrixLoadTransposefEXT_c
  glMatrixMode
  glMatrixMult3x2fNV_c
  glMatrixMult3x3fNV_c
  glMatrixMultdEXT_c
  glMatrixMultfEXT_c
  glMatrixMultTranspose3x3fNV_c
  glMatrixMultTransposedEXT_c
  glMatrixMultTransposefEXT_c
  glMatrixOrthoEXT
  glMatrixPopEXT
  glMatrixPushEXT
  glMatrixRotatedEXT
  glMatrixRotatefEXT
  glMatrixScaledEXT
  glMatrixScalefEXT
  glMatrixTranslatedEXT
  glMatrixTranslatefEXT
  glMaxShaderCompilerThreadsARB
  glMaxShaderCompilerThreadsKHR
  glMemoryBarrier
  glMemoryBarrierByRegion
  glMemoryBarrierEXT
  glMemoryObjectParameterivEXT_c
  glMeshBreadthSGIX
  glMeshStrideSGIX
  glMinmax
  glMinmaxEXT
  glMinSampleShading
  glMinSampleShadingARB
  glMPEGPredictorSGIX_c
  glMPEGQuantTableubv_c
  glMulticastBarrierNV
  glMulticastBlitFramebufferNV
  glMulticastBufferSubDataNV_c
  glMulticastCopyBufferSubDataNV
  glMulticastCopyImageSubDataNV
  glMulticastFramebufferSampleLocationsfvNV_c
  glMulticastGetQueryObjecti64vNV_c
  glMulticastGetQueryObjectivNV_c
  glMulticastGetQueryObjectui64vNV_c
  glMulticastGetQueryObjectuivNV_c
  glMulticastWaitSyncNV
  glMultiDrawArraysEXT_c
  glMultiDrawArraysIndirectAMD_c
  glMultiDrawArraysIndirectBindlessCountNV_c
  glMultiDrawArraysIndirectBindlessNV_c
  glMultiDrawArraysIndirectCountARB_c
  glMultiDrawArraysIndirectCount_c
  glMultiDrawArraysIndirectEXT_c
  glMultiDrawArraysIndirect_c
  glMultiDrawArrays_c
  glMultiDrawElementArrayAPPLE_c
  glMultiDrawElementsBaseVertexEXT_c
  glMultiDrawElementsBaseVertex_c
  glMultiDrawElementsEXT_c
  glMultiDrawElementsIndirectAMD_c
  glMultiDrawElementsIndirectBindlessCountNV_c
  glMultiDrawElementsIndirectBindlessNV_c
  glMultiDrawElementsIndirectCountARB_c
  glMultiDrawElementsIndirectCount_c
  glMultiDrawElementsIndirectEXT_c
  glMultiDrawElementsIndirect_c
  glMultiDrawElements_c
  glMultiDrawRangeElementArrayAPPLE_c
  glMultiModeDrawArraysIBM_c
  glMultiModeDrawElementsIBM_c
  glMultisampleSubRectPosSGIS
  glMultiTexBufferEXT
  glMultiTexCoord1d
  glMultiTexCoord1dARB
  glMultiTexCoord1dvARB_c
  glMultiTexCoord1dv_c
  glMultiTexCoord1f
  glMultiTexCoord1fARB
  glMultiTexCoord1fvARB_c
  glMultiTexCoord1fv_c
  glMultiTexCoord1hNV
  glMultiTexCoord1hvNV_c
  glMultiTexCoord1i
  glMultiTexCoord1iARB
  glMultiTexCoord1ivARB_c
  glMultiTexCoord1iv_c
  glMultiTexCoord1s
  glMultiTexCoord1sARB
  glMultiTexCoord1svARB_c
  glMultiTexCoord1sv_c
  glMultiTexCoord2d
  glMultiTexCoord2dARB
  glMultiTexCoord2dvARB_c
  glMultiTexCoord2dv_c
  glMultiTexCoord2f
  glMultiTexCoord2fARB
  glMultiTexCoord2fvARB_c
  glMultiTexCoord2fv_c
  glMultiTexCoord2hNV
  glMultiTexCoord2hvNV_c
  glMultiTexCoord2i
  glMultiTexCoord2iARB
  glMultiTexCoord2ivARB_c
  glMultiTexCoord2iv_c
  glMultiTexCoord2s
  glMultiTexCoord2sARB
  glMultiTexCoord2svARB_c
  glMultiTexCoord2sv_c
  glMultiTexCoord3d
  glMultiTexCoord3dARB
  glMultiTexCoord3dvARB_c
  glMultiTexCoord3dv_c
  glMultiTexCoord3f
  glMultiTexCoord3fARB
  glMultiTexCoord3fvARB_c
  glMultiTexCoord3fv_c
  glMultiTexCoord3hNV
  glMultiTexCoord3hvNV_c
  glMultiTexCoord3i
  glMultiTexCoord3iARB
  glMultiTexCoord3ivARB_c
  glMultiTexCoord3iv_c
  glMultiTexCoord3s
  glMultiTexCoord3sARB
  glMultiTexCoord3svARB_c
  glMultiTexCoord3sv_c
  glMultiTexCoord4d
  glMultiTexCoord4dARB
  glMultiTexCoord4dvARB_c
  glMultiTexCoord4dv_c
  glMultiTexCoord4f
  glMultiTexCoord4fARB
  glMultiTexCoord4fvARB_c
  glMultiTexCoord4fv_c
  glMultiTexCoord4hNV
  glMultiTexCoord4hvNV_c
  glMultiTexCoord4i
  glMultiTexCoord4iARB
  glMultiTexCoord4ivARB_c
  glMultiTexCoord4iv_c
  glMultiTexCoord4s
  glMultiTexCoord4sARB
  glMultiTexCoord4svARB_c
  glMultiTexCoord4sv_c
  glMultiTexCoord4x
  glMultiTexCoordP1ui
  glMultiTexCoordP1uiv_c
  glMultiTexCoordP2ui
  glMultiTexCoordP2uiv_c
  glMultiTexCoordP3ui
  glMultiTexCoordP3uiv_c
  glMultiTexCoordP4ui
  glMultiTexCoordP4uiv_c
  glMultiTexCoordPointerEXT_c
  glMultiTexEnvfEXT
  glMultiTexEnvfvEXT_c
  glMultiTexEnviEXT
  glMultiTexEnvivEXT_c
  glMultiTexGendEXT
  glMultiTexGendvEXT_c
  glMultiTexGenfEXT
  glMultiTexGenfvEXT_c
  glMultiTexGeniEXT
  glMultiTexGenivEXT_c
  glMultiTexImage1DEXT_c
  glMultiTexImage2DEXT_c
  glMultiTexImage3DEXT_c
  glMultiTexParameterfEXT
  glMultiTexParameterfvEXT_c
  glMultiTexParameteriEXT
  glMultiTexParameterIivEXT_c
  glMultiTexParameterIuivEXT_c
  glMultiTexParameterivEXT_c
  glMultiTexRenderbufferEXT
  glMultiTexSubImage1DEXT_c
  glMultiTexSubImage2DEXT_c
  glMultiTexSubImage3DEXT_c
  glMultMatrixd_c
  glMultMatrixf_c
  glMultMatrixx_c
  glMultTransposeMatrixdARB_c
  glMultTransposeMatrixd_c
  glMultTransposeMatrixfARB_c
  glMultTransposeMatrixf_c
  glNamedBufferDataEXT_c
  glNamedBufferData_c
  glNamedBufferStorageExternalEXT
  glNamedBufferStorageEXT_c
  glNamedBufferStorageMemEXT
  glNamedBufferStorage_c
  glNamedBufferSubDataEXT_c
  glNamedBufferSubData_c
  glNamedCopyBufferSubDataEXT
  glNamedFramebufferDrawBuffer
  glNamedFramebufferDrawBuffers_c
  glNamedFramebufferParameteri
  glNamedFramebufferParameteriEXT
  glNamedFramebufferReadBuffer
  glNamedFramebufferRenderbuffer
  glNamedFramebufferRenderbufferEXT
  glNamedFramebufferSampleLocationsfvARB_c
  glNamedFramebufferSampleLocationsfvNV_c
  glNamedFramebufferSamplePositionsfvAMD_c
  glNamedFramebufferTexture
  glNamedFramebufferTexture1DEXT
  glNamedFramebufferTexture2DEXT
  glNamedFramebufferTexture3DEXT
  glNamedFramebufferTextureEXT
  glNamedFramebufferTextureFaceEXT
  glNamedFramebufferTextureLayer
  glNamedFramebufferTextureLayerEXT
  glNamedProgramLocalParameter4dEXT
  glNamedProgramLocalParameter4dvEXT_c
  glNamedProgramLocalParameter4fEXT
  glNamedProgramLocalParameter4fvEXT_c
  glNamedProgramLocalParameterI4iEXT
  glNamedProgramLocalParameterI4ivEXT_c
  glNamedProgramLocalParameterI4uiEXT
  glNamedProgramLocalParameterI4uivEXT_c
  glNamedProgramLocalParameters4fvEXT_c
  glNamedProgramLocalParametersI4ivEXT_c
  glNamedProgramLocalParametersI4uivEXT_c
  glNamedProgramStringEXT_c
  glNamedRenderbufferStorage
  glNamedRenderbufferStorageEXT
  glNamedRenderbufferStorageMultisample
  glNamedRenderbufferStorageMultisampleCoverageEXT
  glNamedRenderbufferStorageMultisampleEXT
  glNamedStringARB_c
  glNewBufferRegion
  glNewList
  glNewObjectBufferATI_c
  glNonlinLightfvSGIX_c
  glNonlinMaterialfvSGIX_c
  glNormal3b
  glNormal3bv_c
  glNormal3d
  glNormal3dv_c
  glNormal3f
  glNormal3fVertex3fSUN
  glNormal3fVertex3fvSUN_c
  glNormal3fv_c
  glNormal3hNV
  glNormal3hvNV_c
  glNormal3i
  glNormal3iv_c
  glNormal3s
  glNormal3sv_c
  glNormal3x
  glNormalFormatNV
  glNormalP3ui
  glNormalP3uiv_c
  glNormalPointerEXT_c
  glNormalPointerListIBM_c
  glNormalPointervINTEL_c
  glNormalPointer_c
  glNormalStream3bATI
  glNormalStream3bvATI_c
  glNormalStream3dATI
  glNormalStream3dvATI_c
  glNormalStream3fATI
  glNormalStream3fvATI_c
  glNormalStream3iATI
  glNormalStream3ivATI_c
  glNormalStream3sATI
  glNormalStream3svATI_c
  glObjectLabel_c
  glObjectPtrLabel_c
  glObjectPurgeableAPPLE
  glObjectUnpurgeableAPPLE
  glOrtho
  glOrthof
  glOrthox
  glPassTexCoordATI
  glPassThrough
  glPatchParameterfv_c
  glPatchParameteri
  glPathColorGenNV_c
  glPathCommandsNV_c
  glPathCoordsNV_c
  glPathCoverDepthFuncNV
  glPathDashArrayNV_c
  glPathFogGenNV
  glPathGlyphIndexArrayNV_c
  glPathGlyphIndexRangeNV_c
  glPathGlyphRangeNV_c
  glPathGlyphsNV_c
  glPathMemoryGlyphIndexArrayNV_c
  glPathParameterfNV
  glPathParameterfvNV_c
  glPathParameteriNV
  glPathParameterivNV_c
  glPathStencilDepthOffsetNV
  glPathStencilFuncNV
  glPathStringNV_c
  glPathSubCommandsNV_c
  glPathSubCoordsNV_c
  glPathTexGenNV_c
  glPauseTransformFeedback
  glPauseTransformFeedbackNV
  glPixelDataRangeNV_c
  glPixelMapfv_c
  glPixelMapuiv_c
  glPixelMapusv_c
  glPixelStoref
  glPixelStorei
  glPixelTexGenSGIX
  glPixelTransferf
  glPixelTransferi
  glPixelTransformParameterfEXT
  glPixelTransformParameterfSGI
  glPixelTransformParameterfvEXT_c
  glPixelTransformParameterfvSGI_c
  glPixelTransformParameteriEXT
  glPixelTransformParameteriSGI
  glPixelTransformParameterivEXT_c
  glPixelTransformParameterivSGI_c
  glPixelTransformSGI
  glPixelZoom
  glPNTrianglesfATI
  glPNTrianglesiATI
  glPointAlongPathNV_c
  glPointParameterf
  glPointParameterfARB
  glPointParameterfEXT
  glPointParameterfvARB_c
  glPointParameterfvEXT_c
  glPointParameterfv_c
  glPointParameteri
  glPointParameteriNV
  glPointParameterivNV_c
  glPointParameteriv_c
  glPointParameterx
  glPointParameterxv_c
  glPointSize
  glPointSizePointerOES_c
  glPointSizex
  glPollAsyncSGIX_c
  glPolygonMode
  glPolygonModeNV
  glPolygonOffset
  glPolygonOffsetClamp
  glPolygonOffsetClampEXT
  glPolygonOffsetEXT
  glPolygonOffsetx
  glPolygonStipple_c
  glPopAttrib
  glPopClientAttrib
  glPopDebugGroup
  glPopGroupMarkerEXT
  glPopMatrix
  glPopName
  glPresentFrameDualFillNV
  glPresentFrameKeyedNV
  glPrimitiveBoundingBoxARB
  glPrimitiveRestartIndex
  glPrimitiveRestartIndexNV
  glPrimitiveRestartNV
  glPrioritizeTexturesEXT_c
  glPrioritizeTextures_c
  glPrioritizeVertexArraysSGIX_c
  glProgramBinary_c
  glProgramBufferParametersfvNV_c
  glProgramBufferParametersIivNV_c
  glProgramBufferParametersIuivNV_c
  glProgramEnvParameter4dARB
  glProgramEnvParameter4dvARB_c
  glProgramEnvParameter4fARB
  glProgramEnvParameter4fvARB_c
  glProgramEnvParameterI4iNV
  glProgramEnvParameterI4ivNV_c
  glProgramEnvParameterI4uiNV
  glProgramEnvParameterI4uivNV_c
  glProgramEnvParameters4fvEXT_c
  glProgramEnvParametersI4ivNV_c
  glProgramEnvParametersI4uivNV_c
  glProgramLocalParameter4dARB
  glProgramLocalParameter4dvARB_c
  glProgramLocalParameter4fARB
  glProgramLocalParameter4fvARB_c
  glProgramLocalParameterI4iNV
  glProgramLocalParameterI4ivNV_c
  glProgramLocalParameterI4uiNV
  glProgramLocalParameterI4uivNV_c
  glProgramLocalParameters4fvEXT_c
  glProgramLocalParametersI4ivNV_c
  glProgramLocalParametersI4uivNV_c
  glProgramNamedParameter4dNV_c
  glProgramNamedParameter4dvNV_c
  glProgramNamedParameter4fNV_c
  glProgramNamedParameter4fvNV_c
  glProgramParameter4dNV
  glProgramParameter4dvNV_c
  glProgramParameter4fNV
  glProgramParameter4fvNV_c
  glProgramParameteri
  glProgramParameteriARB
  glProgramParameteriEXT
  glProgramParameters4dvNV_c
  glProgramParameters4fvNV_c
  glProgramPathFragmentInputGenNV_c
  glProgramStringARB_c
  glProgramUniform1d
  glProgramUniform1dv_c
  glProgramUniform1f
  glProgramUniform1fEXT
  glProgramUniform1fvEXT_c
  glProgramUniform1fv_c
  glProgramUniform1i
  glProgramUniform1i64ARB
  glProgramUniform1i64NV
  glProgramUniform1i64vARB_c
  glProgramUniform1i64vNV_c
  glProgramUniform1iEXT
  glProgramUniform1ivEXT_c
  glProgramUniform1iv_c
  glProgramUniform1ui
  glProgramUniform1ui64ARB
  glProgramUniform1ui64NV
  glProgramUniform1ui64vARB_c
  glProgramUniform1ui64vNV_c
  glProgramUniform1uiEXT
  glProgramUniform1uivEXT_c
  glProgramUniform1uiv_c
  glProgramUniform2d
  glProgramUniform2dv_c
  glProgramUniform2f
  glProgramUniform2fEXT
  glProgramUniform2fvEXT_c
  glProgramUniform2fv_c
  glProgramUniform2i
  glProgramUniform2i64ARB
  glProgramUniform2i64NV
  glProgramUniform2i64vARB_c
  glProgramUniform2i64vNV_c
  glProgramUniform2iEXT
  glProgramUniform2ivEXT_c
  glProgramUniform2iv_c
  glProgramUniform2ui
  glProgramUniform2ui64ARB
  glProgramUniform2ui64NV
  glProgramUniform2ui64vARB_c
  glProgramUniform2ui64vNV_c
  glProgramUniform2uiEXT
  glProgramUniform2uivEXT_c
  glProgramUniform2uiv_c
  glProgramUniform3d
  glProgramUniform3dv_c
  glProgramUniform3f
  glProgramUniform3fEXT
  glProgramUniform3fvEXT_c
  glProgramUniform3fv_c
  glProgramUniform3i
  glProgramUniform3i64ARB
  glProgramUniform3i64NV
  glProgramUniform3i64vARB_c
  glProgramUniform3i64vNV_c
  glProgramUniform3iEXT
  glProgramUniform3ivEXT_c
  glProgramUniform3iv_c
  glProgramUniform3ui
  glProgramUniform3ui64ARB
  glProgramUniform3ui64NV
  glProgramUniform3ui64vARB_c
  glProgramUniform3ui64vNV_c
  glProgramUniform3uiEXT
  glProgramUniform3uivEXT_c
  glProgramUniform3uiv_c
  glProgramUniform4d
  glProgramUniform4dv_c
  glProgramUniform4f
  glProgramUniform4fEXT
  glProgramUniform4fvEXT_c
  glProgramUniform4fv_c
  glProgramUniform4i
  glProgramUniform4i64ARB
  glProgramUniform4i64NV
  glProgramUniform4i64vARB_c
  glProgramUniform4i64vNV_c
  glProgramUniform4iEXT
  glProgramUniform4ivEXT_c
  glProgramUniform4iv_c
  glProgramUniform4ui
  glProgramUniform4ui64ARB
  glProgramUniform4ui64NV
  glProgramUniform4ui64vARB_c
  glProgramUniform4ui64vNV_c
  glProgramUniform4uiEXT
  glProgramUniform4uivEXT_c
  glProgramUniform4uiv_c
  glProgramUniformHandleui64ARB
  glProgramUniformHandleui64NV
  glProgramUniformHandleui64vARB_c
  glProgramUniformHandleui64vNV_c
  glProgramUniformMatrix2dv_c
  glProgramUniformMatrix2fvEXT_c
  glProgramUniformMatrix2fv_c
  glProgramUniformMatrix2x3dv_c
  glProgramUniformMatrix2x3fvEXT_c
  glProgramUniformMatrix2x3fv_c
  glProgramUniformMatrix2x4dv_c
  glProgramUniformMatrix2x4fvEXT_c
  glProgramUniformMatrix2x4fv_c
  glProgramUniformMatrix3dv_c
  glProgramUniformMatrix3fvEXT_c
  glProgramUniformMatrix3fv_c
  glProgramUniformMatrix3x2dv_c
  glProgramUniformMatrix3x2fvEXT_c
  glProgramUniformMatrix3x2fv_c
  glProgramUniformMatrix3x4dv_c
  glProgramUniformMatrix3x4fvEXT_c
  glProgramUniformMatrix3x4fv_c
  glProgramUniformMatrix4dv_c
  glProgramUniformMatrix4fvEXT_c
  glProgramUniformMatrix4fv_c
  glProgramUniformMatrix4x2dv_c
  glProgramUniformMatrix4x2fvEXT_c
  glProgramUniformMatrix4x2fv_c
  glProgramUniformMatrix4x3dv_c
  glProgramUniformMatrix4x3fvEXT_c
  glProgramUniformMatrix4x3fv_c
  glProgramUniformui64NV
  glProgramUniformui64vNV_c
  glProgramVertexLimitNV
  glProvokingVertex
  glProvokingVertexEXT
  glPushAttrib
  glPushClientAttrib
  glPushClientAttribDefaultEXT
  glPushDebugGroup_c
  glPushGroupMarkerEXT_c
  glPushMatrix
  glPushName
  glQueryCounter
  glQueryCounterANGLE
  glQueryObjectParameteruiAMD
  glRasterPos2d
  glRasterPos2dv_c
  glRasterPos2f
  glRasterPos2fv_c
  glRasterPos2i
  glRasterPos2iv_c
  glRasterPos2s
  glRasterPos2sv_c
  glRasterPos3d
  glRasterPos3dv_c
  glRasterPos3f
  glRasterPos3fv_c
  glRasterPos3i
  glRasterPos3iv_c
  glRasterPos3s
  glRasterPos3sv_c
  glRasterPos4d
  glRasterPos4dv_c
  glRasterPos4f
  glRasterPos4fv_c
  glRasterPos4i
  glRasterPos4iv_c
  glRasterPos4s
  glRasterPos4sv_c
  glRasterSamplesEXT
  glReadBuffer
  glReadBufferIndexedEXT
  glReadBufferRegion
  glReadnPixelsARB_c
  glReadnPixels_c
  glReadPixels_c
  glReadVideoPixelsSUN_c
  glRectd
  glRectdv_c
  glRectf
  glRectfv_c
  glRecti
  glRectiv_c
  glRects
  glRectsv_c
  glReferencePlaneSGIX_c
  glReleaseKeyedMutexWin32EXT
  glReleaseShaderCompiler
  glRenderbufferStorage
  glRenderbufferStorageEXT
  glRenderbufferStorageMultisample
  glRenderbufferStorageMultisampleANGLE
  glRenderbufferStorageMultisampleAPPLE
  glRenderbufferStorageMultisampleCoverageNV
  glRenderbufferStorageMultisampleEXT
  glRenderbufferStorageMultisampleNV
  glRenderGpuMaskNV
  glRenderMode
  glReplacementCodePointerSUN_c
  glReplacementCodeubSUN
  glReplacementCodeubvSUN_c
  glReplacementCodeuiColor3fVertex3fSUN
  glReplacementCodeuiColor3fVertex3fvSUN_c
  glReplacementCodeuiColor4fNormal3fVertex3fSUN
  glReplacementCodeuiColor4fNormal3fVertex3fvSUN_c
  glReplacementCodeuiColor4ubVertex3fSUN
  glReplacementCodeuiColor4ubVertex3fvSUN_c
  glReplacementCodeuiNormal3fVertex3fSUN
  glReplacementCodeuiNormal3fVertex3fvSUN_c
  glReplacementCodeuiSUN
  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN
  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_c
  glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN
  glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_c
  glReplacementCodeuiTexCoord2fVertex3fSUN
  glReplacementCodeuiTexCoord2fVertex3fvSUN_c
  glReplacementCodeuiVertex3fSUN
  glReplacementCodeuiVertex3fvSUN_c
  glReplacementCodeuivSUN_c
  glReplacementCodeusSUN
  glReplacementCodeusvSUN_c
  glRequestResidentProgramsNV_c
  glResetHistogram
  glResetHistogramEXT
  glResetMinmax
  glResetMinmaxEXT
  glResizeBuffersMESA
  glResolveMultisampleFramebufferAPPLE
  glResumeTransformFeedback
  glResumeTransformFeedbackNV
  glRotated
  glRotatef
  glRotatex
  glSampleCoverage
  glSampleCoverageARB
  glSampleCoveragex
  glSampleMapATI
  glSampleMaskEXT
  glSampleMaski
  glSampleMaskIndexedNV
  glSampleMaskSGIS
  glSamplePatternEXT
  glSamplePatternSGIS
  glSamplerParameterf
  glSamplerParameterfv_c
  glSamplerParameteri
  glSamplerParameterIiv_c
  glSamplerParameterIuiv_c
  glSamplerParameteriv_c
  glScaled
  glScalef
  glScalex
  glScissor
  glScissorArrayvNV_c
  glScissorArrayv_c
  glScissorIndexed
  glScissorIndexedNV
  glScissorIndexedvNV_c
  glScissorIndexedv_c
  glSecondaryColor3b
  glSecondaryColor3bEXT
  glSecondaryColor3bvEXT_c
  glSecondaryColor3bv_c
  glSecondaryColor3d
  glSecondaryColor3dEXT
  glSecondaryColor3dvEXT_c
  glSecondaryColor3dv_c
  glSecondaryColor3f
  glSecondaryColor3fEXT
  glSecondaryColor3fvEXT_c
  glSecondaryColor3fv_c
  glSecondaryColor3hNV
  glSecondaryColor3hvNV_c
  glSecondaryColor3i
  glSecondaryColor3iEXT
  glSecondaryColor3ivEXT_c
  glSecondaryColor3iv_c
  glSecondaryColor3s
  glSecondaryColor3sEXT
  glSecondaryColor3svEXT_c
  glSecondaryColor3sv_c
  glSecondaryColor3ub
  glSecondaryColor3ubEXT
  glSecondaryColor3ubvEXT_c
  glSecondaryColor3ubv_c
  glSecondaryColor3ui
  glSecondaryColor3uiEXT
  glSecondaryColor3uivEXT_c
  glSecondaryColor3uiv_c
  glSecondaryColor3us
  glSecondaryColor3usEXT
  glSecondaryColor3usvEXT_c
  glSecondaryColor3usv_c
  glSecondaryColorFormatNV
  glSecondaryColorP3ui
  glSecondaryColorP3uiv_c
  glSecondaryColorPointerEXT_c
  glSecondaryColorPointerListIBM_c
  glSecondaryColorPointer_c
  glSelectBuffer_c
  glSelectPerfMonitorCountersAMD_c
  glSelectTextureCoordSetSGIS
  glSelectTextureSGIS
  glSelectTextureTransformSGIS
  glSemaphoreParameterui64vEXT_c
  glSeparableFilter2DEXT_c
  glSeparableFilter2D_c
  glSetFenceAPPLE
  glSetFenceNV
  glSetFragmentShaderConstantATI_c
  glSetInvariantEXT_c
  glSetLocalConstantEXT_c
  glSetMultisamplefvAMD_c
  glShadeModel
  glShaderBinary_c
  glShaderOp1EXT
  glShaderOp2EXT
  glShaderOp3EXT
  glShaderSourceARB_c
  glShaderSource_c
  glShaderSource_p
  glShaderStorageBlockBinding
  glSharpenTexFuncSGIS_c
  glSignalSemaphoreEXT_c
  glSignalVkFenceNV
  glSignalVkSemaphoreNV
  glSpecializeShaderARB_c
  glSpecializeShader_c
  glSpriteParameterfSGIX
  glSpriteParameterfvSGIX_c
  glSpriteParameteriSGIX
  glSpriteParameterivSGIX_c
  glStartTilingQCOM
  glStateCaptureNV
  glStencilFillPathInstancedNV_c
  glStencilFillPathNV
  glStencilFunc
  glStencilFuncSeparate
  glStencilFuncSeparateATI
  glStencilMask
  glStencilMaskSeparate
  glStencilOp
  glStencilOpSeparate
  glStencilOpSeparateATI
  glStencilOpValueAMD
  glStencilStrokePathInstancedNV_c
  glStencilStrokePathNV
  glStencilThenCoverFillPathInstancedNV_c
  glStencilThenCoverFillPathNV
  glStencilThenCoverStrokePathInstancedNV_c
  glStencilThenCoverStrokePathNV
  glStereoParameterfNV
  glStereoParameteriNV
  glStringMarkerGREMEDY_c
  glSubpixelPrecisionBiasNV
  glSwapMPEGPredictorsSGIX
  glSwizzleEXT
  glSyncTextureINTEL
  glTagSampleBufferSGIX
  glTangentPointerEXT_c
  glTbufferMask3DFX
  glTessellationFactorAMD
  glTessellationModeAMD
  glTestFenceAPPLE
  glTestFenceNV
  glTestObjectAPPLE
  glTexBuffer
  glTexBufferARB
  glTexBufferEXT
  glTexBufferRange
  glTexBumpParameterfvATI_c
  glTexBumpParameterivATI_c
  glTexCoord1d
  glTexCoord1dv_c
  glTexCoord1f
  glTexCoord1fv_c
  glTexCoord1hNV
  glTexCoord1hvNV_c
  glTexCoord1i
  glTexCoord1iv_c
  glTexCoord1s
  glTexCoord1sv_c
  glTexCoord2d
  glTexCoord2dv_c
  glTexCoord2f
  glTexCoord2fColor3fVertex3fSUN
  glTexCoord2fColor3fVertex3fvSUN_c
  glTexCoord2fColor4fNormal3fVertex3fSUN
  glTexCoord2fColor4fNormal3fVertex3fvSUN_c
  glTexCoord2fColor4ubVertex3fSUN
  glTexCoord2fColor4ubVertex3fvSUN_c
  glTexCoord2fNormal3fVertex3fSUN
  glTexCoord2fNormal3fVertex3fvSUN_c
  glTexCoord2fVertex3fSUN
  glTexCoord2fVertex3fvSUN_c
  glTexCoord2fv_c
  glTexCoord2hNV
  glTexCoord2hvNV_c
  glTexCoord2i
  glTexCoord2iv_c
  glTexCoord2s
  glTexCoord2sv_c
  glTexCoord3d
  glTexCoord3dv_c
  glTexCoord3f
  glTexCoord3fv_c
  glTexCoord3hNV
  glTexCoord3hvNV_c
  glTexCoord3i
  glTexCoord3iv_c
  glTexCoord3s
  glTexCoord3sv_c
  glTexCoord4d
  glTexCoord4dv_c
  glTexCoord4f
  glTexCoord4fColor4fNormal3fVertex4fSUN
  glTexCoord4fColor4fNormal3fVertex4fvSUN_c
  glTexCoord4fVertex4fSUN
  glTexCoord4fVertex4fvSUN_c
  glTexCoord4fv_c
  glTexCoord4hNV
  glTexCoord4hvNV_c
  glTexCoord4i
  glTexCoord4iv_c
  glTexCoord4s
  glTexCoord4sv_c
  glTexCoordFormatNV
  glTexCoordP1ui
  glTexCoordP1uiv_c
  glTexCoordP2ui
  glTexCoordP2uiv_c
  glTexCoordP3ui
  glTexCoordP3uiv_c
  glTexCoordP4ui
  glTexCoordP4uiv_c
  glTexCoordPointerEXT_c
  glTexCoordPointerListIBM_c
  glTexCoordPointervINTEL_c
  glTexCoordPointer_c
  glTexEnvf
  glTexEnvfv_c
  glTexEnvi
  glTexEnviv_c
  glTexEnvx
  glTexEnvxv_c
  glTexFilterFuncSGIS_c
  glTexGend
  glTexGendv_c
  glTexGenf
  glTexGenfv_c
  glTexGeni
  glTexGeniv_c
  glTexImage1D_c
  glTexImage2DMultisample
  glTexImage2DMultisampleCoverageNV
  glTexImage2D_c
  glTexImage3DEXT_c
  glTexImage3DMultisample
  glTexImage3DMultisampleCoverageNV
  glTexImage3DNV_c
  glTexImage3D_c
  glTexImage4DSGIS_c
  glTexPageCommitmentARB
  glTexPageCommitmentEXT
  glTexParameterf
  glTexParameterfv_c
  glTexParameteri
  glTexParameterIivEXT_c
  glTexParameterIiv_c
  glTexParameterIuivEXT_c
  glTexParameterIuiv_c
  glTexParameteriv_c
  glTexParameterx
  glTexParameterxv_c
  glTexRenderbufferNV
  glTexScissorFuncINTEL
  glTexScissorINTEL
  glTexStorage1D
  glTexStorage1DEXT
  glTexStorage2D
  glTexStorage2DEXT
  glTexStorage2DMultisample
  glTexStorage3D
  glTexStorage3DEXT
  glTexStorage3DMultisample
  glTexStorageMem1DEXT
  glTexStorageMem2DEXT
  glTexStorageMem2DMultisampleEXT
  glTexStorageMem3DEXT
  glTexStorageMem3DMultisampleEXT
  glTexStorageSparseAMD
  glTexSubImage1DEXT_c
  glTexSubImage1D_c
  glTexSubImage2DEXT_c
  glTexSubImage2D_c
  glTexSubImage3DEXT_c
  glTexSubImage3DNV_c
  glTexSubImage3D_c
  glTexSubImage4DSGIS_c
  glTextureBarrier
  glTextureBarrierNV
  glTextureBuffer
  glTextureBufferEXT
  glTextureBufferRange
  glTextureBufferRangeEXT
  glTextureFogSGIX
  glTextureImage1DEXT_c
  glTextureImage2DEXT_c
  glTextureImage2DMultisampleCoverageNV
  glTextureImage2DMultisampleNV
  glTextureImage3DEXT_c
  glTextureImage3DMultisampleCoverageNV
  glTextureImage3DMultisampleNV
  glTextureLightEXT
  glTextureMaterialEXT
  glTextureNormalEXT
  glTexturePageCommitmentEXT
  glTextureParameterf
  glTextureParameterfEXT
  glTextureParameterfvEXT_c
  glTextureParameterfv_c
  glTextureParameteri
  glTextureParameteriEXT
  glTextureParameterIivEXT_c
  glTextureParameterIiv_c
  glTextureParameterIuivEXT_c
  glTextureParameterIuiv_c
  glTextureParameterivEXT_c
  glTextureParameteriv_c
  glTextureRangeAPPLE_c
  glTextureRenderbufferEXT
  glTextureStorage1D
  glTextureStorage1DEXT
  glTextureStorage2D
  glTextureStorage2DEXT
  glTextureStorage2DMultisample
  glTextureStorage2DMultisampleEXT
  glTextureStorage3D
  glTextureStorage3DEXT
  glTextureStorage3DMultisample
  glTextureStorage3DMultisampleEXT
  glTextureStorageMem1DEXT
  glTextureStorageMem2DEXT
  glTextureStorageMem2DMultisampleEXT
  glTextureStorageMem3DEXT
  glTextureStorageMem3DMultisampleEXT
  glTextureStorageSparseAMD
  glTextureSubImage1DEXT_c
  glTextureSubImage1D_c
  glTextureSubImage2DEXT_c
  glTextureSubImage2D_c
  glTextureSubImage3DEXT_c
  glTextureSubImage3D_c
  glTextureView
  glTextureViewEXT
  glTrackMatrixNV
  glTransformFeedbackAttribsNV_c
  glTransformFeedbackBufferBase
  glTransformFeedbackBufferRange
  glTransformFeedbackVaryingsEXT_c
  glTransformFeedbackVaryingsNV_c
  glTransformFeedbackVaryings_c
  glTransformPathNV_c
  glTranslated
  glTranslatef
  glTranslatex
  glUniform1d
  glUniform1dv_c
  glUniform1f
  glUniform1fARB
  glUniform1fvARB_c
  glUniform1fv_c
  glUniform1i
  glUniform1i64ARB
  glUniform1i64NV
  glUniform1i64vARB_c
  glUniform1i64vNV_c
  glUniform1iARB
  glUniform1ivARB_c
  glUniform1iv_c
  glUniform1ui
  glUniform1ui64ARB
  glUniform1ui64NV
  glUniform1ui64vARB_c
  glUniform1ui64vNV_c
  glUniform1uiEXT
  glUniform1uivEXT_c
  glUniform1uiv_c
  glUniform2d
  glUniform2dv_c
  glUniform2f
  glUniform2fARB
  glUniform2fvARB_c
  glUniform2fv_c
  glUniform2i
  glUniform2i64ARB
  glUniform2i64NV
  glUniform2i64vARB_c
  glUniform2i64vNV_c
  glUniform2iARB
  glUniform2ivARB_c
  glUniform2iv_c
  glUniform2ui
  glUniform2ui64ARB
  glUniform2ui64NV
  glUniform2ui64vARB_c
  glUniform2ui64vNV_c
  glUniform2uiEXT
  glUniform2uivEXT_c
  glUniform2uiv_c
  glUniform3d
  glUniform3dv_c
  glUniform3f
  glUniform3fARB
  glUniform3fvARB_c
  glUniform3fv_c
  glUniform3i
  glUniform3i64ARB
  glUniform3i64NV
  glUniform3i64vARB_c
  glUniform3i64vNV_c
  glUniform3iARB
  glUniform3ivARB_c
  glUniform3iv_c
  glUniform3ui
  glUniform3ui64ARB
  glUniform3ui64NV
  glUniform3ui64vARB_c
  glUniform3ui64vNV_c
  glUniform3uiEXT
  glUniform3uivEXT_c
  glUniform3uiv_c
  glUniform4d
  glUniform4dv_c
  glUniform4f
  glUniform4fARB
  glUniform4fvARB_c
  glUniform4fv_c
  glUniform4i
  glUniform4i64ARB
  glUniform4i64NV
  glUniform4i64vARB_c
  glUniform4i64vNV_c
  glUniform4iARB
  glUniform4ivARB_c
  glUniform4iv_c
  glUniform4ui
  glUniform4ui64ARB
  glUniform4ui64NV
  glUniform4ui64vARB_c
  glUniform4ui64vNV_c
  glUniform4uiEXT
  glUniform4uivEXT_c
  glUniform4uiv_c
  glUniformBlockBinding
  glUniformBufferEXT
  glUniformHandleui64ARB
  glUniformHandleui64NV
  glUniformHandleui64vARB_c
  glUniformHandleui64vNV_c
  glUniformMatrix2dv_c
  glUniformMatrix2fvARB_c
  glUniformMatrix2fv_c
  glUniformMatrix2x3dv_c
  glUniformMatrix2x3fvNV_c
  glUniformMatrix2x3fv_c
  glUniformMatrix2x4dv_c
  glUniformMatrix2x4fvNV_c
  glUniformMatrix2x4fv_c
  glUniformMatrix3dv_c
  glUniformMatrix3fvARB_c
  glUniformMatrix3fv_c
  glUniformMatrix3x2dv_c
  glUniformMatrix3x2fvNV_c
  glUniformMatrix3x2fv_c
  glUniformMatrix3x4dv_c
  glUniformMatrix3x4fvNV_c
  glUniformMatrix3x4fv_c
  glUniformMatrix4dv_c
  glUniformMatrix4fvARB_c
  glUniformMatrix4fv_c
  glUniformMatrix4x2dv_c
  glUniformMatrix4x2fvNV_c
  glUniformMatrix4x2fv_c
  glUniformMatrix4x3dv_c
  glUniformMatrix4x3fvNV_c
  glUniformMatrix4x3fv_c
  glUniformSubroutinesuiv_c
  glUniformui64NV
  glUniformui64vNV_c
  glUnlockArraysEXT
  glUnmapBuffer
  glUnmapBufferARB
  glUnmapNamedBuffer
  glUnmapNamedBufferEXT
  glUnmapObjectBufferATI
  glUnmapTexture2DINTEL
  glUpdateObjectBufferATI_c
  glUseProgram
  glUseProgramObjectARB
  glUseProgramStages
  glUseShaderProgramEXT
  glValidateProgram
  glValidateProgramARB
  glValidateProgramPipeline
  glVariantArrayObjectATI
  glVariantbvEXT_c
  glVariantdvEXT_c
  glVariantfvEXT_c
  glVariantivEXT_c
  glVariantPointerEXT_c
  glVariantsvEXT_c
  glVariantubvEXT_c
  glVariantuivEXT_c
  glVariantusvEXT_c
  glVDPAUFiniNV
  glVDPAUGetSurfaceivNV_c
  glVDPAUInitNV_c
  glVDPAUIsSurfaceNV
  glVDPAUMapSurfacesNV_c
  glVDPAURegisterOutputSurfaceNV_c
  glVDPAURegisterVideoSurfaceNV_c
  glVDPAUSurfaceAccessNV
  glVDPAUUnmapSurfacesNV_c
  glVDPAUUnregisterSurfaceNV
  glVectorOperationSGIX
  glVertex2d
  glVertex2dv_c
  glVertex2f
  glVertex2fv_c
  glVertex2hNV
  glVertex2hvNV_c
  glVertex2i
  glVertex2iv_c
  glVertex2s
  glVertex2sv_c
  glVertex3d
  glVertex3dv_c
  glVertex3f
  glVertex3fv_c
  glVertex3hNV
  glVertex3hvNV_c
  glVertex3i
  glVertex3iv_c
  glVertex3s
  glVertex3sv_c
  glVertex4d
  glVertex4dv_c
  glVertex4f
  glVertex4fv_c
  glVertex4hNV
  glVertex4hvNV_c
  glVertex4i
  glVertex4iv_c
  glVertex4s
  glVertex4sv_c
  glVertexArrayAttribBinding
  glVertexArrayAttribFormat
  glVertexArrayAttribIFormat
  glVertexArrayAttribLFormat
  glVertexArrayBindingDivisor
  glVertexArrayBindVertexBufferEXT
  glVertexArrayColorOffsetEXT
  glVertexArrayEdgeFlagOffsetEXT
  glVertexArrayElementBuffer
  glVertexArrayFogCoordOffsetEXT
  glVertexArrayIndexOffsetEXT
  glVertexArrayMultiTexCoordOffsetEXT
  glVertexArrayNormalOffsetEXT
  glVertexArrayParameteriAPPLE
  glVertexArrayRangeAPPLE_c
  glVertexArrayRangeNV_c
  glVertexArraySecondaryColorOffsetEXT
  glVertexArrayTexCoordOffsetEXT
  glVertexArrayVertexAttribBindingEXT
  glVertexArrayVertexAttribDivisorEXT
  glVertexArrayVertexAttribFormatEXT
  glVertexArrayVertexAttribIFormatEXT
  glVertexArrayVertexAttribIOffsetEXT
  glVertexArrayVertexAttribLFormatEXT
  glVertexArrayVertexAttribLOffsetEXT
  glVertexArrayVertexAttribOffsetEXT
  glVertexArrayVertexBindingDivisorEXT
  glVertexArrayVertexBuffer
  glVertexArrayVertexBuffers_c
  glVertexArrayVertexOffsetEXT
  glVertexAttrib1d
  glVertexAttrib1dARB
  glVertexAttrib1dNV
  glVertexAttrib1dvARB_c
  glVertexAttrib1dvNV_c
  glVertexAttrib1dv_c
  glVertexAttrib1f
  glVertexAttrib1fARB
  glVertexAttrib1fNV
  glVertexAttrib1fvARB_c
  glVertexAttrib1fvNV_c
  glVertexAttrib1fv_c
  glVertexAttrib1hNV
  glVertexAttrib1hvNV_c
  glVertexAttrib1s
  glVertexAttrib1sARB
  glVertexAttrib1sNV
  glVertexAttrib1svARB_c
  glVertexAttrib1svNV_c
  glVertexAttrib1sv_c
  glVertexAttrib2d
  glVertexAttrib2dARB
  glVertexAttrib2dNV
  glVertexAttrib2dvARB_c
  glVertexAttrib2dvNV_c
  glVertexAttrib2dv_c
  glVertexAttrib2f
  glVertexAttrib2fARB
  glVertexAttrib2fNV
  glVertexAttrib2fvARB_c
  glVertexAttrib2fvNV_c
  glVertexAttrib2fv_c
  glVertexAttrib2hNV
  glVertexAttrib2hvNV_c
  glVertexAttrib2s
  glVertexAttrib2sARB
  glVertexAttrib2sNV
  glVertexAttrib2svARB_c
  glVertexAttrib2svNV_c
  glVertexAttrib2sv_c
  glVertexAttrib3d
  glVertexAttrib3dARB
  glVertexAttrib3dNV
  glVertexAttrib3dvARB_c
  glVertexAttrib3dvNV_c
  glVertexAttrib3dv_c
  glVertexAttrib3f
  glVertexAttrib3fARB
  glVertexAttrib3fNV
  glVertexAttrib3fvARB_c
  glVertexAttrib3fvNV_c
  glVertexAttrib3fv_c
  glVertexAttrib3hNV
  glVertexAttrib3hvNV_c
  glVertexAttrib3s
  glVertexAttrib3sARB
  glVertexAttrib3sNV
  glVertexAttrib3svARB_c
  glVertexAttrib3svNV_c
  glVertexAttrib3sv_c
  glVertexAttrib4bvARB_c
  glVertexAttrib4bv_c
  glVertexAttrib4d
  glVertexAttrib4dARB
  glVertexAttrib4dNV
  glVertexAttrib4dvARB_c
  glVertexAttrib4dvNV_c
  glVertexAttrib4dv_c
  glVertexAttrib4f
  glVertexAttrib4fARB
  glVertexAttrib4fNV
  glVertexAttrib4fvARB_c
  glVertexAttrib4fvNV_c
  glVertexAttrib4fv_c
  glVertexAttrib4hNV
  glVertexAttrib4hvNV_c
  glVertexAttrib4ivARB_c
  glVertexAttrib4iv_c
  glVertexAttrib4NbvARB_c
  glVertexAttrib4Nbv_c
  glVertexAttrib4NivARB_c
  glVertexAttrib4Niv_c
  glVertexAttrib4NsvARB_c
  glVertexAttrib4Nsv_c
  glVertexAttrib4Nub
  glVertexAttrib4NubARB
  glVertexAttrib4NubvARB_c
  glVertexAttrib4Nubv_c
  glVertexAttrib4NuivARB_c
  glVertexAttrib4Nuiv_c
  glVertexAttrib4NusvARB_c
  glVertexAttrib4Nusv_c
  glVertexAttrib4s
  glVertexAttrib4sARB
  glVertexAttrib4sNV
  glVertexAttrib4svARB_c
  glVertexAttrib4svNV_c
  glVertexAttrib4sv_c
  glVertexAttrib4ubNV
  glVertexAttrib4ubvARB_c
  glVertexAttrib4ubvNV_c
  glVertexAttrib4ubv_c
  glVertexAttrib4uivARB_c
  glVertexAttrib4uiv_c
  glVertexAttrib4usvARB_c
  glVertexAttrib4usv_c
  glVertexAttribArrayObjectATI
  glVertexAttribBinding
  glVertexAttribDivisor
  glVertexAttribDivisorANGLE
  glVertexAttribDivisorARB
  glVertexAttribDivisorEXT
  glVertexAttribDivisorNV
  glVertexAttribFormat
  glVertexAttribFormatNV
  glVertexAttribI1i
  glVertexAttribI1iEXT
  glVertexAttribI1ivEXT_c
  glVertexAttribI1iv_c
  glVertexAttribI1ui
  glVertexAttribI1uiEXT
  glVertexAttribI1uivEXT_c
  glVertexAttribI1uiv_c
  glVertexAttribI2i
  glVertexAttribI2iEXT
  glVertexAttribI2ivEXT_c
  glVertexAttribI2iv_c
  glVertexAttribI2ui
  glVertexAttribI2uiEXT
  glVertexAttribI2uivEXT_c
  glVertexAttribI2uiv_c
  glVertexAttribI3i
  glVertexAttribI3iEXT
  glVertexAttribI3ivEXT_c
  glVertexAttribI3iv_c
  glVertexAttribI3ui
  glVertexAttribI3uiEXT
  glVertexAttribI3uivEXT_c
  glVertexAttribI3uiv_c
  glVertexAttribI4bvEXT_c
  glVertexAttribI4bv_c
  glVertexAttribI4i
  glVertexAttribI4iEXT
  glVertexAttribI4ivEXT_c
  glVertexAttribI4iv_c
  glVertexAttribI4svEXT_c
  glVertexAttribI4sv_c
  glVertexAttribI4ubvEXT_c
  glVertexAttribI4ubv_c
  glVertexAttribI4ui
  glVertexAttribI4uiEXT
  glVertexAttribI4uivEXT_c
  glVertexAttribI4uiv_c
  glVertexAttribI4usvEXT_c
  glVertexAttribI4usv_c
  glVertexAttribIFormat
  glVertexAttribIFormatNV
  glVertexAttribIPointerEXT_c
  glVertexAttribIPointer_c
  glVertexAttribL1d
  glVertexAttribL1dEXT
  glVertexAttribL1dvEXT_c
  glVertexAttribL1dv_c
  glVertexAttribL1i64NV
  glVertexAttribL1i64vNV_c
  glVertexAttribL1ui64ARB
  glVertexAttribL1ui64NV
  glVertexAttribL1ui64vARB_c
  glVertexAttribL1ui64vNV_c
  glVertexAttribL2d
  glVertexAttribL2dEXT
  glVertexAttribL2dvEXT_c
  glVertexAttribL2dv_c
  glVertexAttribL2i64NV
  glVertexAttribL2i64vNV_c
  glVertexAttribL2ui64NV
  glVertexAttribL2ui64vNV_c
  glVertexAttribL3d
  glVertexAttribL3dEXT
  glVertexAttribL3dvEXT_c
  glVertexAttribL3dv_c
  glVertexAttribL3i64NV
  glVertexAttribL3i64vNV_c
  glVertexAttribL3ui64NV
  glVertexAttribL3ui64vNV_c
  glVertexAttribL4d
  glVertexAttribL4dEXT
  glVertexAttribL4dvEXT_c
  glVertexAttribL4dv_c
  glVertexAttribL4i64NV
  glVertexAttribL4i64vNV_c
  glVertexAttribL4ui64NV
  glVertexAttribL4ui64vNV_c
  glVertexAttribLFormat
  glVertexAttribLFormatNV
  glVertexAttribLPointerEXT_c
  glVertexAttribLPointer_c
  glVertexAttribP1ui
  glVertexAttribP1uiv_c
  glVertexAttribP2ui
  glVertexAttribP2uiv_c
  glVertexAttribP3ui
  glVertexAttribP3uiv_c
  glVertexAttribP4ui
  glVertexAttribP4uiv_c
  glVertexAttribParameteriAMD
  glVertexAttribPointerARB_c
  glVertexAttribPointerNV_c
  glVertexAttribPointer_c
  glVertexAttribs1dvNV_c
  glVertexAttribs1fvNV_c
  glVertexAttribs1hvNV_c
  glVertexAttribs1svNV_c
  glVertexAttribs2dvNV_c
  glVertexAttribs2fvNV_c
  glVertexAttribs2hvNV_c
  glVertexAttribs2svNV_c
  glVertexAttribs3dvNV_c
  glVertexAttribs3fvNV_c
  glVertexAttribs3hvNV_c
  glVertexAttribs3svNV_c
  glVertexAttribs4dvNV_c
  glVertexAttribs4fvNV_c
  glVertexAttribs4hvNV_c
  glVertexAttribs4svNV_c
  glVertexAttribs4ubvNV_c
  glVertexBindingDivisor
  glVertexBlendARB
  glVertexBlendEnvfATI
  glVertexBlendEnviATI
  glVertexFormatNV
  glVertexP2ui
  glVertexP2uiv_c
  glVertexP3ui
  glVertexP3uiv_c
  glVertexP4ui
  glVertexP4uiv_c
  glVertexPointerEXT_c
  glVertexPointerListIBM_c
  glVertexPointervINTEL_c
  glVertexPointer_c
  glVertexStream1dATI
  glVertexStream1dvATI_c
  glVertexStream1fATI
  glVertexStream1fvATI_c
  glVertexStream1iATI
  glVertexStream1ivATI_c
  glVertexStream1sATI
  glVertexStream1svATI_c
  glVertexStream2dATI
  glVertexStream2dvATI_c
  glVertexStream2fATI
  glVertexStream2fvATI_c
  glVertexStream2iATI
  glVertexStream2ivATI_c
  glVertexStream2sATI
  glVertexStream2svATI_c
  glVertexStream3dATI
  glVertexStream3dvATI_c
  glVertexStream3fATI
  glVertexStream3fvATI_c
  glVertexStream3iATI
  glVertexStream3ivATI_c
  glVertexStream3sATI
  glVertexStream3svATI_c
  glVertexStream4dATI
  glVertexStream4dvATI_c
  glVertexStream4fATI
  glVertexStream4fvATI_c
  glVertexStream4iATI
  glVertexStream4ivATI_c
  glVertexStream4sATI
  glVertexStream4svATI_c
  glVertexWeightfEXT
  glVertexWeightfvEXT_c
  glVertexWeighthNV
  glVertexWeighthvNV_c
  glVertexWeightPointerEXT_c
  glVideoCaptureNV_c
  glVideoCaptureStreamParameterdvNV_c
  glVideoCaptureStreamParameterfvNV_c
  glVideoCaptureStreamParameterivNV_c
  glViewport
  glViewportArrayvNV_c
  glViewportArrayv_c
  glViewportIndexedf
  glViewportIndexedfNV
  glViewportIndexedfvNV_c
  glViewportIndexedfv_c
  glViewportPositionWScaleNV
  glViewportSwizzleNV
  glWaitSemaphoreEXT_c
  glWaitSync
  glWaitSyncAPPLE
  glWaitVkSemaphoreNV
  glWeightbvARB_c
  glWeightdvARB_c
  glWeightfvARB_c
  glWeightivARB_c
  glWeightPathsNV_c
  glWeightPointerARB_c
  glWeightsvARB_c
  glWeightubvARB_c
  glWeightuivARB_c
  glWeightusvARB_c
  glWindowPos2d
  glWindowPos2dARB
  glWindowPos2dMESA
  glWindowPos2dvARB_c
  glWindowPos2dvMESA_c
  glWindowPos2dv_c
  glWindowPos2f
  glWindowPos2fARB
  glWindowPos2fMESA
  glWindowPos2fvARB_c
  glWindowPos2fvMESA_c
  glWindowPos2fv_c
  glWindowPos2i
  glWindowPos2iARB
  glWindowPos2iMESA
  glWindowPos2ivARB_c
  glWindowPos2ivMESA_c
  glWindowPos2iv_c
  glWindowPos2s
  glWindowPos2sARB
  glWindowPos2sMESA
  glWindowPos2svARB_c
  glWindowPos2svMESA_c
  glWindowPos2sv_c
  glWindowPos3d
  glWindowPos3dARB
  glWindowPos3dMESA
  glWindowPos3dvARB_c
  glWindowPos3dvMESA_c
  glWindowPos3dv_c
  glWindowPos3f
  glWindowPos3fARB
  glWindowPos3fMESA
  glWindowPos3fvARB_c
  glWindowPos3fvMESA_c
  glWindowPos3fv_c
  glWindowPos3i
  glWindowPos3iARB
  glWindowPos3iMESA
  glWindowPos3ivARB_c
  glWindowPos3ivMESA_c
  glWindowPos3iv_c
  glWindowPos3s
  glWindowPos3sARB
  glWindowPos3sMESA
  glWindowPos3svARB_c
  glWindowPos3svMESA_c
  glWindowPos3sv_c
  glWindowPos4dMESA
  glWindowPos4dvMESA_c
  glWindowPos4fMESA
  glWindowPos4fvMESA_c
  glWindowPos4iMESA
  glWindowPos4ivMESA_c
  glWindowPos4sMESA
  glWindowPos4svMESA_c
  glWindowRectanglesEXT_c
  glWriteMaskEXT
)}

sub EXPORT_TAGS_GL {(
  'GL_3DFX_tbuffer' => [
    'glTbufferMask3DFX'
  ],
  'GL_AMD_debug_output' => [
    'glDebugMessageCallbackAMD_c',
    'glDebugMessageEnableAMD_c',
    'glDebugMessageInsertAMD_c',
    'glGetDebugMessageLogAMD_c'
  ],
  'GL_AMD_draw_buffers_blend' => [
    'glBlendEquationIndexedAMD',
    'glBlendEquationSeparateIndexedAMD',
    'glBlendFuncIndexedAMD',
    'glBlendFuncSeparateIndexedAMD'
  ],
  'GL_AMD_framebuffer_sample_positions' => [
    'glFramebufferSamplePositionsfvAMD_c',
    'glGetFramebufferParameterfvAMD_c',
    'glGetNamedFramebufferParameterfvAMD_c',
    'glNamedFramebufferSamplePositionsfvAMD_c'
  ],
  'GL_AMD_interleaved_elements' => [
    'glVertexAttribParameteriAMD'
  ],
  'GL_AMD_multi_draw_indirect' => [
    'glMultiDrawArraysIndirectAMD_c',
    'glMultiDrawElementsIndirectAMD_c'
  ],
  'GL_AMD_name_gen_delete' => [
    'glDeleteNamesAMD_c',
    'glGenNamesAMD_c',
    'glIsNameAMD'
  ],
  'GL_AMD_occlusion_query_event' => [
    'glQueryObjectParameteruiAMD'
  ],
  'GL_AMD_performance_monitor' => [
    'glBeginPerfMonitorAMD',
    'glDeletePerfMonitorsAMD_c',
    'glEndPerfMonitorAMD',
    'glGenPerfMonitorsAMD_c',
    'glGetPerfMonitorCounterDataAMD_c',
    'glGetPerfMonitorCounterInfoAMD_c',
    'glGetPerfMonitorCountersAMD_c',
    'glGetPerfMonitorCounterStringAMD_c',
    'glGetPerfMonitorGroupsAMD_c',
    'glGetPerfMonitorGroupStringAMD_c',
    'glSelectPerfMonitorCountersAMD_c'
  ],
  'GL_AMD_sample_positions' => [
    'glSetMultisamplefvAMD_c'
  ],
  'GL_AMD_sparse_texture' => [
    'glTexStorageSparseAMD',
    'glTextureStorageSparseAMD'
  ],
  'GL_AMD_stencil_operation_extended' => [
    'glStencilOpValueAMD'
  ],
  'GL_AMD_vertex_shader_tessellator' => [
    'glTessellationFactorAMD',
    'glTessellationModeAMD'
  ],
  'GL_ANGLE_framebuffer_blit' => [
    'glBlitFramebufferANGLE'
  ],
  'GL_ANGLE_framebuffer_multisample' => [
    'glRenderbufferStorageMultisampleANGLE'
  ],
  'GL_ANGLE_instanced_arrays' => [
    'glDrawArraysInstancedANGLE',
    'glDrawElementsInstancedANGLE_c',
    'glVertexAttribDivisorANGLE'
  ],
  'GL_ANGLE_timer_query' => [
    'glBeginQueryANGLE',
    'glDeleteQueriesANGLE_c',
    'glEndQueryANGLE',
    'glGenQueriesANGLE_c',
    'glGetQueryivANGLE_c',
    'glGetQueryObjecti64vANGLE_c',
    'glGetQueryObjectivANGLE_c',
    'glGetQueryObjectui64vANGLE_c',
    'glGetQueryObjectuivANGLE_c',
    'glIsQueryANGLE',
    'glQueryCounterANGLE'
  ],
  'GL_ANGLE_translated_shader_source' => [
    'glGetTranslatedShaderSourceANGLE_c'
  ],
  'GL_APPLE_copy_texture_levels' => [
    'glCopyTextureLevelsAPPLE'
  ],
  'GL_APPLE_element_array' => [
    'glDrawElementArrayAPPLE',
    'glDrawRangeElementArrayAPPLE',
    'glElementPointerAPPLE_c',
    'glMultiDrawElementArrayAPPLE_c',
    'glMultiDrawRangeElementArrayAPPLE_c'
  ],
  'GL_APPLE_fence' => [
    'glDeleteFencesAPPLE_c',
    'glFinishFenceAPPLE',
    'glFinishObjectAPPLE',
    'glGenFencesAPPLE_c',
    'glIsFenceAPPLE',
    'glSetFenceAPPLE',
    'glTestFenceAPPLE',
    'glTestObjectAPPLE'
  ],
  'GL_APPLE_flush_buffer_range' => [
    'glBufferParameteriAPPLE',
    'glFlushMappedBufferRangeAPPLE'
  ],
  'GL_APPLE_framebuffer_multisample' => [
    'glRenderbufferStorageMultisampleAPPLE',
    'glResolveMultisampleFramebufferAPPLE'
  ],
  'GL_APPLE_object_purgeable' => [
    'glGetObjectParameterivAPPLE_c',
    'glObjectPurgeableAPPLE',
    'glObjectUnpurgeableAPPLE'
  ],
  'GL_APPLE_sync' => [
    'glClientWaitSyncAPPLE',
    'glDeleteSyncAPPLE',
    'glFenceSyncAPPLE',
    'glGetInteger64vAPPLE_c',
    'glGetSyncivAPPLE_c',
    'glIsSyncAPPLE',
    'glWaitSyncAPPLE'
  ],
  'GL_APPLE_texture_range' => [
    'glGetTexParameterPointervAPPLE_c',
    'glTextureRangeAPPLE_c'
  ],
  'GL_APPLE_vertex_array_object' => [
    'glBindVertexArrayAPPLE',
    'glDeleteVertexArraysAPPLE_c',
    'glGenVertexArraysAPPLE_c',
    'glIsVertexArrayAPPLE'
  ],
  'GL_APPLE_vertex_array_range' => [
    'glFlushVertexArrayRangeAPPLE_c',
    'glVertexArrayParameteriAPPLE',
    'glVertexArrayRangeAPPLE_c'
  ],
  'GL_APPLE_vertex_program_evaluators' => [
    'glDisableVertexAttribAPPLE',
    'glEnableVertexAttribAPPLE',
    'glIsVertexAttribEnabledAPPLE',
    'glMapVertexAttrib1dAPPLE_c',
    'glMapVertexAttrib1fAPPLE_c',
    'glMapVertexAttrib2dAPPLE_c',
    'glMapVertexAttrib2fAPPLE_c'
  ],
  'GL_ARB_ES2_compatibility' => [
    'glClearDepthf',
    'glDepthRangef',
    'glGetShaderPrecisionFormat_c',
    'glReleaseShaderCompiler',
    'glShaderBinary_c'
  ],
  'GL_ARB_ES3_1_compatibility' => [
    'glMemoryBarrierByRegion'
  ],
  'GL_ARB_ES3_2_compatibility' => [
    'glPrimitiveBoundingBoxARB'
  ],
  'GL_ARB_base_instance' => [
    'glDrawArraysInstancedBaseInstance',
    'glDrawElementsInstancedBaseInstance_c',
    'glDrawElementsInstancedBaseVertexBaseInstance_c'
  ],
  'GL_ARB_bindless_texture' => [
    'glGetImageHandleARB',
    'glGetTextureHandleARB',
    'glGetTextureSamplerHandleARB',
    'glGetVertexAttribLui64vARB_c',
    'glIsImageHandleResidentARB',
    'glIsTextureHandleResidentARB',
    'glMakeImageHandleNonResidentARB',
    'glMakeImageHandleResidentARB',
    'glMakeTextureHandleNonResidentARB',
    'glMakeTextureHandleResidentARB',
    'glProgramUniformHandleui64ARB',
    'glProgramUniformHandleui64vARB_c',
    'glUniformHandleui64ARB',
    'glUniformHandleui64vARB_c',
    'glVertexAttribL1ui64ARB',
    'glVertexAttribL1ui64vARB_c'
  ],
  'GL_ARB_blend_func_extended' => [
    'glBindFragDataLocationIndexed_c',
    'glGetFragDataIndex_c'
  ],
  'GL_ARB_buffer_storage' => [
    'glBufferStorage_c'
  ],
  'GL_ARB_cl_event' => [
    'glCreateSyncFromCLeventARB'
  ],
  'GL_ARB_clear_buffer_object' => [
    'glClearBufferData_c',
    'glClearBufferSubData_c',
    'glClearNamedBufferDataEXT_c',
    'glClearNamedBufferSubDataEXT_c'
  ],
  'GL_ARB_clear_texture' => [
    'glClearTexImage_c',
    'glClearTexSubImage_c'
  ],
  'GL_ARB_clip_control' => [
    'glClipControl'
  ],
  'GL_ARB_color_buffer_float' => [
    'glClampColorARB'
  ],
  'GL_ARB_compute_shader' => [
    'glDispatchCompute',
    'glDispatchComputeIndirect'
  ],
  'GL_ARB_compute_variable_group_size' => [
    'glDispatchComputeGroupSizeARB'
  ],
  'GL_ARB_copy_buffer' => [
    'glCopyBufferSubData'
  ],
  'GL_ARB_copy_image' => [
    'glCopyImageSubData'
  ],
  'GL_ARB_debug_output' => [
    'glDebugMessageCallbackARB_c',
    'glDebugMessageControlARB_c',
    'glDebugMessageInsertARB_c',
    'glGetDebugMessageLogARB_c'
  ],
  'GL_ARB_direct_state_access' => [
    'glBindTextureUnit',
    'glBlitNamedFramebuffer',
    'glCheckNamedFramebufferStatus',
    'glClearNamedBufferData_c',
    'glClearNamedBufferSubData_c',
    'glClearNamedFramebufferfi',
    'glClearNamedFramebufferfv_c',
    'glClearNamedFramebufferiv_c',
    'glClearNamedFramebufferuiv_c',
    'glCompressedTextureSubImage1D_c',
    'glCompressedTextureSubImage2D_c',
    'glCompressedTextureSubImage3D_c',
    'glCopyNamedBufferSubData',
    'glCopyTextureSubImage1D',
    'glCopyTextureSubImage2D',
    'glCopyTextureSubImage3D',
    'glCreateBuffers_c',
    'glCreateFramebuffers_c',
    'glCreateProgramPipelines_c',
    'glCreateQueries_c',
    'glCreateRenderbuffers_c',
    'glCreateSamplers_c',
    'glCreateTextures_c',
    'glCreateTransformFeedbacks_c',
    'glCreateVertexArrays_c',
    'glDisableVertexArrayAttrib',
    'glEnableVertexArrayAttrib',
    'glFlushMappedNamedBufferRange',
    'glGenerateTextureMipmap',
    'glGetCompressedTextureImage_c',
    'glGetNamedBufferParameteri64v_c',
    'glGetNamedBufferParameteriv_c',
    'glGetNamedBufferPointerv_c',
    'glGetNamedBufferSubData_c',
    'glGetNamedFramebufferAttachmentParameteriv_c',
    'glGetNamedFramebufferParameteriv_c',
    'glGetNamedRenderbufferParameteriv_c',
    'glGetQueryBufferObjecti64v',
    'glGetQueryBufferObjectiv',
    'glGetQueryBufferObjectui64v',
    'glGetQueryBufferObjectuiv',
    'glGetTextureImage_c',
    'glGetTextureLevelParameterfv_c',
    'glGetTextureLevelParameteriv_c',
    'glGetTextureParameterfv_c',
    'glGetTextureParameterIiv_c',
    'glGetTextureParameterIuiv_c',
    'glGetTextureParameteriv_c',
    'glGetTransformFeedbacki64_v_c',
    'glGetTransformFeedbackiv_c',
    'glGetTransformFeedbacki_v_c',
    'glGetVertexArrayIndexed64iv_c',
    'glGetVertexArrayIndexediv_c',
    'glGetVertexArrayiv_c',
    'glInvalidateNamedFramebufferData_c',
    'glInvalidateNamedFramebufferSubData_c',
    'glMapNamedBuffer_c',
    'glMapNamedBufferRange_c',
    'glNamedBufferData_c',
    'glNamedBufferStorage_c',
    'glNamedBufferSubData_c',
    'glNamedFramebufferDrawBuffer',
    'glNamedFramebufferDrawBuffers_c',
    'glNamedFramebufferParameteri',
    'glNamedFramebufferReadBuffer',
    'glNamedFramebufferRenderbuffer',
    'glNamedFramebufferTexture',
    'glNamedFramebufferTextureLayer',
    'glNamedRenderbufferStorage',
    'glNamedRenderbufferStorageMultisample',
    'glTextureBuffer',
    'glTextureBufferRange',
    'glTextureParameterf',
    'glTextureParameterfv_c',
    'glTextureParameteri',
    'glTextureParameterIiv_c',
    'glTextureParameterIuiv_c',
    'glTextureParameteriv_c',
    'glTextureStorage1D',
    'glTextureStorage2D',
    'glTextureStorage2DMultisample',
    'glTextureStorage3D',
    'glTextureStorage3DMultisample',
    'glTextureSubImage1D_c',
    'glTextureSubImage2D_c',
    'glTextureSubImage3D_c',
    'glTransformFeedbackBufferBase',
    'glTransformFeedbackBufferRange',
    'glUnmapNamedBuffer',
    'glVertexArrayAttribBinding',
    'glVertexArrayAttribFormat',
    'glVertexArrayAttribIFormat',
    'glVertexArrayAttribLFormat',
    'glVertexArrayBindingDivisor',
    'glVertexArrayElementBuffer',
    'glVertexArrayVertexBuffer',
    'glVertexArrayVertexBuffers_c'
  ],
  'GL_ARB_draw_buffers' => [
    'glDrawBuffersARB_c'
  ],
  'GL_ARB_draw_buffers_blend' => [
    'glBlendEquationiARB',
    'glBlendEquationSeparateiARB',
    'glBlendFunciARB',
    'glBlendFuncSeparateiARB'
  ],
  'GL_ARB_draw_elements_base_vertex' => [
    'glDrawElementsBaseVertex_c',
    'glDrawElementsInstancedBaseVertex_c',
    'glDrawRangeElementsBaseVertex_c',
    'glMultiDrawElementsBaseVertex_c'
  ],
  'GL_ARB_draw_indirect' => [
    'glDrawArraysIndirect_c',
    'glDrawElementsIndirect_c'
  ],
  'GL_ARB_framebuffer_no_attachments' => [
    'glFramebufferParameteri',
    'glGetFramebufferParameteriv_c',
    'glGetNamedFramebufferParameterivEXT_c',
    'glNamedFramebufferParameteriEXT'
  ],
  'GL_ARB_framebuffer_object' => [
    'glBindFramebuffer',
    'glBindRenderbuffer',
    'glBlitFramebuffer',
    'glCheckFramebufferStatus',
    'glDeleteFramebuffers_c',
    'glDeleteRenderbuffers_c',
    'glFramebufferRenderbuffer',
    'glFramebufferTexture1D',
    'glFramebufferTexture2D',
    'glFramebufferTexture3D',
    'glFramebufferTextureLayer',
    'glGenerateMipmap',
    'glGenFramebuffers_c',
    'glGenRenderbuffers_c',
    'glGetFramebufferAttachmentParameteriv_c',
    'glGetRenderbufferParameteriv_c',
    'glIsFramebuffer',
    'glIsRenderbuffer',
    'glRenderbufferStorage',
    'glRenderbufferStorageMultisample'
  ],
  'GL_ARB_geometry_shader4' => [
    'glFramebufferTextureARB',
    'glFramebufferTextureFaceARB',
    'glFramebufferTextureLayerARB',
    'glProgramParameteriARB'
  ],
  'GL_ARB_get_program_binary' => [
    'glGetProgramBinary_c',
    'glProgramBinary_c',
    'glProgramParameteri'
  ],
  'GL_ARB_get_texture_sub_image' => [
    'glGetCompressedTextureSubImage_c',
    'glGetTextureSubImage_c'
  ],
  'GL_ARB_gl_spirv' => [
    'glSpecializeShaderARB_c'
  ],
  'GL_ARB_gpu_shader_fp64' => [
    'glGetUniformdv_c',
    'glUniform1d',
    'glUniform1dv_c',
    'glUniform2d',
    'glUniform2dv_c',
    'glUniform3d',
    'glUniform3dv_c',
    'glUniform4d',
    'glUniform4dv_c',
    'glUniformMatrix2dv_c',
    'glUniformMatrix2x3dv_c',
    'glUniformMatrix2x4dv_c',
    'glUniformMatrix3dv_c',
    'glUniformMatrix3x2dv_c',
    'glUniformMatrix3x4dv_c',
    'glUniformMatrix4dv_c',
    'glUniformMatrix4x2dv_c',
    'glUniformMatrix4x3dv_c'
  ],
  'GL_ARB_gpu_shader_int64' => [
    'glGetnUniformi64vARB_c',
    'glGetnUniformui64vARB_c',
    'glGetUniformi64vARB_c',
    'glGetUniformui64vARB_c',
    'glProgramUniform1i64ARB',
    'glProgramUniform1i64vARB_c',
    'glProgramUniform1ui64ARB',
    'glProgramUniform1ui64vARB_c',
    'glProgramUniform2i64ARB',
    'glProgramUniform2i64vARB_c',
    'glProgramUniform2ui64ARB',
    'glProgramUniform2ui64vARB_c',
    'glProgramUniform3i64ARB',
    'glProgramUniform3i64vARB_c',
    'glProgramUniform3ui64ARB',
    'glProgramUniform3ui64vARB_c',
    'glProgramUniform4i64ARB',
    'glProgramUniform4i64vARB_c',
    'glProgramUniform4ui64ARB',
    'glProgramUniform4ui64vARB_c',
    'glUniform1i64ARB',
    'glUniform1i64vARB_c',
    'glUniform1ui64ARB',
    'glUniform1ui64vARB_c',
    'glUniform2i64ARB',
    'glUniform2i64vARB_c',
    'glUniform2ui64ARB',
    'glUniform2ui64vARB_c',
    'glUniform3i64ARB',
    'glUniform3i64vARB_c',
    'glUniform3ui64ARB',
    'glUniform3ui64vARB_c',
    'glUniform4i64ARB',
    'glUniform4i64vARB_c',
    'glUniform4ui64ARB',
    'glUniform4ui64vARB_c'
  ],
  'GL_ARB_imaging' => [
    'glColorSubTable_c',
    'glColorTable_c',
    'glColorTableParameterfv_c',
    'glColorTableParameteriv_c',
    'glConvolutionFilter1D_c',
    'glConvolutionFilter2D_c',
    'glConvolutionParameterf',
    'glConvolutionParameterfv_c',
    'glConvolutionParameteri',
    'glConvolutionParameteriv_c',
    'glCopyColorSubTable',
    'glCopyColorTable',
    'glCopyConvolutionFilter1D',
    'glCopyConvolutionFilter2D',
    'glGetColorTable_c',
    'glGetColorTableParameterfv_c',
    'glGetColorTableParameteriv_c',
    'glGetConvolutionFilter_c',
    'glGetConvolutionParameterfv_c',
    'glGetConvolutionParameteriv_c',
    'glGetHistogram_c',
    'glGetHistogramParameterfv_c',
    'glGetHistogramParameteriv_c',
    'glGetMinmax_c',
    'glGetMinmaxParameterfv_c',
    'glGetMinmaxParameteriv_c',
    'glGetSeparableFilter_c',
    'glHistogram',
    'glMinmax',
    'glResetHistogram',
    'glResetMinmax',
    'glSeparableFilter2D_c'
  ],
  'GL_ARB_indirect_parameters' => [
    'glMultiDrawArraysIndirectCountARB_c',
    'glMultiDrawElementsIndirectCountARB_c'
  ],
  'GL_ARB_instanced_arrays' => [
    'glDrawArraysInstancedARB',
    'glDrawElementsInstancedARB_c',
    'glVertexAttribDivisorARB'
  ],
  'GL_ARB_internalformat_query' => [
    'glGetInternalformativ_c'
  ],
  'GL_ARB_internalformat_query2' => [
    'glGetInternalformati64v_c'
  ],
  'GL_ARB_invalidate_subdata' => [
    'glInvalidateBufferData',
    'glInvalidateBufferSubData',
    'glInvalidateFramebuffer_c',
    'glInvalidateSubFramebuffer_c',
    'glInvalidateTexImage',
    'glInvalidateTexSubImage'
  ],
  'GL_ARB_map_buffer_range' => [
    'glFlushMappedBufferRange',
    'glMapBufferRange_c'
  ],
  'GL_ARB_matrix_palette' => [
    'glCurrentPaletteMatrixARB',
    'glMatrixIndexPointerARB_c',
    'glMatrixIndexubvARB_c',
    'glMatrixIndexuivARB_c',
    'glMatrixIndexusvARB_c'
  ],
  'GL_ARB_multi_bind' => [
    'glBindBuffersBase_c',
    'glBindBuffersRange_c',
    'glBindImageTextures_c',
    'glBindSamplers_c',
    'glBindTextures_c',
    'glBindVertexBuffers_c'
  ],
  'GL_ARB_multi_draw_indirect' => [
    'glMultiDrawArraysIndirect_c',
    'glMultiDrawElementsIndirect_c'
  ],
  'GL_ARB_multisample' => [
    'glSampleCoverageARB'
  ],
  'GL_ARB_multitexture' => [
    'glActiveTextureARB',
    'glClientActiveTextureARB',
    'glMultiTexCoord1dARB',
    'glMultiTexCoord1dvARB_c',
    'glMultiTexCoord1fARB',
    'glMultiTexCoord1fvARB_c',
    'glMultiTexCoord1iARB',
    'glMultiTexCoord1ivARB_c',
    'glMultiTexCoord1sARB',
    'glMultiTexCoord1svARB_c',
    'glMultiTexCoord2dARB',
    'glMultiTexCoord2dvARB_c',
    'glMultiTexCoord2fARB',
    'glMultiTexCoord2fvARB_c',
    'glMultiTexCoord2iARB',
    'glMultiTexCoord2ivARB_c',
    'glMultiTexCoord2sARB',
    'glMultiTexCoord2svARB_c',
    'glMultiTexCoord3dARB',
    'glMultiTexCoord3dvARB_c',
    'glMultiTexCoord3fARB',
    'glMultiTexCoord3fvARB_c',
    'glMultiTexCoord3iARB',
    'glMultiTexCoord3ivARB_c',
    'glMultiTexCoord3sARB',
    'glMultiTexCoord3svARB_c',
    'glMultiTexCoord4dARB',
    'glMultiTexCoord4dvARB_c',
    'glMultiTexCoord4fARB',
    'glMultiTexCoord4fvARB_c',
    'glMultiTexCoord4iARB',
    'glMultiTexCoord4ivARB_c',
    'glMultiTexCoord4sARB',
    'glMultiTexCoord4svARB_c'
  ],
  'GL_ARB_occlusion_query' => [
    'glBeginQueryARB',
    'glDeleteQueriesARB_c',
    'glEndQueryARB',
    'glGenQueriesARB_c',
    'glGetQueryivARB_c',
    'glGetQueryObjectivARB_c',
    'glGetQueryObjectuivARB_c',
    'glIsQueryARB'
  ],
  'GL_ARB_parallel_shader_compile' => [
    'glMaxShaderCompilerThreadsARB'
  ],
  'GL_ARB_point_parameters' => [
    'glPointParameterfARB',
    'glPointParameterfvARB_c'
  ],
  'GL_ARB_polygon_offset_clamp' => [
    'glPolygonOffsetClamp'
  ],
  'GL_ARB_program_interface_query' => [
    'glGetProgramInterfaceiv_c',
    'glGetProgramResourceIndex_c',
    'glGetProgramResourceiv_c',
    'glGetProgramResourceLocation_c',
    'glGetProgramResourceLocationIndex_c',
    'glGetProgramResourceName_c'
  ],
  'GL_ARB_provoking_vertex' => [
    'glProvokingVertex'
  ],
  'GL_ARB_robustness' => [
    'glGetGraphicsResetStatusARB',
    'glGetnColorTableARB_c',
    'glGetnCompressedTexImageARB_c',
    'glGetnConvolutionFilterARB_c',
    'glGetnHistogramARB_c',
    'glGetnMapdvARB_c',
    'glGetnMapfvARB_c',
    'glGetnMapivARB_c',
    'glGetnMinmaxARB_c',
    'glGetnPixelMapfvARB_c',
    'glGetnPixelMapuivARB_c',
    'glGetnPixelMapusvARB_c',
    'glGetnPolygonStippleARB_c',
    'glGetnSeparableFilterARB_c',
    'glGetnTexImageARB_c',
    'glGetnUniformdvARB_c',
    'glGetnUniformfvARB_c',
    'glGetnUniformivARB_c',
    'glGetnUniformuivARB_c',
    'glReadnPixelsARB_c'
  ],
  'GL_ARB_sample_locations' => [
    'glFramebufferSampleLocationsfvARB_c',
    'glNamedFramebufferSampleLocationsfvARB_c'
  ],
  'GL_ARB_sample_shading' => [
    'glMinSampleShadingARB'
  ],
  'GL_ARB_sampler_objects' => [
    'glBindSampler',
    'glDeleteSamplers_c',
    'glGenSamplers_c',
    'glGetSamplerParameterfv_c',
    'glGetSamplerParameterIiv_c',
    'glGetSamplerParameterIuiv_c',
    'glGetSamplerParameteriv_c',
    'glIsSampler',
    'glSamplerParameterf',
    'glSamplerParameterfv_c',
    'glSamplerParameteri',
    'glSamplerParameterIiv_c',
    'glSamplerParameterIuiv_c',
    'glSamplerParameteriv_c'
  ],
  'GL_ARB_separate_shader_objects' => [
    'glActiveShaderProgram',
    'glBindProgramPipeline',
    'glCreateShaderProgramv_c',
    'glDeleteProgramPipelines_c',
    'glGenProgramPipelines_c',
    'glGetProgramPipelineInfoLog_c',
    'glGetProgramPipelineiv_c',
    'glIsProgramPipeline',
    'glProgramUniform1d',
    'glProgramUniform1dv_c',
    'glProgramUniform1f',
    'glProgramUniform1fv_c',
    'glProgramUniform1i',
    'glProgramUniform1iv_c',
    'glProgramUniform1ui',
    'glProgramUniform1uiv_c',
    'glProgramUniform2d',
    'glProgramUniform2dv_c',
    'glProgramUniform2f',
    'glProgramUniform2fv_c',
    'glProgramUniform2i',
    'glProgramUniform2iv_c',
    'glProgramUniform2ui',
    'glProgramUniform2uiv_c',
    'glProgramUniform3d',
    'glProgramUniform3dv_c',
    'glProgramUniform3f',
    'glProgramUniform3fv_c',
    'glProgramUniform3i',
    'glProgramUniform3iv_c',
    'glProgramUniform3ui',
    'glProgramUniform3uiv_c',
    'glProgramUniform4d',
    'glProgramUniform4dv_c',
    'glProgramUniform4f',
    'glProgramUniform4fv_c',
    'glProgramUniform4i',
    'glProgramUniform4iv_c',
    'glProgramUniform4ui',
    'glProgramUniform4uiv_c',
    'glProgramUniformMatrix2dv_c',
    'glProgramUniformMatrix2fv_c',
    'glProgramUniformMatrix2x3dv_c',
    'glProgramUniformMatrix2x3fv_c',
    'glProgramUniformMatrix2x4dv_c',
    'glProgramUniformMatrix2x4fv_c',
    'glProgramUniformMatrix3dv_c',
    'glProgramUniformMatrix3fv_c',
    'glProgramUniformMatrix3x2dv_c',
    'glProgramUniformMatrix3x2fv_c',
    'glProgramUniformMatrix3x4dv_c',
    'glProgramUniformMatrix3x4fv_c',
    'glProgramUniformMatrix4dv_c',
    'glProgramUniformMatrix4fv_c',
    'glProgramUniformMatrix4x2dv_c',
    'glProgramUniformMatrix4x2fv_c',
    'glProgramUniformMatrix4x3dv_c',
    'glProgramUniformMatrix4x3fv_c',
    'glUseProgramStages',
    'glValidateProgramPipeline'
  ],
  'GL_ARB_shader_atomic_counters' => [
    'glGetActiveAtomicCounterBufferiv_c'
  ],
  'GL_ARB_shader_image_load_store' => [
    'glBindImageTexture',
    'glMemoryBarrier'
  ],
  'GL_ARB_shader_objects' => [
    'glAttachObjectARB',
    'glCompileShaderARB',
    'glCreateProgramObjectARB',
    'glCreateShaderObjectARB',
    'glDeleteObjectARB',
    'glDetachObjectARB',
    'glGetActiveUniformARB_c',
    'glGetAttachedObjectsARB_c',
    'glGetHandleARB',
    'glGetInfoLogARB_c',
    'glGetObjectParameterfvARB_c',
    'glGetObjectParameterivARB_c',
    'glGetShaderSourceARB_c',
    'glGetUniformfvARB_c',
    'glGetUniformivARB_c',
    'glGetUniformLocationARB_c',
    'glLinkProgramARB',
    'glShaderSourceARB_c',
    'glUniform1fARB',
    'glUniform1fvARB_c',
    'glUniform1iARB',
    'glUniform1ivARB_c',
    'glUniform2fARB',
    'glUniform2fvARB_c',
    'glUniform2iARB',
    'glUniform2ivARB_c',
    'glUniform3fARB',
    'glUniform3fvARB_c',
    'glUniform3iARB',
    'glUniform3ivARB_c',
    'glUniform4fARB',
    'glUniform4fvARB_c',
    'glUniform4iARB',
    'glUniform4ivARB_c',
    'glUniformMatrix2fvARB_c',
    'glUniformMatrix3fvARB_c',
    'glUniformMatrix4fvARB_c',
    'glUseProgramObjectARB',
    'glValidateProgramARB'
  ],
  'GL_ARB_shader_storage_buffer_object' => [
    'glShaderStorageBlockBinding'
  ],
  'GL_ARB_shader_subroutine' => [
    'glGetActiveSubroutineName_c',
    'glGetActiveSubroutineUniformiv_c',
    'glGetActiveSubroutineUniformName_c',
    'glGetProgramStageiv_c',
    'glGetSubroutineIndex_c',
    'glGetSubroutineUniformLocation_c',
    'glGetUniformSubroutineuiv_c',
    'glUniformSubroutinesuiv_c'
  ],
  'GL_ARB_shading_language_include' => [
    'glCompileShaderIncludeARB_c',
    'glDeleteNamedStringARB_c',
    'glGetNamedStringARB_c',
    'glGetNamedStringivARB_c',
    'glIsNamedStringARB_c',
    'glNamedStringARB_c'
  ],
  'GL_ARB_sparse_buffer' => [
    'glBufferPageCommitmentARB'
  ],
  'GL_ARB_sparse_texture' => [
    'glTexPageCommitmentARB'
  ],
  'GL_ARB_sync' => [
    'glClientWaitSync',
    'glDeleteSync',
    'glFenceSync',
    'glGetInteger64v_c',
    'glGetSynciv_c',
    'glIsSync',
    'glWaitSync'
  ],
  'GL_ARB_tessellation_shader' => [
    'glPatchParameterfv_c',
    'glPatchParameteri'
  ],
  'GL_ARB_texture_barrier' => [
    'glTextureBarrier'
  ],
  'GL_ARB_texture_buffer_object' => [
    'glTexBufferARB'
  ],
  'GL_ARB_texture_buffer_range' => [
    'glTexBufferRange',
    'glTextureBufferRangeEXT'
  ],
  'GL_ARB_texture_compression' => [
    'glCompressedTexImage1DARB_c',
    'glCompressedTexImage2DARB_c',
    'glCompressedTexImage3DARB_c',
    'glCompressedTexSubImage1DARB_c',
    'glCompressedTexSubImage2DARB_c',
    'glCompressedTexSubImage3DARB_c',
    'glGetCompressedTexImageARB_c'
  ],
  'GL_ARB_texture_multisample' => [
    'glGetMultisamplefv_c',
    'glSampleMaski',
    'glTexImage2DMultisample',
    'glTexImage3DMultisample'
  ],
  'GL_ARB_texture_storage' => [
    'glTexStorage1D',
    'glTexStorage2D',
    'glTexStorage3D'
  ],
  'GL_ARB_texture_storage_multisample' => [
    'glTexStorage2DMultisample',
    'glTexStorage3DMultisample',
    'glTextureStorage2DMultisampleEXT',
    'glTextureStorage3DMultisampleEXT'
  ],
  'GL_ARB_texture_view' => [
    'glTextureView'
  ],
  'GL_ARB_timer_query' => [
    'glGetQueryObjecti64v_c',
    'glGetQueryObjectui64v_c',
    'glQueryCounter'
  ],
  'GL_ARB_transform_feedback2' => [
    'glBindTransformFeedback',
    'glDeleteTransformFeedbacks_c',
    'glDrawTransformFeedback',
    'glGenTransformFeedbacks_c',
    'glIsTransformFeedback',
    'glPauseTransformFeedback',
    'glResumeTransformFeedback'
  ],
  'GL_ARB_transform_feedback3' => [
    'glBeginQueryIndexed',
    'glDrawTransformFeedbackStream',
    'glEndQueryIndexed',
    'glGetQueryIndexediv_c'
  ],
  'GL_ARB_transform_feedback_instanced' => [
    'glDrawTransformFeedbackInstanced',
    'glDrawTransformFeedbackStreamInstanced'
  ],
  'GL_ARB_transpose_matrix' => [
    'glLoadTransposeMatrixdARB_c',
    'glLoadTransposeMatrixfARB_c',
    'glMultTransposeMatrixdARB_c',
    'glMultTransposeMatrixfARB_c'
  ],
  'GL_ARB_uniform_buffer_object' => [
    'glBindBufferBase',
    'glBindBufferRange',
    'glGetActiveUniformBlockiv_c',
    'glGetActiveUniformBlockName_c',
    'glGetActiveUniformName_c',
    'glGetActiveUniformsiv_c',
    'glGetIntegeri_v_c',
    'glGetUniformBlockIndex_c',
    'glGetUniformIndices_c',
    'glUniformBlockBinding'
  ],
  'GL_ARB_vertex_array_object' => [
    'glBindVertexArray',
    'glDeleteVertexArrays_c',
    'glGenVertexArrays_c',
    'glIsVertexArray'
  ],
  'GL_ARB_vertex_attrib_64bit' => [
    'glGetVertexAttribLdv_c',
    'glVertexAttribL1d',
    'glVertexAttribL1dv_c',
    'glVertexAttribL2d',
    'glVertexAttribL2dv_c',
    'glVertexAttribL3d',
    'glVertexAttribL3dv_c',
    'glVertexAttribL4d',
    'glVertexAttribL4dv_c',
    'glVertexAttribLPointer_c'
  ],
  'GL_ARB_vertex_attrib_binding' => [
    'glBindVertexBuffer',
    'glVertexArrayBindVertexBufferEXT',
    'glVertexArrayVertexAttribBindingEXT',
    'glVertexArrayVertexAttribFormatEXT',
    'glVertexArrayVertexAttribIFormatEXT',
    'glVertexArrayVertexAttribLFormatEXT',
    'glVertexArrayVertexBindingDivisorEXT',
    'glVertexAttribBinding',
    'glVertexAttribFormat',
    'glVertexAttribIFormat',
    'glVertexAttribLFormat',
    'glVertexBindingDivisor'
  ],
  'GL_ARB_vertex_blend' => [
    'glVertexBlendARB',
    'glWeightbvARB_c',
    'glWeightdvARB_c',
    'glWeightfvARB_c',
    'glWeightivARB_c',
    'glWeightPointerARB_c',
    'glWeightsvARB_c',
    'glWeightubvARB_c',
    'glWeightuivARB_c',
    'glWeightusvARB_c'
  ],
  'GL_ARB_vertex_buffer_object' => [
    'glBindBufferARB',
    'glBufferDataARB_c',
    'glBufferSubDataARB_c',
    'glDeleteBuffersARB_c',
    'glGenBuffersARB_c',
    'glGetBufferParameterivARB_c',
    'glGetBufferPointervARB_c',
    'glGetBufferSubDataARB_c',
    'glIsBufferARB',
    'glMapBufferARB_c',
    'glUnmapBufferARB'
  ],
  'GL_ARB_vertex_program' => [
    'glBindProgramARB',
    'glDeleteProgramsARB_c',
    'glDisableVertexAttribArrayARB',
    'glEnableVertexAttribArrayARB',
    'glGenProgramsARB_c',
    'glGetProgramEnvParameterdvARB_c',
    'glGetProgramEnvParameterfvARB_c',
    'glGetProgramivARB_c',
    'glGetProgramLocalParameterdvARB_c',
    'glGetProgramLocalParameterfvARB_c',
    'glGetProgramStringARB_c',
    'glGetVertexAttribdvARB_c',
    'glGetVertexAttribfvARB_c',
    'glGetVertexAttribivARB_c',
    'glGetVertexAttribPointervARB_c',
    'glIsProgramARB',
    'glProgramEnvParameter4dARB',
    'glProgramEnvParameter4dvARB_c',
    'glProgramEnvParameter4fARB',
    'glProgramEnvParameter4fvARB_c',
    'glProgramLocalParameter4dARB',
    'glProgramLocalParameter4dvARB_c',
    'glProgramLocalParameter4fARB',
    'glProgramLocalParameter4fvARB_c',
    'glProgramStringARB_c',
    'glVertexAttrib1dARB',
    'glVertexAttrib1dvARB_c',
    'glVertexAttrib1fARB',
    'glVertexAttrib1fvARB_c',
    'glVertexAttrib1sARB',
    'glVertexAttrib1svARB_c',
    'glVertexAttrib2dARB',
    'glVertexAttrib2dvARB_c',
    'glVertexAttrib2fARB',
    'glVertexAttrib2fvARB_c',
    'glVertexAttrib2sARB',
    'glVertexAttrib2svARB_c',
    'glVertexAttrib3dARB',
    'glVertexAttrib3dvARB_c',
    'glVertexAttrib3fARB',
    'glVertexAttrib3fvARB_c',
    'glVertexAttrib3sARB',
    'glVertexAttrib3svARB_c',
    'glVertexAttrib4bvARB_c',
    'glVertexAttrib4dARB',
    'glVertexAttrib4dvARB_c',
    'glVertexAttrib4fARB',
    'glVertexAttrib4fvARB_c',
    'glVertexAttrib4ivARB_c',
    'glVertexAttrib4NbvARB_c',
    'glVertexAttrib4NivARB_c',
    'glVertexAttrib4NsvARB_c',
    'glVertexAttrib4NubARB',
    'glVertexAttrib4NubvARB_c',
    'glVertexAttrib4NuivARB_c',
    'glVertexAttrib4NusvARB_c',
    'glVertexAttrib4sARB',
    'glVertexAttrib4svARB_c',
    'glVertexAttrib4ubvARB_c',
    'glVertexAttrib4uivARB_c',
    'glVertexAttrib4usvARB_c',
    'glVertexAttribPointerARB_c'
  ],
  'GL_ARB_vertex_shader' => [
    'glBindAttribLocationARB_c',
    'glGetActiveAttribARB_c',
    'glGetAttribLocationARB_c'
  ],
  'GL_ARB_vertex_type_2_10_10_10_rev' => [
    'glColorP3ui',
    'glColorP3uiv_c',
    'glColorP4ui',
    'glColorP4uiv_c',
    'glMultiTexCoordP1ui',
    'glMultiTexCoordP1uiv_c',
    'glMultiTexCoordP2ui',
    'glMultiTexCoordP2uiv_c',
    'glMultiTexCoordP3ui',
    'glMultiTexCoordP3uiv_c',
    'glMultiTexCoordP4ui',
    'glMultiTexCoordP4uiv_c',
    'glNormalP3ui',
    'glNormalP3uiv_c',
    'glSecondaryColorP3ui',
    'glSecondaryColorP3uiv_c',
    'glTexCoordP1ui',
    'glTexCoordP1uiv_c',
    'glTexCoordP2ui',
    'glTexCoordP2uiv_c',
    'glTexCoordP3ui',
    'glTexCoordP3uiv_c',
    'glTexCoordP4ui',
    'glTexCoordP4uiv_c',
    'glVertexAttribP1ui',
    'glVertexAttribP1uiv_c',
    'glVertexAttribP2ui',
    'glVertexAttribP2uiv_c',
    'glVertexAttribP3ui',
    'glVertexAttribP3uiv_c',
    'glVertexAttribP4ui',
    'glVertexAttribP4uiv_c',
    'glVertexP2ui',
    'glVertexP2uiv_c',
    'glVertexP3ui',
    'glVertexP3uiv_c',
    'glVertexP4ui',
    'glVertexP4uiv_c'
  ],
  'GL_ARB_viewport_array' => [
    'glDepthRangeArrayv_c',
    'glDepthRangeIndexed',
    'glGetDoublei_v_c',
    'glGetFloati_v_c',
    'glScissorArrayv_c',
    'glScissorIndexed',
    'glScissorIndexedv_c',
    'glViewportArrayv_c',
    'glViewportIndexedf',
    'glViewportIndexedfv_c'
  ],
  'GL_ARB_window_pos' => [
    'glWindowPos2dARB',
    'glWindowPos2dvARB_c',
    'glWindowPos2fARB',
    'glWindowPos2fvARB_c',
    'glWindowPos2iARB',
    'glWindowPos2ivARB_c',
    'glWindowPos2sARB',
    'glWindowPos2svARB_c',
    'glWindowPos3dARB',
    'glWindowPos3dvARB_c',
    'glWindowPos3fARB',
    'glWindowPos3fvARB_c',
    'glWindowPos3iARB',
    'glWindowPos3ivARB_c',
    'glWindowPos3sARB',
    'glWindowPos3svARB_c'
  ],
  'GL_ATI_draw_buffers' => [
    'glDrawBuffersATI_c'
  ],
  'GL_ATI_element_array' => [
    'glDrawElementArrayATI',
    'glDrawRangeElementArrayATI',
    'glElementPointerATI_c'
  ],
  'GL_ATI_envmap_bumpmap' => [
    'glGetTexBumpParameterfvATI_c',
    'glGetTexBumpParameterivATI_c',
    'glTexBumpParameterfvATI_c',
    'glTexBumpParameterivATI_c'
  ],
  'GL_ATI_fragment_shader' => [
    'glAlphaFragmentOp1ATI',
    'glAlphaFragmentOp2ATI',
    'glAlphaFragmentOp3ATI',
    'glBeginFragmentShaderATI',
    'glBindFragmentShaderATI',
    'glColorFragmentOp1ATI',
    'glColorFragmentOp2ATI',
    'glColorFragmentOp3ATI',
    'glDeleteFragmentShaderATI',
    'glEndFragmentShaderATI',
    'glGenFragmentShadersATI',
    'glPassTexCoordATI',
    'glSampleMapATI',
    'glSetFragmentShaderConstantATI_c'
  ],
  'GL_ATI_map_object_buffer' => [
    'glMapObjectBufferATI_c',
    'glUnmapObjectBufferATI'
  ],
  'GL_ATI_pn_triangles' => [
    'glPNTrianglesfATI',
    'glPNTrianglesiATI'
  ],
  'GL_ATI_separate_stencil' => [
    'glStencilFuncSeparateATI',
    'glStencilOpSeparateATI'
  ],
  'GL_ATI_vertex_array_object' => [
    'glArrayObjectATI',
    'glFreeObjectBufferATI',
    'glGetArrayObjectfvATI_c',
    'glGetArrayObjectivATI_c',
    'glGetObjectBufferfvATI_c',
    'glGetObjectBufferivATI_c',
    'glGetVariantArrayObjectfvATI_c',
    'glGetVariantArrayObjectivATI_c',
    'glIsObjectBufferATI',
    'glNewObjectBufferATI_c',
    'glUpdateObjectBufferATI_c',
    'glVariantArrayObjectATI'
  ],
  'GL_ATI_vertex_attrib_array_object' => [
    'glGetVertexAttribArrayObjectfvATI_c',
    'glGetVertexAttribArrayObjectivATI_c',
    'glVertexAttribArrayObjectATI'
  ],
  'GL_ATI_vertex_streams' => [
    'glClientActiveVertexStreamATI',
    'glNormalStream3bATI',
    'glNormalStream3bvATI_c',
    'glNormalStream3dATI',
    'glNormalStream3dvATI_c',
    'glNormalStream3fATI',
    'glNormalStream3fvATI_c',
    'glNormalStream3iATI',
    'glNormalStream3ivATI_c',
    'glNormalStream3sATI',
    'glNormalStream3svATI_c',
    'glVertexBlendEnvfATI',
    'glVertexBlendEnviATI',
    'glVertexStream1dATI',
    'glVertexStream1dvATI_c',
    'glVertexStream1fATI',
    'glVertexStream1fvATI_c',
    'glVertexStream1iATI',
    'glVertexStream1ivATI_c',
    'glVertexStream1sATI',
    'glVertexStream1svATI_c',
    'glVertexStream2dATI',
    'glVertexStream2dvATI_c',
    'glVertexStream2fATI',
    'glVertexStream2fvATI_c',
    'glVertexStream2iATI',
    'glVertexStream2ivATI_c',
    'glVertexStream2sATI',
    'glVertexStream2svATI_c',
    'glVertexStream3dATI',
    'glVertexStream3dvATI_c',
    'glVertexStream3fATI',
    'glVertexStream3fvATI_c',
    'glVertexStream3iATI',
    'glVertexStream3ivATI_c',
    'glVertexStream3sATI',
    'glVertexStream3svATI_c',
    'glVertexStream4dATI',
    'glVertexStream4dvATI_c',
    'glVertexStream4fATI',
    'glVertexStream4fvATI_c',
    'glVertexStream4iATI',
    'glVertexStream4ivATI_c',
    'glVertexStream4sATI',
    'glVertexStream4svATI_c'
  ],
  'GL_EXT_base_instance' => [
    'glDrawArraysInstancedBaseInstanceEXT',
    'glDrawElementsInstancedBaseInstanceEXT_c',
    'glDrawElementsInstancedBaseVertexBaseInstanceEXT_c'
  ],
  'GL_EXT_bindable_uniform' => [
    'glGetUniformBufferSizeEXT',
    'glGetUniformOffsetEXT',
    'glUniformBufferEXT'
  ],
  'GL_EXT_blend_color' => [
    'glBlendColorEXT'
  ],
  'GL_EXT_blend_equation_separate' => [
    'glBlendEquationSeparateEXT'
  ],
  'GL_EXT_blend_func_extended' => [
    'glBindFragDataLocationIndexedEXT_c',
    'glGetFragDataIndexEXT_c',
    'glGetProgramResourceLocationIndexEXT_c'
  ],
  'GL_EXT_blend_func_separate' => [
    'glBlendFuncSeparateEXT'
  ],
  'GL_EXT_blend_minmax' => [
    'glBlendEquationEXT'
  ],
  'GL_EXT_buffer_storage' => [
    'glBufferStorageEXT_c',
    'glNamedBufferStorageEXT_c'
  ],
  'GL_EXT_clear_texture' => [
    'glClearTexImageEXT_c',
    'glClearTexSubImageEXT_c'
  ],
  'GL_EXT_color_subtable' => [
    'glColorSubTableEXT_c',
    'glCopyColorSubTableEXT'
  ],
  'GL_EXT_compiled_vertex_array' => [
    'glLockArraysEXT',
    'glUnlockArraysEXT'
  ],
  'GL_EXT_convolution' => [
    'glConvolutionFilter1DEXT_c',
    'glConvolutionFilter2DEXT_c',
    'glConvolutionParameterfEXT',
    'glConvolutionParameterfvEXT_c',
    'glConvolutionParameteriEXT',
    'glConvolutionParameterivEXT_c',
    'glCopyConvolutionFilter1DEXT',
    'glCopyConvolutionFilter2DEXT',
    'glGetConvolutionFilterEXT_c',
    'glGetConvolutionParameterfvEXT_c',
    'glGetConvolutionParameterivEXT_c',
    'glGetSeparableFilterEXT_c',
    'glSeparableFilter2DEXT_c'
  ],
  'GL_EXT_coordinate_frame' => [
    'glBinormalPointerEXT_c',
    'glTangentPointerEXT_c'
  ],
  'GL_EXT_copy_image' => [
    'glCopyImageSubDataEXT'
  ],
  'GL_EXT_copy_texture' => [
    'glCopyTexImage1DEXT',
    'glCopyTexImage2DEXT',
    'glCopyTexSubImage1DEXT',
    'glCopyTexSubImage2DEXT',
    'glCopyTexSubImage3DEXT'
  ],
  'GL_EXT_cull_vertex' => [
    'glCullParameterdvEXT_c',
    'glCullParameterfvEXT_c'
  ],
  'GL_EXT_debug_label' => [
    'glGetObjectLabelEXT_c',
    'glLabelObjectEXT_c'
  ],
  'GL_EXT_debug_marker' => [
    'glInsertEventMarkerEXT_c',
    'glPopGroupMarkerEXT',
    'glPushGroupMarkerEXT_c'
  ],
  'GL_EXT_depth_bounds_test' => [
    'glDepthBoundsEXT'
  ],
  'GL_EXT_direct_state_access' => [
    'glBindMultiTextureEXT',
    'glCheckNamedFramebufferStatusEXT',
    'glClientAttribDefaultEXT',
    'glCompressedMultiTexImage1DEXT_c',
    'glCompressedMultiTexImage2DEXT_c',
    'glCompressedMultiTexImage3DEXT_c',
    'glCompressedMultiTexSubImage1DEXT_c',
    'glCompressedMultiTexSubImage2DEXT_c',
    'glCompressedMultiTexSubImage3DEXT_c',
    'glCompressedTextureImage1DEXT_c',
    'glCompressedTextureImage2DEXT_c',
    'glCompressedTextureImage3DEXT_c',
    'glCompressedTextureSubImage1DEXT_c',
    'glCompressedTextureSubImage2DEXT_c',
    'glCompressedTextureSubImage3DEXT_c',
    'glCopyMultiTexImage1DEXT',
    'glCopyMultiTexImage2DEXT',
    'glCopyMultiTexSubImage1DEXT',
    'glCopyMultiTexSubImage2DEXT',
    'glCopyMultiTexSubImage3DEXT',
    'glCopyTextureImage1DEXT',
    'glCopyTextureImage2DEXT',
    'glCopyTextureSubImage1DEXT',
    'glCopyTextureSubImage2DEXT',
    'glCopyTextureSubImage3DEXT',
    'glDisableClientStateiEXT',
    'glDisableClientStateIndexedEXT',
    'glDisableVertexArrayAttribEXT',
    'glDisableVertexArrayEXT',
    'glEnableClientStateiEXT',
    'glEnableClientStateIndexedEXT',
    'glEnableVertexArrayAttribEXT',
    'glEnableVertexArrayEXT',
    'glFlushMappedNamedBufferRangeEXT',
    'glFramebufferDrawBufferEXT',
    'glFramebufferDrawBuffersEXT_c',
    'glFramebufferReadBufferEXT',
    'glGenerateMultiTexMipmapEXT',
    'glGenerateTextureMipmapEXT',
    'glGetCompressedMultiTexImageEXT_c',
    'glGetCompressedTextureImageEXT_c',
    'glGetDoubleIndexedvEXT_c',
    'glGetDoublei_vEXT_c',
    'glGetFloatIndexedvEXT_c',
    'glGetFloati_vEXT_c',
    'glGetFramebufferParameterivEXT_c',
    'glGetMultiTexEnvfvEXT_c',
    'glGetMultiTexEnvivEXT_c',
    'glGetMultiTexGendvEXT_c',
    'glGetMultiTexGenfvEXT_c',
    'glGetMultiTexGenivEXT_c',
    'glGetMultiTexImageEXT_c',
    'glGetMultiTexLevelParameterfvEXT_c',
    'glGetMultiTexLevelParameterivEXT_c',
    'glGetMultiTexParameterfvEXT_c',
    'glGetMultiTexParameterIivEXT_c',
    'glGetMultiTexParameterIuivEXT_c',
    'glGetMultiTexParameterivEXT_c',
    'glGetNamedBufferParameterivEXT_c',
    'glGetNamedBufferPointervEXT_c',
    'glGetNamedBufferSubDataEXT_c',
    'glGetNamedFramebufferAttachmentParameterivEXT_c',
    'glGetNamedProgramivEXT_c',
    'glGetNamedProgramLocalParameterdvEXT_c',
    'glGetNamedProgramLocalParameterfvEXT_c',
    'glGetNamedProgramLocalParameterIivEXT_c',
    'glGetNamedProgramLocalParameterIuivEXT_c',
    'glGetNamedProgramStringEXT_c',
    'glGetNamedRenderbufferParameterivEXT_c',
    'glGetPointerIndexedvEXT_c',
    'glGetPointeri_vEXT_c',
    'glGetTextureImageEXT_c',
    'glGetTextureLevelParameterfvEXT_c',
    'glGetTextureLevelParameterivEXT_c',
    'glGetTextureParameterfvEXT_c',
    'glGetTextureParameterIivEXT_c',
    'glGetTextureParameterIuivEXT_c',
    'glGetTextureParameterivEXT_c',
    'glGetVertexArrayIntegeri_vEXT_c',
    'glGetVertexArrayIntegervEXT_c',
    'glGetVertexArrayPointeri_vEXT_c',
    'glGetVertexArrayPointervEXT_c',
    'glMapNamedBufferEXT_c',
    'glMapNamedBufferRangeEXT_c',
    'glMatrixFrustumEXT',
    'glMatrixLoaddEXT_c',
    'glMatrixLoadfEXT_c',
    'glMatrixLoadIdentityEXT',
    'glMatrixLoadTransposedEXT_c',
    'glMatrixLoadTransposefEXT_c',
    'glMatrixMultdEXT_c',
    'glMatrixMultfEXT_c',
    'glMatrixMultTransposedEXT_c',
    'glMatrixMultTransposefEXT_c',
    'glMatrixOrthoEXT',
    'glMatrixPopEXT',
    'glMatrixPushEXT',
    'glMatrixRotatedEXT',
    'glMatrixRotatefEXT',
    'glMatrixScaledEXT',
    'glMatrixScalefEXT',
    'glMatrixTranslatedEXT',
    'glMatrixTranslatefEXT',
    'glMultiTexBufferEXT',
    'glMultiTexCoordPointerEXT_c',
    'glMultiTexEnvfEXT',
    'glMultiTexEnvfvEXT_c',
    'glMultiTexEnviEXT',
    'glMultiTexEnvivEXT_c',
    'glMultiTexGendEXT',
    'glMultiTexGendvEXT_c',
    'glMultiTexGenfEXT',
    'glMultiTexGenfvEXT_c',
    'glMultiTexGeniEXT',
    'glMultiTexGenivEXT_c',
    'glMultiTexImage1DEXT_c',
    'glMultiTexImage2DEXT_c',
    'glMultiTexImage3DEXT_c',
    'glMultiTexParameterfEXT',
    'glMultiTexParameterfvEXT_c',
    'glMultiTexParameteriEXT',
    'glMultiTexParameterIivEXT_c',
    'glMultiTexParameterIuivEXT_c',
    'glMultiTexParameterivEXT_c',
    'glMultiTexRenderbufferEXT',
    'glMultiTexSubImage1DEXT_c',
    'glMultiTexSubImage2DEXT_c',
    'glMultiTexSubImage3DEXT_c',
    'glNamedBufferDataEXT_c',
    'glNamedBufferSubDataEXT_c',
    'glNamedCopyBufferSubDataEXT',
    'glNamedFramebufferRenderbufferEXT',
    'glNamedFramebufferTexture1DEXT',
    'glNamedFramebufferTexture2DEXT',
    'glNamedFramebufferTexture3DEXT',
    'glNamedFramebufferTextureEXT',
    'glNamedFramebufferTextureFaceEXT',
    'glNamedFramebufferTextureLayerEXT',
    'glNamedProgramLocalParameter4dEXT',
    'glNamedProgramLocalParameter4dvEXT_c',
    'glNamedProgramLocalParameter4fEXT',
    'glNamedProgramLocalParameter4fvEXT_c',
    'glNamedProgramLocalParameterI4iEXT',
    'glNamedProgramLocalParameterI4ivEXT_c',
    'glNamedProgramLocalParameterI4uiEXT',
    'glNamedProgramLocalParameterI4uivEXT_c',
    'glNamedProgramLocalParameters4fvEXT_c',
    'glNamedProgramLocalParametersI4ivEXT_c',
    'glNamedProgramLocalParametersI4uivEXT_c',
    'glNamedProgramStringEXT_c',
    'glNamedRenderbufferStorageEXT',
    'glNamedRenderbufferStorageMultisampleCoverageEXT',
    'glNamedRenderbufferStorageMultisampleEXT',
    'glProgramUniform1fEXT',
    'glProgramUniform1fvEXT_c',
    'glProgramUniform1iEXT',
    'glProgramUniform1ivEXT_c',
    'glProgramUniform1uiEXT',
    'glProgramUniform1uivEXT_c',
    'glProgramUniform2fEXT',
    'glProgramUniform2fvEXT_c',
    'glProgramUniform2iEXT',
    'glProgramUniform2ivEXT_c',
    'glProgramUniform2uiEXT',
    'glProgramUniform2uivEXT_c',
    'glProgramUniform3fEXT',
    'glProgramUniform3fvEXT_c',
    'glProgramUniform3iEXT',
    'glProgramUniform3ivEXT_c',
    'glProgramUniform3uiEXT',
    'glProgramUniform3uivEXT_c',
    'glProgramUniform4fEXT',
    'glProgramUniform4fvEXT_c',
    'glProgramUniform4iEXT',
    'glProgramUniform4ivEXT_c',
    'glProgramUniform4uiEXT',
    'glProgramUniform4uivEXT_c',
    'glProgramUniformMatrix2fvEXT_c',
    'glProgramUniformMatrix2x3fvEXT_c',
    'glProgramUniformMatrix2x4fvEXT_c',
    'glProgramUniformMatrix3fvEXT_c',
    'glProgramUniformMatrix3x2fvEXT_c',
    'glProgramUniformMatrix3x4fvEXT_c',
    'glProgramUniformMatrix4fvEXT_c',
    'glProgramUniformMatrix4x2fvEXT_c',
    'glProgramUniformMatrix4x3fvEXT_c',
    'glPushClientAttribDefaultEXT',
    'glTextureBufferEXT',
    'glTextureImage1DEXT_c',
    'glTextureImage2DEXT_c',
    'glTextureImage3DEXT_c',
    'glTextureParameterfEXT',
    'glTextureParameterfvEXT_c',
    'glTextureParameteriEXT',
    'glTextureParameterIivEXT_c',
    'glTextureParameterIuivEXT_c',
    'glTextureParameterivEXT_c',
    'glTextureRenderbufferEXT',
    'glTextureSubImage1DEXT_c',
    'glTextureSubImage2DEXT_c',
    'glTextureSubImage3DEXT_c',
    'glUnmapNamedBufferEXT',
    'glVertexArrayColorOffsetEXT',
    'glVertexArrayEdgeFlagOffsetEXT',
    'glVertexArrayFogCoordOffsetEXT',
    'glVertexArrayIndexOffsetEXT',
    'glVertexArrayMultiTexCoordOffsetEXT',
    'glVertexArrayNormalOffsetEXT',
    'glVertexArraySecondaryColorOffsetEXT',
    'glVertexArrayTexCoordOffsetEXT',
    'glVertexArrayVertexAttribDivisorEXT',
    'glVertexArrayVertexAttribIOffsetEXT',
    'glVertexArrayVertexAttribOffsetEXT',
    'glVertexArrayVertexOffsetEXT'
  ],
  'GL_EXT_discard_framebuffer' => [
    'glDiscardFramebufferEXT_c'
  ],
  'GL_EXT_draw_buffers' => [
    'glDrawBuffersEXT_c'
  ],
  'GL_EXT_draw_buffers2' => [
    'glColorMaskIndexedEXT',
    'glDisableIndexedEXT',
    'glEnableIndexedEXT',
    'glGetBooleanIndexedvEXT_c',
    'glGetIntegerIndexedvEXT_c',
    'glIsEnabledIndexedEXT'
  ],
  'GL_EXT_draw_buffers_indexed' => [
    'glBlendEquationiEXT',
    'glBlendEquationSeparateiEXT',
    'glBlendFunciEXT',
    'glBlendFuncSeparateiEXT',
    'glColorMaskiEXT',
    'glDisableiEXT',
    'glEnableiEXT',
    'glIsEnablediEXT'
  ],
  'GL_EXT_draw_elements_base_vertex' => [
    'glDrawElementsBaseVertexEXT_c',
    'glDrawElementsInstancedBaseVertexEXT_c',
    'glDrawRangeElementsBaseVertexEXT_c',
    'glMultiDrawElementsBaseVertexEXT_c'
  ],
  'GL_EXT_draw_instanced' => [
    'glDrawArraysInstancedEXT',
    'glDrawElementsInstancedEXT_c'
  ],
  'GL_EXT_draw_range_elements' => [
    'glDrawRangeElementsEXT_c'
  ],
  'GL_EXT_external_buffer' => [
    'glBufferStorageExternalEXT',
    'glNamedBufferStorageExternalEXT'
  ],
  'GL_EXT_fog_coord' => [
    'glFogCoorddEXT',
    'glFogCoorddvEXT_c',
    'glFogCoordfEXT',
    'glFogCoordfvEXT_c',
    'glFogCoordPointerEXT_c'
  ],
  'GL_EXT_fragment_lighting' => [
    'glFragmentColorMaterialEXT',
    'glFragmentLightfEXT',
    'glFragmentLightfvEXT_c',
    'glFragmentLightiEXT',
    'glFragmentLightivEXT_c',
    'glFragmentLightModelfEXT',
    'glFragmentLightModelfvEXT_c',
    'glFragmentLightModeliEXT',
    'glFragmentLightModelivEXT_c',
    'glFragmentMaterialfEXT',
    'glFragmentMaterialfvEXT_c',
    'glFragmentMaterialiEXT',
    'glFragmentMaterialivEXT_c',
    'glGetFragmentLightfvEXT_c',
    'glGetFragmentLightivEXT_c',
    'glGetFragmentMaterialfvEXT_c',
    'glGetFragmentMaterialivEXT_c',
    'glLightEnviEXT'
  ],
  'GL_EXT_framebuffer_blit' => [
    'glBlitFramebufferEXT'
  ],
  'GL_EXT_framebuffer_multisample' => [
    'glRenderbufferStorageMultisampleEXT'
  ],
  'GL_EXT_framebuffer_object' => [
    'glBindFramebufferEXT',
    'glBindRenderbufferEXT',
    'glCheckFramebufferStatusEXT',
    'glDeleteFramebuffersEXT_c',
    'glDeleteRenderbuffersEXT_c',
    'glFramebufferRenderbufferEXT',
    'glFramebufferTexture1DEXT',
    'glFramebufferTexture2DEXT',
    'glFramebufferTexture3DEXT',
    'glGenerateMipmapEXT',
    'glGenFramebuffersEXT_c',
    'glGenRenderbuffersEXT_c',
    'glGetFramebufferAttachmentParameterivEXT_c',
    'glGetRenderbufferParameterivEXT_c',
    'glIsFramebufferEXT',
    'glIsRenderbufferEXT',
    'glRenderbufferStorageEXT'
  ],
  'GL_EXT_geometry_shader4' => [
    'glFramebufferTextureEXT',
    'glFramebufferTextureFaceEXT',
    'glProgramParameteriEXT'
  ],
  'GL_EXT_gpu_program_parameters' => [
    'glProgramEnvParameters4fvEXT_c',
    'glProgramLocalParameters4fvEXT_c'
  ],
  'GL_EXT_gpu_shader4' => [
    'glBindFragDataLocationEXT_c',
    'glGetFragDataLocationEXT_c',
    'glGetUniformuivEXT_c',
    'glGetVertexAttribIivEXT_c',
    'glGetVertexAttribIuivEXT_c',
    'glUniform1uiEXT',
    'glUniform1uivEXT_c',
    'glUniform2uiEXT',
    'glUniform2uivEXT_c',
    'glUniform3uiEXT',
    'glUniform3uivEXT_c',
    'glUniform4uiEXT',
    'glUniform4uivEXT_c',
    'glVertexAttribI1iEXT',
    'glVertexAttribI1ivEXT_c',
    'glVertexAttribI1uiEXT',
    'glVertexAttribI1uivEXT_c',
    'glVertexAttribI2iEXT',
    'glVertexAttribI2ivEXT_c',
    'glVertexAttribI2uiEXT',
    'glVertexAttribI2uivEXT_c',
    'glVertexAttribI3iEXT',
    'glVertexAttribI3ivEXT_c',
    'glVertexAttribI3uiEXT',
    'glVertexAttribI3uivEXT_c',
    'glVertexAttribI4bvEXT_c',
    'glVertexAttribI4iEXT',
    'glVertexAttribI4ivEXT_c',
    'glVertexAttribI4svEXT_c',
    'glVertexAttribI4ubvEXT_c',
    'glVertexAttribI4uiEXT',
    'glVertexAttribI4uivEXT_c',
    'glVertexAttribI4usvEXT_c',
    'glVertexAttribIPointerEXT_c'
  ],
  'GL_EXT_histogram' => [
    'glGetHistogramEXT_c',
    'glGetHistogramParameterfvEXT_c',
    'glGetHistogramParameterivEXT_c',
    'glGetMinmaxEXT_c',
    'glGetMinmaxParameterfvEXT_c',
    'glGetMinmaxParameterivEXT_c',
    'glHistogramEXT',
    'glMinmaxEXT',
    'glResetHistogramEXT',
    'glResetMinmaxEXT'
  ],
  'GL_EXT_index_func' => [
    'glIndexFuncEXT'
  ],
  'GL_EXT_index_material' => [
    'glIndexMaterialEXT'
  ],
  'GL_EXT_instanced_arrays' => [
    'glVertexAttribDivisorEXT'
  ],
  'GL_EXT_light_texture' => [
    'glApplyTextureEXT',
    'glTextureLightEXT',
    'glTextureMaterialEXT'
  ],
  'GL_EXT_map_buffer_range' => [
    'glFlushMappedBufferRangeEXT',
    'glMapBufferRangeEXT_c'
  ],
  'GL_EXT_memory_object' => [
    'glBufferStorageMemEXT',
    'glCreateMemoryObjectsEXT_c',
    'glDeleteMemoryObjectsEXT_c',
    'glGetMemoryObjectParameterivEXT_c',
    'glGetUnsignedBytei_vEXT_c',
    'glGetUnsignedBytevEXT_c',
    'glIsMemoryObjectEXT',
    'glMemoryObjectParameterivEXT_c',
    'glNamedBufferStorageMemEXT',
    'glTexStorageMem1DEXT',
    'glTexStorageMem2DEXT',
    'glTexStorageMem2DMultisampleEXT',
    'glTexStorageMem3DEXT',
    'glTexStorageMem3DMultisampleEXT',
    'glTextureStorageMem1DEXT',
    'glTextureStorageMem2DEXT',
    'glTextureStorageMem2DMultisampleEXT',
    'glTextureStorageMem3DEXT',
    'glTextureStorageMem3DMultisampleEXT'
  ],
  'GL_EXT_memory_object_fd' => [
    'glImportMemoryFdEXT'
  ],
  'GL_EXT_memory_object_win32' => [
    'glImportMemoryWin32HandleEXT_c',
    'glImportMemoryWin32NameEXT_c'
  ],
  'GL_EXT_multi_draw_arrays' => [
    'glMultiDrawArraysEXT_c',
    'glMultiDrawElementsEXT_c'
  ],
  'GL_EXT_multi_draw_indirect' => [
    'glMultiDrawArraysIndirectEXT_c',
    'glMultiDrawElementsIndirectEXT_c'
  ],
  'GL_EXT_multisample' => [
    'glSampleMaskEXT',
    'glSamplePatternEXT'
  ],
  'GL_EXT_multisampled_render_to_texture' => [
    'glFramebufferTexture2DMultisampleEXT'
  ],
  'GL_EXT_multiview_draw_buffers' => [
    'glDrawBuffersIndexedEXT_c',
    'glGetIntegeri_vEXT_c',
    'glReadBufferIndexedEXT'
  ],
  'GL_EXT_paletted_texture' => [
    'glColorTableEXT_c',
    'glGetColorTableEXT_c',
    'glGetColorTableParameterfvEXT_c',
    'glGetColorTableParameterivEXT_c'
  ],
  'GL_EXT_pixel_transform' => [
    'glGetPixelTransformParameterfvEXT_c',
    'glGetPixelTransformParameterivEXT_c',
    'glPixelTransformParameterfEXT',
    'glPixelTransformParameterfvEXT_c',
    'glPixelTransformParameteriEXT',
    'glPixelTransformParameterivEXT_c'
  ],
  'GL_EXT_point_parameters' => [
    'glPointParameterfEXT',
    'glPointParameterfvEXT_c'
  ],
  'GL_EXT_polygon_offset' => [
    'glPolygonOffsetEXT'
  ],
  'GL_EXT_polygon_offset_clamp' => [
    'glPolygonOffsetClampEXT'
  ],
  'GL_EXT_provoking_vertex' => [
    'glProvokingVertexEXT'
  ],
  'GL_EXT_raster_multisample' => [
    'glCoverageModulationNV',
    'glCoverageModulationTableNV_c',
    'glGetCoverageModulationTableNV_c',
    'glRasterSamplesEXT'
  ],
  'GL_EXT_scene_marker' => [
    'glBeginSceneEXT',
    'glEndSceneEXT'
  ],
  'GL_EXT_secondary_color' => [
    'glSecondaryColor3bEXT',
    'glSecondaryColor3bvEXT_c',
    'glSecondaryColor3dEXT',
    'glSecondaryColor3dvEXT_c',
    'glSecondaryColor3fEXT',
    'glSecondaryColor3fvEXT_c',
    'glSecondaryColor3iEXT',
    'glSecondaryColor3ivEXT_c',
    'glSecondaryColor3sEXT',
    'glSecondaryColor3svEXT_c',
    'glSecondaryColor3ubEXT',
    'glSecondaryColor3ubvEXT_c',
    'glSecondaryColor3uiEXT',
    'glSecondaryColor3uivEXT_c',
    'glSecondaryColor3usEXT',
    'glSecondaryColor3usvEXT_c',
    'glSecondaryColorPointerEXT_c'
  ],
  'GL_EXT_semaphore' => [
    'glDeleteSemaphoresEXT_c',
    'glGenSemaphoresEXT_c',
    'glGetSemaphoreParameterui64vEXT_c',
    'glIsSemaphoreEXT',
    'glSemaphoreParameterui64vEXT_c',
    'glSignalSemaphoreEXT_c',
    'glWaitSemaphoreEXT_c'
  ],
  'GL_EXT_semaphore_fd' => [
    'glImportSemaphoreFdEXT'
  ],
  'GL_EXT_semaphore_win32' => [
    'glImportSemaphoreWin32HandleEXT_c',
    'glImportSemaphoreWin32NameEXT_c'
  ],
  'GL_EXT_separate_shader_objects' => [
    'glActiveProgramEXT',
    'glCreateShaderProgramEXT_c',
    'glUseShaderProgramEXT'
  ],
  'GL_EXT_shader_image_load_store' => [
    'glBindImageTextureEXT',
    'glMemoryBarrierEXT'
  ],
  'GL_EXT_shader_pixel_local_storage2' => [
    'glClearPixelLocalStorageuiEXT_c',
    'glFramebufferPixelLocalStorageSizeEXT',
    'glGetFramebufferPixelLocalStorageSizeEXT'
  ],
  'GL_EXT_sparse_texture' => [
    'glTexPageCommitmentEXT',
    'glTexturePageCommitmentEXT'
  ],
  'GL_EXT_stencil_two_side' => [
    'glActiveStencilFaceEXT'
  ],
  'GL_EXT_subtexture' => [
    'glTexSubImage1DEXT_c',
    'glTexSubImage2DEXT_c',
    'glTexSubImage3DEXT_c'
  ],
  'GL_EXT_texture3D' => [
    'glTexImage3DEXT_c'
  ],
  'GL_EXT_texture_array' => [
    'glFramebufferTextureLayerEXT'
  ],
  'GL_EXT_texture_buffer_object' => [
    'glTexBufferEXT'
  ],
  'GL_EXT_texture_integer' => [
    'glClearColorIiEXT',
    'glClearColorIuiEXT',
    'glGetTexParameterIivEXT_c',
    'glGetTexParameterIuivEXT_c',
    'glTexParameterIivEXT_c',
    'glTexParameterIuivEXT_c'
  ],
  'GL_EXT_texture_object' => [
    'glAreTexturesResidentEXT_c',
    'glBindTextureEXT',
    'glDeleteTexturesEXT_c',
    'glGenTexturesEXT_c',
    'glIsTextureEXT',
    'glPrioritizeTexturesEXT_c'
  ],
  'GL_EXT_texture_perturb_normal' => [
    'glTextureNormalEXT'
  ],
  'GL_EXT_texture_storage' => [
    'glTexStorage1DEXT',
    'glTexStorage2DEXT',
    'glTexStorage3DEXT',
    'glTextureStorage1DEXT',
    'glTextureStorage2DEXT',
    'glTextureStorage3DEXT'
  ],
  'GL_EXT_texture_view' => [
    'glTextureViewEXT'
  ],
  'GL_EXT_timer_query' => [
    'glGetQueryObjecti64vEXT_c',
    'glGetQueryObjectui64vEXT_c'
  ],
  'GL_EXT_transform_feedback' => [
    'glBeginTransformFeedbackEXT',
    'glBindBufferBaseEXT',
    'glBindBufferOffsetEXT',
    'glBindBufferRangeEXT',
    'glEndTransformFeedbackEXT',
    'glGetTransformFeedbackVaryingEXT_c',
    'glTransformFeedbackVaryingsEXT_c'
  ],
  'GL_EXT_vertex_array' => [
    'glArrayElementEXT',
    'glColorPointerEXT_c',
    'glDrawArraysEXT',
    'glEdgeFlagPointerEXT_c',
    'glIndexPointerEXT_c',
    'glNormalPointerEXT_c',
    'glTexCoordPointerEXT_c',
    'glVertexPointerEXT_c'
  ],
  'GL_EXT_vertex_array_setXXX' => [
    'glBindArraySetEXT_c',
    'glDeleteArraySetsEXT_c'
  ],
  'GL_EXT_vertex_attrib_64bit' => [
    'glGetVertexAttribLdvEXT_c',
    'glVertexArrayVertexAttribLOffsetEXT',
    'glVertexAttribL1dEXT',
    'glVertexAttribL1dvEXT_c',
    'glVertexAttribL2dEXT',
    'glVertexAttribL2dvEXT_c',
    'glVertexAttribL3dEXT',
    'glVertexAttribL3dvEXT_c',
    'glVertexAttribL4dEXT',
    'glVertexAttribL4dvEXT_c',
    'glVertexAttribLPointerEXT_c'
  ],
  'GL_EXT_vertex_shader' => [
    'glBeginVertexShaderEXT',
    'glBindLightParameterEXT',
    'glBindMaterialParameterEXT',
    'glBindParameterEXT',
    'glBindTexGenParameterEXT',
    'glBindTextureUnitParameterEXT',
    'glBindVertexShaderEXT',
    'glDeleteVertexShaderEXT',
    'glDisableVariantClientStateEXT',
    'glEnableVariantClientStateEXT',
    'glEndVertexShaderEXT',
    'glExtractComponentEXT',
    'glGenSymbolsEXT',
    'glGenVertexShadersEXT',
    'glGetInvariantBooleanvEXT_c',
    'glGetInvariantFloatvEXT_c',
    'glGetInvariantIntegervEXT_c',
    'glGetLocalConstantBooleanvEXT_c',
    'glGetLocalConstantFloatvEXT_c',
    'glGetLocalConstantIntegervEXT_c',
    'glGetVariantBooleanvEXT_c',
    'glGetVariantFloatvEXT_c',
    'glGetVariantIntegervEXT_c',
    'glGetVariantPointervEXT_c',
    'glInsertComponentEXT',
    'glIsVariantEnabledEXT',
    'glSetInvariantEXT_c',
    'glSetLocalConstantEXT_c',
    'glShaderOp1EXT',
    'glShaderOp2EXT',
    'glShaderOp3EXT',
    'glSwizzleEXT',
    'glVariantbvEXT_c',
    'glVariantdvEXT_c',
    'glVariantfvEXT_c',
    'glVariantivEXT_c',
    'glVariantPointerEXT_c',
    'glVariantsvEXT_c',
    'glVariantubvEXT_c',
    'glVariantuivEXT_c',
    'glVariantusvEXT_c',
    'glWriteMaskEXT'
  ],
  'GL_EXT_vertex_weighting' => [
    'glVertexWeightfEXT',
    'glVertexWeightfvEXT_c',
    'glVertexWeightPointerEXT_c'
  ],
  'GL_EXT_win32_keyed_mutex' => [
    'glAcquireKeyedMutexWin32EXT',
    'glReleaseKeyedMutexWin32EXT'
  ],
  'GL_EXT_window_rectangles' => [
    'glWindowRectanglesEXT_c'
  ],
  'GL_EXT_x11_sync_object' => [
    'glImportSyncEXT'
  ],
  'GL_GREMEDY_frame_terminator' => [
    'glFrameTerminatorGREMEDY'
  ],
  'GL_GREMEDY_string_marker' => [
    'glStringMarkerGREMEDY_c'
  ],
  'GL_HP_image_transform' => [
    'glGetImageTransformParameterfvHP_c',
    'glGetImageTransformParameterivHP_c',
    'glImageTransformParameterfHP',
    'glImageTransformParameterfvHP_c',
    'glImageTransformParameteriHP',
    'glImageTransformParameterivHP_c'
  ],
  'GL_IBM_multimode_draw_arrays' => [
    'glMultiModeDrawArraysIBM_c',
    'glMultiModeDrawElementsIBM_c'
  ],
  'GL_IBM_vertex_array_lists' => [
    'glColorPointerListIBM_c',
    'glEdgeFlagPointerListIBM_c',
    'glFogCoordPointerListIBM_c',
    'glIndexPointerListIBM_c',
    'glNormalPointerListIBM_c',
    'glSecondaryColorPointerListIBM_c',
    'glTexCoordPointerListIBM_c',
    'glVertexPointerListIBM_c'
  ],
  'GL_INTEL_parallel_arrays' => [
    'glColorPointervINTEL_c',
    'glNormalPointervINTEL_c',
    'glTexCoordPointervINTEL_c',
    'glVertexPointervINTEL_c'
  ],
  'GL_INTEL_performance_query' => [
    'glBeginPerfQueryINTEL',
    'glCreatePerfQueryINTEL_c',
    'glDeletePerfQueryINTEL',
    'glEndPerfQueryINTEL',
    'glGetFirstPerfQueryIdINTEL_c',
    'glGetNextPerfQueryIdINTEL_c',
    'glGetPerfCounterInfoINTEL_c',
    'glGetPerfQueryDataINTEL_c',
    'glGetPerfQueryIdByNameINTEL_c',
    'glGetPerfQueryInfoINTEL_c'
  ],
  'GL_INTEL_texture_scissor' => [
    'glTexScissorFuncINTEL',
    'glTexScissorINTEL'
  ],
  'GL_KHR_blend_equation_advanced' => [
    'glBlendBarrierKHR'
  ],
  'GL_KHR_debug' => [
    'glDebugMessageCallback_c',
    'glDebugMessageControl_c',
    'glDebugMessageInsert_c',
    'glGetDebugMessageLog_c',
    'glGetObjectLabel_c',
    'glGetObjectPtrLabel_c',
    'glObjectLabel_c',
    'glObjectPtrLabel_c',
    'glPopDebugGroup',
    'glPushDebugGroup_c'
  ],
  'GL_KHR_parallel_shader_compile' => [
    'glMaxShaderCompilerThreadsKHR'
  ],
  'GL_KHR_robustness' => [
    'glGetnUniformfv_c',
    'glGetnUniformiv_c',
    'glGetnUniformuiv_c',
    'glReadnPixels_c'
  ],
  'GL_KTX_buffer_region' => [
    'glBufferRegionEnabled',
    'glDeleteBufferRegion',
    'glDrawBufferRegion',
    'glNewBufferRegion',
    'glReadBufferRegion'
  ],
  'GL_LAYOUT_LINEAR_INTEL' => [
    'glMapTexture2DINTEL_c',
    'glSyncTextureINTEL',
    'glUnmapTexture2DINTEL'
  ],
  'GL_MESA_resize_buffers' => [
    'glResizeBuffersMESA'
  ],
  'GL_MESA_window_pos' => [
    'glWindowPos2dMESA',
    'glWindowPos2dvMESA_c',
    'glWindowPos2fMESA',
    'glWindowPos2fvMESA_c',
    'glWindowPos2iMESA',
    'glWindowPos2ivMESA_c',
    'glWindowPos2sMESA',
    'glWindowPos2svMESA_c',
    'glWindowPos3dMESA',
    'glWindowPos3dvMESA_c',
    'glWindowPos3fMESA',
    'glWindowPos3fvMESA_c',
    'glWindowPos3iMESA',
    'glWindowPos3ivMESA_c',
    'glWindowPos3sMESA',
    'glWindowPos3svMESA_c',
    'glWindowPos4dMESA',
    'glWindowPos4dvMESA_c',
    'glWindowPos4fMESA',
    'glWindowPos4fvMESA_c',
    'glWindowPos4iMESA',
    'glWindowPos4ivMESA_c',
    'glWindowPos4sMESA',
    'glWindowPos4svMESA_c'
  ],
  'GL_NVX_conditional_render' => [
    'glBeginConditionalRenderNVX',
    'glEndConditionalRenderNVX'
  ],
  'GL_NVX_linked_gpu_multicast' => [
    'glLGPUCopyImageSubDataNVX',
    'glLGPUInterlockNVX',
    'glLGPUNamedBufferSubDataNVX_c'
  ],
  'GL_NV_3dvision_settings' => [
    'glStereoParameterfNV',
    'glStereoParameteriNV'
  ],
  'GL_NV_bindless_multi_draw_indirect' => [
    'glMultiDrawArraysIndirectBindlessNV_c',
    'glMultiDrawElementsIndirectBindlessNV_c'
  ],
  'GL_NV_bindless_multi_draw_indirect_count' => [
    'glMultiDrawArraysIndirectBindlessCountNV_c',
    'glMultiDrawElementsIndirectBindlessCountNV_c'
  ],
  'GL_NV_bindless_texture' => [
    'glGetImageHandleNV',
    'glGetTextureHandleNV',
    'glGetTextureSamplerHandleNV',
    'glIsImageHandleResidentNV',
    'glIsTextureHandleResidentNV',
    'glMakeImageHandleNonResidentNV',
    'glMakeImageHandleResidentNV',
    'glMakeTextureHandleNonResidentNV',
    'glMakeTextureHandleResidentNV',
    'glProgramUniformHandleui64NV',
    'glProgramUniformHandleui64vNV_c',
    'glUniformHandleui64NV',
    'glUniformHandleui64vNV_c'
  ],
  'GL_NV_blend_equation_advanced' => [
    'glBlendBarrierNV',
    'glBlendParameteriNV'
  ],
  'GL_NV_clip_space_w_scaling' => [
    'glViewportPositionWScaleNV'
  ],
  'GL_NV_command_list' => [
    'glCallCommandListNV',
    'glCommandListSegmentsNV',
    'glCompileCommandListNV',
    'glCreateCommandListsNV_c',
    'glCreateStatesNV_c',
    'glDeleteCommandListsNV_c',
    'glDeleteStatesNV_c',
    'glDrawCommandsAddressNV_c',
    'glDrawCommandsNV_c',
    'glDrawCommandsStatesAddressNV_c',
    'glDrawCommandsStatesNV_c',
    'glGetCommandHeaderNV',
    'glGetStageIndexNV',
    'glIsCommandListNV',
    'glIsStateNV',
    'glListDrawCommandsStatesClientNV_c',
    'glStateCaptureNV'
  ],
  'GL_NV_conditional_render' => [
    'glBeginConditionalRenderNV',
    'glEndConditionalRenderNV'
  ],
  'GL_NV_conservative_raster' => [
    'glSubpixelPrecisionBiasNV'
  ],
  'GL_NV_conservative_raster_dilate' => [
    'glConservativeRasterParameterfNV'
  ],
  'GL_NV_conservative_raster_pre_snap_triangles' => [
    'glConservativeRasterParameteriNV'
  ],
  'GL_NV_copy_buffer' => [
    'glCopyBufferSubDataNV'
  ],
  'GL_NV_copy_image' => [
    'glCopyImageSubDataNV'
  ],
  'GL_NV_depth_buffer_float' => [
    'glClearDepthdNV',
    'glDepthBoundsdNV',
    'glDepthRangedNV'
  ],
  'GL_NV_draw_buffers' => [
    'glDrawBuffersNV_c'
  ],
  'GL_NV_draw_instanced' => [
    'glDrawArraysInstancedNV',
    'glDrawElementsInstancedNV_c'
  ],
  'GL_NV_draw_texture' => [
    'glDrawTextureNV'
  ],
  'GL_NV_draw_vulkan_image' => [
    'glDrawVkImageNV',
    'glGetVkProcAddrNV_c',
    'glSignalVkFenceNV',
    'glSignalVkSemaphoreNV',
    'glWaitVkSemaphoreNV'
  ],
  'GL_NV_evaluators' => [
    'glEvalMapsNV',
    'glGetMapAttribParameterfvNV_c',
    'glGetMapAttribParameterivNV_c',
    'glGetMapControlPointsNV_c',
    'glGetMapParameterfvNV_c',
    'glGetMapParameterivNV_c',
    'glMapControlPointsNV_c',
    'glMapParameterfvNV_c',
    'glMapParameterivNV_c'
  ],
  'GL_NV_explicit_multisample' => [
    'glGetMultisamplefvNV_c',
    'glSampleMaskIndexedNV',
    'glTexRenderbufferNV'
  ],
  'GL_NV_fence' => [
    'glDeleteFencesNV_c',
    'glFinishFenceNV',
    'glGenFencesNV_c',
    'glGetFenceivNV_c',
    'glIsFenceNV',
    'glSetFenceNV',
    'glTestFenceNV'
  ],
  'GL_NV_fragment_coverage_to_color' => [
    'glFragmentCoverageColorNV'
  ],
  'GL_NV_fragment_program' => [
    'glGetProgramNamedParameterdvNV_c',
    'glGetProgramNamedParameterfvNV_c',
    'glProgramNamedParameter4dNV_c',
    'glProgramNamedParameter4dvNV_c',
    'glProgramNamedParameter4fNV_c',
    'glProgramNamedParameter4fvNV_c'
  ],
  'GL_NV_framebuffer_blit' => [
    'glBlitFramebufferNV'
  ],
  'GL_NV_framebuffer_multisample' => [
    'glRenderbufferStorageMultisampleNV'
  ],
  'GL_NV_framebuffer_multisample_coverage' => [
    'glRenderbufferStorageMultisampleCoverageNV'
  ],
  'GL_NV_geometry_program4' => [
    'glProgramVertexLimitNV'
  ],
  'GL_NV_gpu_multicast' => [
    'glMulticastBarrierNV',
    'glMulticastBlitFramebufferNV',
    'glMulticastBufferSubDataNV_c',
    'glMulticastCopyBufferSubDataNV',
    'glMulticastCopyImageSubDataNV',
    'glMulticastFramebufferSampleLocationsfvNV_c',
    'glMulticastGetQueryObjecti64vNV_c',
    'glMulticastGetQueryObjectivNV_c',
    'glMulticastGetQueryObjectui64vNV_c',
    'glMulticastGetQueryObjectuivNV_c',
    'glMulticastWaitSyncNV',
    'glRenderGpuMaskNV'
  ],
  'GL_NV_gpu_program4' => [
    'glProgramEnvParameterI4iNV',
    'glProgramEnvParameterI4ivNV_c',
    'glProgramEnvParameterI4uiNV',
    'glProgramEnvParameterI4uivNV_c',
    'glProgramEnvParametersI4ivNV_c',
    'glProgramEnvParametersI4uivNV_c',
    'glProgramLocalParameterI4iNV',
    'glProgramLocalParameterI4ivNV_c',
    'glProgramLocalParameterI4uiNV',
    'glProgramLocalParameterI4uivNV_c',
    'glProgramLocalParametersI4ivNV_c',
    'glProgramLocalParametersI4uivNV_c'
  ],
  'GL_NV_gpu_shader5' => [
    'glGetUniformi64vNV_c',
    'glGetUniformui64vNV_c',
    'glProgramUniform1i64NV',
    'glProgramUniform1i64vNV_c',
    'glProgramUniform1ui64NV',
    'glProgramUniform1ui64vNV_c',
    'glProgramUniform2i64NV',
    'glProgramUniform2i64vNV_c',
    'glProgramUniform2ui64NV',
    'glProgramUniform2ui64vNV_c',
    'glProgramUniform3i64NV',
    'glProgramUniform3i64vNV_c',
    'glProgramUniform3ui64NV',
    'glProgramUniform3ui64vNV_c',
    'glProgramUniform4i64NV',
    'glProgramUniform4i64vNV_c',
    'glProgramUniform4ui64NV',
    'glProgramUniform4ui64vNV_c',
    'glUniform1i64NV',
    'glUniform1i64vNV_c',
    'glUniform1ui64NV',
    'glUniform1ui64vNV_c',
    'glUniform2i64NV',
    'glUniform2i64vNV_c',
    'glUniform2ui64NV',
    'glUniform2ui64vNV_c',
    'glUniform3i64NV',
    'glUniform3i64vNV_c',
    'glUniform3ui64NV',
    'glUniform3ui64vNV_c',
    'glUniform4i64NV',
    'glUniform4i64vNV_c',
    'glUniform4ui64NV',
    'glUniform4ui64vNV_c'
  ],
  'GL_NV_half_float' => [
    'glColor3hNV',
    'glColor3hvNV_c',
    'glColor4hNV',
    'glColor4hvNV_c',
    'glFogCoordhNV',
    'glFogCoordhvNV_c',
    'glMultiTexCoord1hNV',
    'glMultiTexCoord1hvNV_c',
    'glMultiTexCoord2hNV',
    'glMultiTexCoord2hvNV_c',
    'glMultiTexCoord3hNV',
    'glMultiTexCoord3hvNV_c',
    'glMultiTexCoord4hNV',
    'glMultiTexCoord4hvNV_c',
    'glNormal3hNV',
    'glNormal3hvNV_c',
    'glSecondaryColor3hNV',
    'glSecondaryColor3hvNV_c',
    'glTexCoord1hNV',
    'glTexCoord1hvNV_c',
    'glTexCoord2hNV',
    'glTexCoord2hvNV_c',
    'glTexCoord3hNV',
    'glTexCoord3hvNV_c',
    'glTexCoord4hNV',
    'glTexCoord4hvNV_c',
    'glVertex2hNV',
    'glVertex2hvNV_c',
    'glVertex3hNV',
    'glVertex3hvNV_c',
    'glVertex4hNV',
    'glVertex4hvNV_c',
    'glVertexAttrib1hNV',
    'glVertexAttrib1hvNV_c',
    'glVertexAttrib2hNV',
    'glVertexAttrib2hvNV_c',
    'glVertexAttrib3hNV',
    'glVertexAttrib3hvNV_c',
    'glVertexAttrib4hNV',
    'glVertexAttrib4hvNV_c',
    'glVertexAttribs1hvNV_c',
    'glVertexAttribs2hvNV_c',
    'glVertexAttribs3hvNV_c',
    'glVertexAttribs4hvNV_c',
    'glVertexWeighthNV',
    'glVertexWeighthvNV_c'
  ],
  'GL_NV_instanced_arrays' => [
    'glVertexAttribDivisorNV'
  ],
  'GL_NV_internalformat_sample_query' => [
    'glGetInternalformatSampleivNV_c'
  ],
  'GL_NV_non_square_matrices' => [
    'glUniformMatrix2x3fvNV_c',
    'glUniformMatrix2x4fvNV_c',
    'glUniformMatrix3x2fvNV_c',
    'glUniformMatrix3x4fvNV_c',
    'glUniformMatrix4x2fvNV_c',
    'glUniformMatrix4x3fvNV_c'
  ],
  'GL_NV_occlusion_query' => [
    'glBeginOcclusionQueryNV',
    'glDeleteOcclusionQueriesNV_c',
    'glEndOcclusionQueryNV',
    'glGenOcclusionQueriesNV_c',
    'glGetOcclusionQueryivNV_c',
    'glGetOcclusionQueryuivNV_c',
    'glIsOcclusionQueryNV'
  ],
  'GL_NV_parameter_buffer_object' => [
    'glProgramBufferParametersfvNV_c',
    'glProgramBufferParametersIivNV_c',
    'glProgramBufferParametersIuivNV_c'
  ],
  'GL_NV_path_rendering' => [
    'glCopyPathNV',
    'glCoverFillPathInstancedNV_c',
    'glCoverFillPathNV',
    'glCoverStrokePathInstancedNV_c',
    'glCoverStrokePathNV',
    'glDeletePathsNV',
    'glGenPathsNV',
    'glGetPathColorGenfvNV_c',
    'glGetPathColorGenivNV_c',
    'glGetPathCommandsNV_c',
    'glGetPathCoordsNV_c',
    'glGetPathDashArrayNV_c',
    'glGetPathLengthNV',
    'glGetPathMetricRangeNV_c',
    'glGetPathMetricsNV_c',
    'glGetPathParameterfvNV_c',
    'glGetPathParameterivNV_c',
    'glGetPathSpacingNV_c',
    'glGetPathTexGenfvNV_c',
    'glGetPathTexGenivNV_c',
    'glGetProgramResourcefvNV_c',
    'glInterpolatePathsNV',
    'glIsPathNV',
    'glIsPointInFillPathNV',
    'glIsPointInStrokePathNV',
    'glMatrixLoad3x2fNV_c',
    'glMatrixLoad3x3fNV_c',
    'glMatrixLoadTranspose3x3fNV_c',
    'glMatrixMult3x2fNV_c',
    'glMatrixMult3x3fNV_c',
    'glMatrixMultTranspose3x3fNV_c',
    'glPathColorGenNV_c',
    'glPathCommandsNV_c',
    'glPathCoordsNV_c',
    'glPathCoverDepthFuncNV',
    'glPathDashArrayNV_c',
    'glPathFogGenNV',
    'glPathGlyphIndexArrayNV_c',
    'glPathGlyphIndexRangeNV_c',
    'glPathGlyphRangeNV_c',
    'glPathGlyphsNV_c',
    'glPathMemoryGlyphIndexArrayNV_c',
    'glPathParameterfNV',
    'glPathParameterfvNV_c',
    'glPathParameteriNV',
    'glPathParameterivNV_c',
    'glPathStencilDepthOffsetNV',
    'glPathStencilFuncNV',
    'glPathStringNV_c',
    'glPathSubCommandsNV_c',
    'glPathSubCoordsNV_c',
    'glPathTexGenNV_c',
    'glPointAlongPathNV_c',
    'glProgramPathFragmentInputGenNV_c',
    'glStencilFillPathInstancedNV_c',
    'glStencilFillPathNV',
    'glStencilStrokePathInstancedNV_c',
    'glStencilStrokePathNV',
    'glStencilThenCoverFillPathInstancedNV_c',
    'glStencilThenCoverFillPathNV',
    'glStencilThenCoverStrokePathInstancedNV_c',
    'glStencilThenCoverStrokePathNV',
    'glTransformPathNV_c',
    'glWeightPathsNV_c'
  ],
  'GL_NV_pixel_data_range' => [
    'glFlushPixelDataRangeNV',
    'glPixelDataRangeNV_c'
  ],
  'GL_NV_point_sprite' => [
    'glPointParameteriNV',
    'glPointParameterivNV_c'
  ],
  'GL_NV_polygon_mode' => [
    'glPolygonModeNV'
  ],
  'GL_NV_present_video' => [
    'glGetVideoi64vNV_c',
    'glGetVideoivNV_c',
    'glGetVideoui64vNV_c',
    'glGetVideouivNV_c',
    'glPresentFrameDualFillNV',
    'glPresentFrameKeyedNV'
  ],
  'GL_NV_primitive_restart' => [
    'glPrimitiveRestartIndexNV',
    'glPrimitiveRestartNV'
  ],
  'GL_NV_register_combiners' => [
    'glCombinerInputNV',
    'glCombinerOutputNV',
    'glCombinerParameterfNV',
    'glCombinerParameterfvNV_c',
    'glCombinerParameteriNV',
    'glCombinerParameterivNV_c',
    'glFinalCombinerInputNV',
    'glGetCombinerInputParameterfvNV_c',
    'glGetCombinerInputParameterivNV_c',
    'glGetCombinerOutputParameterfvNV_c',
    'glGetCombinerOutputParameterivNV_c',
    'glGetFinalCombinerInputParameterfvNV_c',
    'glGetFinalCombinerInputParameterivNV_c'
  ],
  'GL_NV_register_combiners2' => [
    'glCombinerStageParameterfvNV_c',
    'glGetCombinerStageParameterfvNV_c'
  ],
  'GL_NV_sample_locations' => [
    'glFramebufferSampleLocationsfvNV_c',
    'glNamedFramebufferSampleLocationsfvNV_c'
  ],
  'GL_NV_shader_buffer_load' => [
    'glGetBufferParameterui64vNV_c',
    'glGetIntegerui64vNV_c',
    'glGetNamedBufferParameterui64vNV_c',
    'glIsBufferResidentNV',
    'glIsNamedBufferResidentNV',
    'glMakeBufferNonResidentNV',
    'glMakeBufferResidentNV',
    'glMakeNamedBufferNonResidentNV',
    'glMakeNamedBufferResidentNV',
    'glProgramUniformui64NV',
    'glProgramUniformui64vNV_c',
    'glUniformui64NV',
    'glUniformui64vNV_c'
  ],
  'GL_NV_texture_array' => [
    'glCompressedTexImage3DNV_c',
    'glCompressedTexSubImage3DNV_c',
    'glCopyTexSubImage3DNV',
    'glFramebufferTextureLayerNV',
    'glTexImage3DNV_c',
    'glTexSubImage3DNV_c'
  ],
  'GL_NV_texture_barrier' => [
    'glTextureBarrierNV'
  ],
  'GL_NV_texture_multisample' => [
    'glTexImage2DMultisampleCoverageNV',
    'glTexImage3DMultisampleCoverageNV',
    'glTextureImage2DMultisampleCoverageNV',
    'glTextureImage2DMultisampleNV',
    'glTextureImage3DMultisampleCoverageNV',
    'glTextureImage3DMultisampleNV'
  ],
  'GL_NV_transform_feedback' => [
    'glActiveVaryingNV_c',
    'glBeginTransformFeedbackNV',
    'glBindBufferBaseNV',
    'glBindBufferOffsetNV',
    'glBindBufferRangeNV',
    'glEndTransformFeedbackNV',
    'glGetActiveVaryingNV_c',
    'glGetTransformFeedbackVaryingNV_c',
    'glGetVaryingLocationNV_c',
    'glTransformFeedbackAttribsNV_c',
    'glTransformFeedbackVaryingsNV_c'
  ],
  'GL_NV_transform_feedback2' => [
    'glBindTransformFeedbackNV',
    'glDeleteTransformFeedbacksNV_c',
    'glDrawTransformFeedbackNV',
    'glGenTransformFeedbacksNV_c',
    'glIsTransformFeedbackNV',
    'glPauseTransformFeedbackNV',
    'glResumeTransformFeedbackNV'
  ],
  'GL_NV_vdpau_interop' => [
    'glVDPAUFiniNV',
    'glVDPAUGetSurfaceivNV_c',
    'glVDPAUInitNV_c',
    'glVDPAUIsSurfaceNV',
    'glVDPAUMapSurfacesNV_c',
    'glVDPAURegisterOutputSurfaceNV_c',
    'glVDPAURegisterVideoSurfaceNV_c',
    'glVDPAUSurfaceAccessNV',
    'glVDPAUUnmapSurfacesNV_c',
    'glVDPAUUnregisterSurfaceNV'
  ],
  'GL_NV_vertex_array_range' => [
    'glFlushVertexArrayRangeNV',
    'glVertexArrayRangeNV_c'
  ],
  'GL_NV_vertex_attrib_integer_64bit' => [
    'glGetVertexAttribLi64vNV_c',
    'glGetVertexAttribLui64vNV_c',
    'glVertexAttribL1i64NV',
    'glVertexAttribL1i64vNV_c',
    'glVertexAttribL1ui64NV',
    'glVertexAttribL1ui64vNV_c',
    'glVertexAttribL2i64NV',
    'glVertexAttribL2i64vNV_c',
    'glVertexAttribL2ui64NV',
    'glVertexAttribL2ui64vNV_c',
    'glVertexAttribL3i64NV',
    'glVertexAttribL3i64vNV_c',
    'glVertexAttribL3ui64NV',
    'glVertexAttribL3ui64vNV_c',
    'glVertexAttribL4i64NV',
    'glVertexAttribL4i64vNV_c',
    'glVertexAttribL4ui64NV',
    'glVertexAttribL4ui64vNV_c',
    'glVertexAttribLFormatNV'
  ],
  'GL_NV_vertex_buffer_unified_memory' => [
    'glBufferAddressRangeNV',
    'glColorFormatNV',
    'glEdgeFlagFormatNV',
    'glFogCoordFormatNV',
    'glGetIntegerui64i_vNV_c',
    'glIndexFormatNV',
    'glNormalFormatNV',
    'glSecondaryColorFormatNV',
    'glTexCoordFormatNV',
    'glVertexAttribFormatNV',
    'glVertexAttribIFormatNV',
    'glVertexFormatNV'
  ],
  'GL_NV_vertex_program' => [
    'glAreProgramsResidentNV_c',
    'glBindProgramNV',
    'glDeleteProgramsNV_c',
    'glExecuteProgramNV_c',
    'glGenProgramsNV_c',
    'glGetProgramivNV_c',
    'glGetProgramParameterdvNV_c',
    'glGetProgramParameterfvNV_c',
    'glGetProgramStringNV_c',
    'glGetTrackMatrixivNV_c',
    'glGetVertexAttribdvNV_c',
    'glGetVertexAttribfvNV_c',
    'glGetVertexAttribivNV_c',
    'glGetVertexAttribPointervNV_c',
    'glIsProgramNV',
    'glLoadProgramNV_c',
    'glProgramParameter4dNV',
    'glProgramParameter4dvNV_c',
    'glProgramParameter4fNV',
    'glProgramParameter4fvNV_c',
    'glProgramParameters4dvNV_c',
    'glProgramParameters4fvNV_c',
    'glRequestResidentProgramsNV_c',
    'glTrackMatrixNV',
    'glVertexAttrib1dNV',
    'glVertexAttrib1dvNV_c',
    'glVertexAttrib1fNV',
    'glVertexAttrib1fvNV_c',
    'glVertexAttrib1sNV',
    'glVertexAttrib1svNV_c',
    'glVertexAttrib2dNV',
    'glVertexAttrib2dvNV_c',
    'glVertexAttrib2fNV',
    'glVertexAttrib2fvNV_c',
    'glVertexAttrib2sNV',
    'glVertexAttrib2svNV_c',
    'glVertexAttrib3dNV',
    'glVertexAttrib3dvNV_c',
    'glVertexAttrib3fNV',
    'glVertexAttrib3fvNV_c',
    'glVertexAttrib3sNV',
    'glVertexAttrib3svNV_c',
    'glVertexAttrib4dNV',
    'glVertexAttrib4dvNV_c',
    'glVertexAttrib4fNV',
    'glVertexAttrib4fvNV_c',
    'glVertexAttrib4sNV',
    'glVertexAttrib4svNV_c',
    'glVertexAttrib4ubNV',
    'glVertexAttrib4ubvNV_c',
    'glVertexAttribPointerNV_c',
    'glVertexAttribs1dvNV_c',
    'glVertexAttribs1fvNV_c',
    'glVertexAttribs1svNV_c',
    'glVertexAttribs2dvNV_c',
    'glVertexAttribs2fvNV_c',
    'glVertexAttribs2svNV_c',
    'glVertexAttribs3dvNV_c',
    'glVertexAttribs3fvNV_c',
    'glVertexAttribs3svNV_c',
    'glVertexAttribs4dvNV_c',
    'glVertexAttribs4fvNV_c',
    'glVertexAttribs4svNV_c',
    'glVertexAttribs4ubvNV_c'
  ],
  'GL_NV_video_capture' => [
    'glBeginVideoCaptureNV',
    'glBindVideoCaptureStreamBufferNV',
    'glBindVideoCaptureStreamTextureNV',
    'glEndVideoCaptureNV',
    'glGetVideoCaptureivNV_c',
    'glGetVideoCaptureStreamdvNV_c',
    'glGetVideoCaptureStreamfvNV_c',
    'glGetVideoCaptureStreamivNV_c',
    'glVideoCaptureNV_c',
    'glVideoCaptureStreamParameterdvNV_c',
    'glVideoCaptureStreamParameterfvNV_c',
    'glVideoCaptureStreamParameterivNV_c'
  ],
  'GL_NV_viewport_array' => [
    'glDepthRangeArrayfvNV_c',
    'glDepthRangeIndexedfNV',
    'glDisableiNV',
    'glEnableiNV',
    'glGetFloati_vNV_c',
    'glIsEnablediNV',
    'glScissorArrayvNV_c',
    'glScissorIndexedNV',
    'glScissorIndexedvNV_c',
    'glViewportArrayvNV_c',
    'glViewportIndexedfNV',
    'glViewportIndexedfvNV_c'
  ],
  'GL_NV_viewport_swizzle' => [
    'glViewportSwizzleNV'
  ],
  'GL_OVR_multiview' => [
    'glFramebufferTextureMultiviewOVR'
  ],
  'GL_OVR_multiview_multisampled_render_to_texture' => [
    'glFramebufferTextureMultisampleMultiviewOVR'
  ],
  'GL_QCOM_alpha_test' => [
    'glAlphaFuncQCOM'
  ],
  'GL_QCOM_driver_control' => [
    'glDisableDriverControlQCOM',
    'glEnableDriverControlQCOM',
    'glGetDriverControlsQCOM_c',
    'glGetDriverControlStringQCOM_c'
  ],
  'GL_QCOM_extended_get' => [
    'glExtGetBufferPointervQCOM_c',
    'glExtGetBuffersQCOM_c',
    'glExtGetFramebuffersQCOM_c',
    'glExtGetRenderbuffersQCOM_c',
    'glExtGetTexLevelParameterivQCOM_c',
    'glExtGetTexSubImageQCOM_c',
    'glExtGetTexturesQCOM_c',
    'glExtTexObjectStateOverrideiQCOM'
  ],
  'GL_QCOM_extended_get2' => [
    'glExtGetProgramBinarySourceQCOM_c',
    'glExtGetProgramsQCOM_c',
    'glExtGetShadersQCOM_c',
    'glExtIsProgramBinaryQCOM'
  ],
  'GL_QCOM_framebuffer_foveated' => [
    'glFramebufferFoveationConfigQCOM_c',
    'glFramebufferFoveationParametersQCOM'
  ],
  'GL_QCOM_shader_framebuffer_fetch_noncoherent' => [
    'glFramebufferFetchBarrierQCOM'
  ],
  'GL_QCOM_tiled_rendering' => [
    'glEndTilingQCOM',
    'glStartTilingQCOM'
  ],
  'GL_REGAL_ES1_0_compatibility' => [
    'glAlphaFuncx',
    'glClearColorx',
    'glClearDepthx',
    'glColor4x',
    'glDepthRangex',
    'glFogx',
    'glFogxv_c',
    'glFrustumf',
    'glFrustumx',
    'glLightModelx',
    'glLightModelxv_c',
    'glLightx',
    'glLightxv_c',
    'glLineWidthx',
    'glLoadMatrixx_c',
    'glMaterialx',
    'glMaterialxv_c',
    'glMultiTexCoord4x',
    'glMultMatrixx_c',
    'glNormal3x',
    'glOrthof',
    'glOrthox',
    'glPointSizex',
    'glPolygonOffsetx',
    'glRotatex',
    'glSampleCoveragex',
    'glScalex',
    'glTexEnvx',
    'glTexEnvxv_c',
    'glTexParameterx',
    'glTranslatex'
  ],
  'GL_REGAL_ES1_1_compatibility' => [
    'glClipPlanef_c',
    'glClipPlanex_c',
    'glGetClipPlanef_c',
    'glGetClipPlanex_c',
    'glGetFixedv_c',
    'glGetLightxv_c',
    'glGetMaterialxv_c',
    'glGetTexEnvxv_c',
    'glGetTexParameterxv_c',
    'glPointParameterx',
    'glPointParameterxv_c',
    'glPointSizePointerOES_c',
    'glTexParameterxv_c'
  ],
  'GL_REGAL_extension_query' => [
    'glGetExtensionREGAL_c',
    'glIsSupportedREGAL_c'
  ],
  'GL_REGAL_log' => [
    'glLogMessageCallbackREGAL'
  ],
  'GL_REGAL_proc_address' => [
    'glGetProcAddressREGAL_c'
  ],
  'GL_SGIS_detail_texture' => [
    'glDetailTexFuncSGIS_c',
    'glGetDetailTexFuncSGIS_c'
  ],
  'GL_SGIS_fog_function' => [
    'glFogFuncSGIS_c',
    'glGetFogFuncSGIS_c'
  ],
  'GL_SGIS_multisample' => [
    'glSampleMaskSGIS',
    'glSamplePatternSGIS'
  ],
  'GL_SGIS_multitexture' => [
    'glInterleavedTextureCoordSetsSGIS',
    'glSelectTextureCoordSetSGIS',
    'glSelectTextureSGIS',
    'glSelectTextureTransformSGIS'
  ],
  'GL_SGIS_shared_multisample' => [
    'glMultisampleSubRectPosSGIS'
  ],
  'GL_SGIS_sharpen_texture' => [
    'glGetSharpenTexFuncSGIS_c',
    'glSharpenTexFuncSGIS_c'
  ],
  'GL_SGIS_texture4D' => [
    'glTexImage4DSGIS_c',
    'glTexSubImage4DSGIS_c'
  ],
  'GL_SGIS_texture_filter4' => [
    'glGetTexFilterFuncSGIS_c',
    'glTexFilterFuncSGIS_c'
  ],
  'GL_SGIX_async' => [
    'glAsyncMarkerSGIX',
    'glDeleteAsyncMarkersSGIX',
    'glFinishAsyncSGIX_c',
    'glGenAsyncMarkersSGIX',
    'glIsAsyncMarkerSGIX',
    'glPollAsyncSGIX_c'
  ],
  'GL_SGIX_datapipe' => [
    'glAddressSpace',
    'glDataPipe'
  ],
  'GL_SGIX_flush_raster' => [
    'glFlushRasterSGIX'
  ],
  'GL_SGIX_fog_layers' => [
    'glFogLayersSGIX_c',
    'glGetFogLayersSGIX_c'
  ],
  'GL_SGIX_fog_texture' => [
    'glTextureFogSGIX'
  ],
  'GL_SGIX_fragment_specular_lighting' => [
    'glFragmentColorMaterialSGIX',
    'glFragmentLightfSGIX',
    'glFragmentLightfvSGIX_c',
    'glFragmentLightiSGIX',
    'glFragmentLightivSGIX_c',
    'glFragmentLightModelfSGIX',
    'glFragmentLightModelfvSGIX_c',
    'glFragmentLightModeliSGIX',
    'glFragmentLightModelivSGIX_c',
    'glFragmentMaterialfSGIX',
    'glFragmentMaterialfvSGIX_c',
    'glFragmentMaterialiSGIX',
    'glFragmentMaterialivSGIX_c',
    'glGetFragmentLightfvSGIX_c',
    'glGetFragmentLightivSGIX_c',
    'glGetFragmentMaterialfvSGIX_c',
    'glGetFragmentMaterialivSGIX_c'
  ],
  'GL_SGIX_framezoom' => [
    'glFrameZoomSGIX'
  ],
  'GL_SGIX_igloo_interface' => [
    'glIglooInterfaceSGIX_c'
  ],
  'GL_SGIX_mpeg1' => [
    'glAllocMPEGPredictorsSGIX_c',
    'glDeleteMPEGPredictorsSGIX_c',
    'glGenMPEGPredictorsSGIX_c',
    'glGetMPEGParameterfvSGIX_c',
    'glGetMPEGParameterivSGIX_c',
    'glGetMPEGPredictorSGIX_c',
    'glGetMPEGQuantTableubv_c',
    'glIsMPEGPredictorSGIX',
    'glMPEGPredictorSGIX_c',
    'glMPEGQuantTableubv_c',
    'glSwapMPEGPredictorsSGIX'
  ],
  'GL_SGIX_nonlinear_lighting_pervertex' => [
    'glGetNonlinLightfvSGIX_c',
    'glGetNonlinMaterialfvSGIX_c',
    'glNonlinLightfvSGIX_c',
    'glNonlinMaterialfvSGIX_c'
  ],
  'GL_SGIX_pixel_texture' => [
    'glPixelTexGenSGIX'
  ],
  'GL_SGIX_polynomial_ffd' => [
    'glDeformSGIX',
    'glLoadIdentityDeformationMapSGIX'
  ],
  'GL_SGIX_quad_mesh' => [
    'glMeshBreadthSGIX',
    'glMeshStrideSGIX'
  ],
  'GL_SGIX_reference_plane' => [
    'glReferencePlaneSGIX_c'
  ],
  'GL_SGIX_sprite' => [
    'glSpriteParameterfSGIX',
    'glSpriteParameterfvSGIX_c',
    'glSpriteParameteriSGIX',
    'glSpriteParameterivSGIX_c'
  ],
  'GL_SGIX_tag_sample_buffer' => [
    'glTagSampleBufferSGIX'
  ],
  'GL_SGIX_vector_ops' => [
    'glGetVectorOperationSGIX',
    'glVectorOperationSGIX'
  ],
  'GL_SGIX_vertex_array_object' => [
    'glAreVertexArraysResidentSGIX_c',
    'glBindVertexArraySGIX',
    'glDeleteVertexArraysSGIX_c',
    'glGenVertexArraysSGIX_c',
    'glIsVertexArraySGIX',
    'glPrioritizeVertexArraysSGIX_c'
  ],
  'GL_SGI_color_table' => [
    'glColorTableParameterfvSGI_c',
    'glColorTableParameterivSGI_c',
    'glColorTableSGI_c',
    'glCopyColorTableSGI',
    'glGetColorTableParameterfvSGI_c',
    'glGetColorTableParameterivSGI_c',
    'glGetColorTableSGI_c'
  ],
  'GL_SGI_fft' => [
    'glGetPixelTransformParameterfvSGI_c',
    'glGetPixelTransformParameterivSGI_c',
    'glPixelTransformParameterfSGI',
    'glPixelTransformParameterfvSGI_c',
    'glPixelTransformParameteriSGI',
    'glPixelTransformParameterivSGI_c',
    'glPixelTransformSGI'
  ],
  'GL_SUNX_constant_data' => [
    'glFinishTextureSUNX'
  ],
  'GL_SUN_global_alpha' => [
    'glGlobalAlphaFactorbSUN',
    'glGlobalAlphaFactordSUN',
    'glGlobalAlphaFactorfSUN',
    'glGlobalAlphaFactoriSUN',
    'glGlobalAlphaFactorsSUN',
    'glGlobalAlphaFactorubSUN',
    'glGlobalAlphaFactoruiSUN',
    'glGlobalAlphaFactorusSUN'
  ],
  'GL_SUN_read_video_pixels' => [
    'glReadVideoPixelsSUN_c'
  ],
  'GL_SUN_triangle_list' => [
    'glReplacementCodePointerSUN_c',
    'glReplacementCodeubSUN',
    'glReplacementCodeubvSUN_c',
    'glReplacementCodeuiSUN',
    'glReplacementCodeuivSUN_c',
    'glReplacementCodeusSUN',
    'glReplacementCodeusvSUN_c'
  ],
  'GL_SUN_vertex' => [
    'glColor3fVertex3fSUN',
    'glColor3fVertex3fvSUN_c',
    'glColor4fNormal3fVertex3fSUN',
    'glColor4fNormal3fVertex3fvSUN_c',
    'glColor4ubVertex2fSUN',
    'glColor4ubVertex2fvSUN_c',
    'glColor4ubVertex3fSUN',
    'glColor4ubVertex3fvSUN_c',
    'glNormal3fVertex3fSUN',
    'glNormal3fVertex3fvSUN_c',
    'glReplacementCodeuiColor3fVertex3fSUN',
    'glReplacementCodeuiColor3fVertex3fvSUN_c',
    'glReplacementCodeuiColor4fNormal3fVertex3fSUN',
    'glReplacementCodeuiColor4fNormal3fVertex3fvSUN_c',
    'glReplacementCodeuiColor4ubVertex3fSUN',
    'glReplacementCodeuiColor4ubVertex3fvSUN_c',
    'glReplacementCodeuiNormal3fVertex3fSUN',
    'glReplacementCodeuiNormal3fVertex3fvSUN_c',
    'glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN',
    'glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_c',
    'glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN',
    'glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_c',
    'glReplacementCodeuiTexCoord2fVertex3fSUN',
    'glReplacementCodeuiTexCoord2fVertex3fvSUN_c',
    'glReplacementCodeuiVertex3fSUN',
    'glReplacementCodeuiVertex3fvSUN_c',
    'glTexCoord2fColor3fVertex3fSUN',
    'glTexCoord2fColor3fVertex3fvSUN_c',
    'glTexCoord2fColor4fNormal3fVertex3fSUN',
    'glTexCoord2fColor4fNormal3fVertex3fvSUN_c',
    'glTexCoord2fColor4ubVertex3fSUN',
    'glTexCoord2fColor4ubVertex3fvSUN_c',
    'glTexCoord2fNormal3fVertex3fSUN',
    'glTexCoord2fNormal3fVertex3fvSUN_c',
    'glTexCoord2fVertex3fSUN',
    'glTexCoord2fVertex3fvSUN_c',
    'glTexCoord4fColor4fNormal3fVertex4fSUN',
    'glTexCoord4fColor4fNormal3fVertex4fvSUN_c',
    'glTexCoord4fVertex4fSUN',
    'glTexCoord4fVertex4fvSUN_c'
  ],
  'GL_VERSION_1_1' => [
    'glAccum',
    'glAlphaFunc',
    'glAreTexturesResident_c',
    'glArrayElement',
    'glBegin',
    'glBindTexture',
    'glBitmap_c',
    'glBlendFunc',
    'glCallList',
    'glCallLists_c',
    'glClear',
    'glClearAccum',
    'glClearColor',
    'glClearDepth',
    'glClearIndex',
    'glClearStencil',
    'glClipPlane_c',
    'glColor3b',
    'glColor3bv_c',
    'glColor3d',
    'glColor3dv_c',
    'glColor3f',
    'glColor3fv_c',
    'glColor3i',
    'glColor3iv_c',
    'glColor3s',
    'glColor3sv_c',
    'glColor3ub',
    'glColor3ubv_c',
    'glColor3ui',
    'glColor3uiv_c',
    'glColor3us',
    'glColor3usv_c',
    'glColor4b',
    'glColor4bv_c',
    'glColor4d',
    'glColor4dv_c',
    'glColor4f',
    'glColor4fv_c',
    'glColor4i',
    'glColor4iv_c',
    'glColor4s',
    'glColor4sv_c',
    'glColor4ub',
    'glColor4ubv_c',
    'glColor4ui',
    'glColor4uiv_c',
    'glColor4us',
    'glColor4usv_c',
    'glColorMask',
    'glColorMaterial',
    'glColorPointer_c',
    'glCopyPixels',
    'glCopyTexImage1D',
    'glCopyTexImage2D',
    'glCopyTexSubImage1D',
    'glCopyTexSubImage2D',
    'glCullFace',
    'glDeleteLists',
    'glDeleteTextures_c',
    'glDepthFunc',
    'glDepthMask',
    'glDepthRange',
    'glDisable',
    'glDisableClientState',
    'glDrawArrays',
    'glDrawBuffer',
    'glDrawElements_c',
    'glDrawPixels_c',
    'glEdgeFlag',
    'glEdgeFlagPointer_c',
    'glEdgeFlagv_c',
    'glEnable',
    'glEnableClientState',
    'glEnd',
    'glEndList',
    'glEvalCoord1d',
    'glEvalCoord1dv_c',
    'glEvalCoord1f',
    'glEvalCoord1fv_c',
    'glEvalCoord2d',
    'glEvalCoord2dv_c',
    'glEvalCoord2f',
    'glEvalCoord2fv_c',
    'glEvalMesh1',
    'glEvalMesh2',
    'glEvalPoint1',
    'glEvalPoint2',
    'glFeedbackBuffer_c',
    'glFinish',
    'glFlush',
    'glFogf',
    'glFogfv_c',
    'glFogi',
    'glFogiv_c',
    'glFrontFace',
    'glFrustum',
    'glGenLists',
    'glGenTextures_c',
    'glGetBooleanv_c',
    'glGetClipPlane_c',
    'glGetDoublev_c',
    'glGetError',
    'glGetFloatv_c',
    'glGetIntegerv_c',
    'glGetLightfv_c',
    'glGetLightiv_c',
    'glGetMapdv_c',
    'glGetMapfv_c',
    'glGetMapiv_c',
    'glGetMaterialfv_c',
    'glGetMaterialiv_c',
    'glGetPixelMapfv_c',
    'glGetPixelMapuiv_c',
    'glGetPixelMapusv_c',
    'glGetPointerv_c',
    'glGetPolygonStipple_c',
    'glGetString',
    'glGetTexEnvfv_c',
    'glGetTexEnviv_c',
    'glGetTexGendv_c',
    'glGetTexGenfv_c',
    'glGetTexGeniv_c',
    'glGetTexImage_c',
    'glGetTexLevelParameterfv_c',
    'glGetTexLevelParameteriv_c',
    'glGetTexParameterfv_c',
    'glGetTexParameteriv_c',
    'glHint',
    'glIndexd',
    'glIndexdv_c',
    'glIndexf',
    'glIndexfv_c',
    'glIndexi',
    'glIndexiv_c',
    'glIndexMask',
    'glIndexPointer_c',
    'glIndexs',
    'glIndexsv_c',
    'glIndexub',
    'glIndexubv_c',
    'glInitNames',
    'glInterleavedArrays_c',
    'glIsEnabled',
    'glIsList',
    'glIsTexture',
    'glLightf',
    'glLightfv_c',
    'glLighti',
    'glLightiv_c',
    'glLightModelf',
    'glLightModelfv_c',
    'glLightModeli',
    'glLightModeliv_c',
    'glLineStipple',
    'glLineWidth',
    'glListBase',
    'glLoadIdentity',
    'glLoadMatrixd_c',
    'glLoadMatrixf_c',
    'glLoadName',
    'glLogicOp',
    'glMap1d_c',
    'glMap1f_c',
    'glMap2d_c',
    'glMap2f_c',
    'glMapGrid1d',
    'glMapGrid1f',
    'glMapGrid2d',
    'glMapGrid2f',
    'glMaterialf',
    'glMaterialfv_c',
    'glMateriali',
    'glMaterialiv_c',
    'glMatrixMode',
    'glMultMatrixd_c',
    'glMultMatrixf_c',
    'glNewList',
    'glNormal3b',
    'glNormal3bv_c',
    'glNormal3d',
    'glNormal3dv_c',
    'glNormal3f',
    'glNormal3fv_c',
    'glNormal3i',
    'glNormal3iv_c',
    'glNormal3s',
    'glNormal3sv_c',
    'glNormalPointer_c',
    'glOrtho',
    'glPassThrough',
    'glPixelMapfv_c',
    'glPixelMapuiv_c',
    'glPixelMapusv_c',
    'glPixelStoref',
    'glPixelStorei',
    'glPixelTransferf',
    'glPixelTransferi',
    'glPixelZoom',
    'glPointSize',
    'glPolygonMode',
    'glPolygonOffset',
    'glPolygonStipple_c',
    'glPopAttrib',
    'glPopClientAttrib',
    'glPopMatrix',
    'glPopName',
    'glPrioritizeTextures_c',
    'glPushAttrib',
    'glPushClientAttrib',
    'glPushMatrix',
    'glPushName',
    'glRasterPos2d',
    'glRasterPos2dv_c',
    'glRasterPos2f',
    'glRasterPos2fv_c',
    'glRasterPos2i',
    'glRasterPos2iv_c',
    'glRasterPos2s',
    'glRasterPos2sv_c',
    'glRasterPos3d',
    'glRasterPos3dv_c',
    'glRasterPos3f',
    'glRasterPos3fv_c',
    'glRasterPos3i',
    'glRasterPos3iv_c',
    'glRasterPos3s',
    'glRasterPos3sv_c',
    'glRasterPos4d',
    'glRasterPos4dv_c',
    'glRasterPos4f',
    'glRasterPos4fv_c',
    'glRasterPos4i',
    'glRasterPos4iv_c',
    'glRasterPos4s',
    'glRasterPos4sv_c',
    'glReadBuffer',
    'glReadPixels_c',
    'glRectd',
    'glRectdv_c',
    'glRectf',
    'glRectfv_c',
    'glRecti',
    'glRectiv_c',
    'glRects',
    'glRectsv_c',
    'glRenderMode',
    'glRotated',
    'glRotatef',
    'glScaled',
    'glScalef',
    'glScissor',
    'glSelectBuffer_c',
    'glShadeModel',
    'glStencilFunc',
    'glStencilMask',
    'glStencilOp',
    'glTexCoord1d',
    'glTexCoord1dv_c',
    'glTexCoord1f',
    'glTexCoord1fv_c',
    'glTexCoord1i',
    'glTexCoord1iv_c',
    'glTexCoord1s',
    'glTexCoord1sv_c',
    'glTexCoord2d',
    'glTexCoord2dv_c',
    'glTexCoord2f',
    'glTexCoord2fv_c',
    'glTexCoord2i',
    'glTexCoord2iv_c',
    'glTexCoord2s',
    'glTexCoord2sv_c',
    'glTexCoord3d',
    'glTexCoord3dv_c',
    'glTexCoord3f',
    'glTexCoord3fv_c',
    'glTexCoord3i',
    'glTexCoord3iv_c',
    'glTexCoord3s',
    'glTexCoord3sv_c',
    'glTexCoord4d',
    'glTexCoord4dv_c',
    'glTexCoord4f',
    'glTexCoord4fv_c',
    'glTexCoord4i',
    'glTexCoord4iv_c',
    'glTexCoord4s',
    'glTexCoord4sv_c',
    'glTexCoordPointer_c',
    'glTexEnvf',
    'glTexEnvfv_c',
    'glTexEnvi',
    'glTexEnviv_c',
    'glTexGend',
    'glTexGendv_c',
    'glTexGenf',
    'glTexGenfv_c',
    'glTexGeni',
    'glTexGeniv_c',
    'glTexImage1D_c',
    'glTexImage2D_c',
    'glTexParameterf',
    'glTexParameterfv_c',
    'glTexParameteri',
    'glTexParameteriv_c',
    'glTexSubImage1D_c',
    'glTexSubImage2D_c',
    'glTranslated',
    'glTranslatef',
    'glVertex2d',
    'glVertex2dv_c',
    'glVertex2f',
    'glVertex2fv_c',
    'glVertex2i',
    'glVertex2iv_c',
    'glVertex2s',
    'glVertex2sv_c',
    'glVertex3d',
    'glVertex3dv_c',
    'glVertex3f',
    'glVertex3fv_c',
    'glVertex3i',
    'glVertex3iv_c',
    'glVertex3s',
    'glVertex3sv_c',
    'glVertex4d',
    'glVertex4dv_c',
    'glVertex4f',
    'glVertex4fv_c',
    'glVertex4i',
    'glVertex4iv_c',
    'glVertex4s',
    'glVertex4sv_c',
    'glVertexPointer_c',
    'glViewport'
  ],
  'GL_VERSION_1_2' => [
    'glCopyTexSubImage3D',
    'glDrawRangeElements_c',
    'glTexImage3D_c',
    'glTexSubImage3D_c'
  ],
  'GL_VERSION_1_3' => [
    'glActiveTexture',
    'glClientActiveTexture',
    'glCompressedTexImage1D_c',
    'glCompressedTexImage2D_c',
    'glCompressedTexImage3D_c',
    'glCompressedTexSubImage1D_c',
    'glCompressedTexSubImage2D_c',
    'glCompressedTexSubImage3D_c',
    'glGetCompressedTexImage_c',
    'glLoadTransposeMatrixd_c',
    'glLoadTransposeMatrixf_c',
    'glMultiTexCoord1d',
    'glMultiTexCoord1dv_c',
    'glMultiTexCoord1f',
    'glMultiTexCoord1fv_c',
    'glMultiTexCoord1i',
    'glMultiTexCoord1iv_c',
    'glMultiTexCoord1s',
    'glMultiTexCoord1sv_c',
    'glMultiTexCoord2d',
    'glMultiTexCoord2dv_c',
    'glMultiTexCoord2f',
    'glMultiTexCoord2fv_c',
    'glMultiTexCoord2i',
    'glMultiTexCoord2iv_c',
    'glMultiTexCoord2s',
    'glMultiTexCoord2sv_c',
    'glMultiTexCoord3d',
    'glMultiTexCoord3dv_c',
    'glMultiTexCoord3f',
    'glMultiTexCoord3fv_c',
    'glMultiTexCoord3i',
    'glMultiTexCoord3iv_c',
    'glMultiTexCoord3s',
    'glMultiTexCoord3sv_c',
    'glMultiTexCoord4d',
    'glMultiTexCoord4dv_c',
    'glMultiTexCoord4f',
    'glMultiTexCoord4fv_c',
    'glMultiTexCoord4i',
    'glMultiTexCoord4iv_c',
    'glMultiTexCoord4s',
    'glMultiTexCoord4sv_c',
    'glMultTransposeMatrixd_c',
    'glMultTransposeMatrixf_c',
    'glSampleCoverage'
  ],
  'GL_VERSION_1_4' => [
    'glBlendColor',
    'glBlendEquation',
    'glBlendFuncSeparate',
    'glFogCoordd',
    'glFogCoorddv_c',
    'glFogCoordf',
    'glFogCoordfv_c',
    'glFogCoordPointer_c',
    'glMultiDrawArrays_c',
    'glMultiDrawElements_c',
    'glPointParameterf',
    'glPointParameterfv_c',
    'glPointParameteri',
    'glPointParameteriv_c',
    'glSecondaryColor3b',
    'glSecondaryColor3bv_c',
    'glSecondaryColor3d',
    'glSecondaryColor3dv_c',
    'glSecondaryColor3f',
    'glSecondaryColor3fv_c',
    'glSecondaryColor3i',
    'glSecondaryColor3iv_c',
    'glSecondaryColor3s',
    'glSecondaryColor3sv_c',
    'glSecondaryColor3ub',
    'glSecondaryColor3ubv_c',
    'glSecondaryColor3ui',
    'glSecondaryColor3uiv_c',
    'glSecondaryColor3us',
    'glSecondaryColor3usv_c',
    'glSecondaryColorPointer_c',
    'glWindowPos2d',
    'glWindowPos2dv_c',
    'glWindowPos2f',
    'glWindowPos2fv_c',
    'glWindowPos2i',
    'glWindowPos2iv_c',
    'glWindowPos2s',
    'glWindowPos2sv_c',
    'glWindowPos3d',
    'glWindowPos3dv_c',
    'glWindowPos3f',
    'glWindowPos3fv_c',
    'glWindowPos3i',
    'glWindowPos3iv_c',
    'glWindowPos3s',
    'glWindowPos3sv_c'
  ],
  'GL_VERSION_1_5' => [
    'glBeginQuery',
    'glBindBuffer',
    'glBufferData_c',
    'glBufferSubData_c',
    'glDeleteBuffers_c',
    'glDeleteQueries_c',
    'glEndQuery',
    'glGenBuffers_c',
    'glGenQueries_c',
    'glGetBufferParameteriv_c',
    'glGetBufferPointerv_c',
    'glGetBufferSubData_c',
    'glGetQueryiv_c',
    'glGetQueryObjectiv_c',
    'glGetQueryObjectuiv_c',
    'glIsBuffer',
    'glIsQuery',
    'glMapBuffer_c',
    'glUnmapBuffer'
  ],
  'GL_VERSION_2_0' => [
    'glAttachShader',
    'glBindAttribLocation_c',
    'glBlendEquationSeparate',
    'glCompileShader',
    'glCreateProgram',
    'glCreateShader',
    'glDeleteProgram',
    'glDeleteShader',
    'glDetachShader',
    'glDisableVertexAttribArray',
    'glDrawBuffers_c',
    'glEnableVertexAttribArray',
    'glGetActiveAttrib_c',
    'glGetActiveUniform_c',
    'glGetAttachedShaders_c',
    'glGetAttribLocation_c',
    'glGetProgramInfoLog_c',
    'glGetProgramiv_c',
    'glGetShaderInfoLog_c',
    'glGetShaderiv_c',
    'glGetShaderSource_c',
    'glGetUniformfv_c',
    'glGetUniformiv_c',
    'glGetUniformLocation_c',
    'glGetVertexAttribdv_c',
    'glGetVertexAttribfv_c',
    'glGetVertexAttribiv_c',
    'glGetVertexAttribPointerv_c',
    'glIsProgram',
    'glIsShader',
    'glLinkProgram',
    'glShaderSource_c',
    'glStencilFuncSeparate',
    'glStencilMaskSeparate',
    'glStencilOpSeparate',
    'glUniform1f',
    'glUniform1fv_c',
    'glUniform1i',
    'glUniform1iv_c',
    'glUniform2f',
    'glUniform2fv_c',
    'glUniform2i',
    'glUniform2iv_c',
    'glUniform3f',
    'glUniform3fv_c',
    'glUniform3i',
    'glUniform3iv_c',
    'glUniform4f',
    'glUniform4fv_c',
    'glUniform4i',
    'glUniform4iv_c',
    'glUniformMatrix2fv_c',
    'glUniformMatrix3fv_c',
    'glUniformMatrix4fv_c',
    'glUseProgram',
    'glValidateProgram',
    'glVertexAttrib1d',
    'glVertexAttrib1dv_c',
    'glVertexAttrib1f',
    'glVertexAttrib1fv_c',
    'glVertexAttrib1s',
    'glVertexAttrib1sv_c',
    'glVertexAttrib2d',
    'glVertexAttrib2dv_c',
    'glVertexAttrib2f',
    'glVertexAttrib2fv_c',
    'glVertexAttrib2s',
    'glVertexAttrib2sv_c',
    'glVertexAttrib3d',
    'glVertexAttrib3dv_c',
    'glVertexAttrib3f',
    'glVertexAttrib3fv_c',
    'glVertexAttrib3s',
    'glVertexAttrib3sv_c',
    'glVertexAttrib4bv_c',
    'glVertexAttrib4d',
    'glVertexAttrib4dv_c',
    'glVertexAttrib4f',
    'glVertexAttrib4fv_c',
    'glVertexAttrib4iv_c',
    'glVertexAttrib4Nbv_c',
    'glVertexAttrib4Niv_c',
    'glVertexAttrib4Nsv_c',
    'glVertexAttrib4Nub',
    'glVertexAttrib4Nubv_c',
    'glVertexAttrib4Nuiv_c',
    'glVertexAttrib4Nusv_c',
    'glVertexAttrib4s',
    'glVertexAttrib4sv_c',
    'glVertexAttrib4ubv_c',
    'glVertexAttrib4uiv_c',
    'glVertexAttrib4usv_c',
    'glVertexAttribPointer_c'
  ],
  'GL_VERSION_2_1' => [
    'glUniformMatrix2x3fv_c',
    'glUniformMatrix2x4fv_c',
    'glUniformMatrix3x2fv_c',
    'glUniformMatrix3x4fv_c',
    'glUniformMatrix4x2fv_c',
    'glUniformMatrix4x3fv_c'
  ],
  'GL_VERSION_3_0' => [
    'glBeginConditionalRender',
    'glBeginTransformFeedback',
    'glBindFragDataLocation_c',
    'glClampColor',
    'glClearBufferfi',
    'glClearBufferfv_c',
    'glClearBufferiv_c',
    'glClearBufferuiv_c',
    'glColorMaski',
    'glDisablei',
    'glEnablei',
    'glEndConditionalRender',
    'glEndTransformFeedback',
    'glGetBooleani_v_c',
    'glGetFragDataLocation_c',
    'glGetTexParameterIiv_c',
    'glGetTexParameterIuiv_c',
    'glGetTransformFeedbackVarying_c',
    'glGetUniformuiv_c',
    'glGetVertexAttribIiv_c',
    'glGetVertexAttribIuiv_c',
    'glIsEnabledi',
    'glTexParameterIiv_c',
    'glTexParameterIuiv_c',
    'glTransformFeedbackVaryings_c',
    'glUniform1ui',
    'glUniform1uiv_c',
    'glUniform2ui',
    'glUniform2uiv_c',
    'glUniform3ui',
    'glUniform3uiv_c',
    'glUniform4ui',
    'glUniform4uiv_c',
    'glVertexAttribI1i',
    'glVertexAttribI1iv_c',
    'glVertexAttribI1ui',
    'glVertexAttribI1uiv_c',
    'glVertexAttribI2i',
    'glVertexAttribI2iv_c',
    'glVertexAttribI2ui',
    'glVertexAttribI2uiv_c',
    'glVertexAttribI3i',
    'glVertexAttribI3iv_c',
    'glVertexAttribI3ui',
    'glVertexAttribI3uiv_c',
    'glVertexAttribI4bv_c',
    'glVertexAttribI4i',
    'glVertexAttribI4iv_c',
    'glVertexAttribI4sv_c',
    'glVertexAttribI4ubv_c',
    'glVertexAttribI4ui',
    'glVertexAttribI4uiv_c',
    'glVertexAttribI4usv_c',
    'glVertexAttribIPointer_c'
  ],
  'GL_VERSION_3_1' => [
    'glDrawArraysInstanced',
    'glDrawElementsInstanced_c',
    'glPrimitiveRestartIndex',
    'glTexBuffer'
  ],
  'GL_VERSION_3_2' => [
    'glFramebufferTexture',
    'glGetBufferParameteri64v_c',
    'glGetInteger64i_v_c'
  ],
  'GL_VERSION_3_3' => [
    'glVertexAttribDivisor'
  ],
  'GL_VERSION_4_0' => [
    'glBlendEquationi',
    'glBlendEquationSeparatei',
    'glBlendFunci',
    'glBlendFuncSeparatei',
    'glMinSampleShading'
  ],
  'GL_VERSION_4_5' => [
    'glGetGraphicsResetStatus',
    'glGetnCompressedTexImage_c',
    'glGetnTexImage_c',
    'glGetnUniformdv_c'
  ],
  'GL_VERSION_4_6' => [
    'glMultiDrawArraysIndirectCount_c',
    'glMultiDrawElementsIndirectCount_c',
    'glSpecializeShader_c'
  ],
  'GL_WIN_swap_hint' => [
    'glAddSwapHintRectWIN'
  ]
)}

our %registry = (
  'GLEW_3DFX_multisample' => {
    'glewImpl' => 'GLEW_3DFX_multisample',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_3DFX_tbuffer' => {
    'glewImpl' => 'GLEW_3DFX_tbuffer',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_3DFX_texture_compression_FXT1' => {
    'glewImpl' => 'GLEW_3DFX_texture_compression_FXT1',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_blend_minmax_factor' => {
    'glewImpl' => 'GLEW_AMD_blend_minmax_factor',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_compressed_3DC_texture' => {
    'glewImpl' => 'GLEW_AMD_compressed_3DC_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_compressed_ATC_texture' => {
    'glewImpl' => 'GLEW_AMD_compressed_ATC_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_conservative_depth' => {
    'glewImpl' => 'GLEW_AMD_conservative_depth',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_debug_output' => {
    'glewImpl' => 'GLEW_AMD_debug_output',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_depth_clamp_separate' => {
    'glewImpl' => 'GLEW_AMD_depth_clamp_separate',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_draw_buffers_blend' => {
    'glewImpl' => 'GLEW_AMD_draw_buffers_blend',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_framebuffer_sample_positions' => {
    'glewImpl' => 'GLEW_AMD_framebuffer_sample_positions',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_gcn_shader' => {
    'glewImpl' => 'GLEW_AMD_gcn_shader',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_gpu_shader_half_float' => {
    'glewImpl' => 'GLEW_AMD_gpu_shader_half_float',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_gpu_shader_int16' => {
    'glewImpl' => 'GLEW_AMD_gpu_shader_int16',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_gpu_shader_int64' => {
    'glewImpl' => 'GLEW_AMD_gpu_shader_int64',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_interleaved_elements' => {
    'glewImpl' => 'GLEW_AMD_interleaved_elements',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_multi_draw_indirect' => {
    'glewImpl' => 'GLEW_AMD_multi_draw_indirect',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_name_gen_delete' => {
    'glewImpl' => 'GLEW_AMD_name_gen_delete',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_occlusion_query_event' => {
    'glewImpl' => 'GLEW_AMD_occlusion_query_event',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_performance_monitor' => {
    'glewImpl' => 'GLEW_AMD_performance_monitor',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_pinned_memory' => {
    'glewImpl' => 'GLEW_AMD_pinned_memory',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_program_binary_Z400' => {
    'glewImpl' => 'GLEW_AMD_program_binary_Z400',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_query_buffer_object' => {
    'glewImpl' => 'GLEW_AMD_query_buffer_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_sample_positions' => {
    'glewImpl' => 'GLEW_AMD_sample_positions',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_seamless_cubemap_per_texture' => {
    'glewImpl' => 'GLEW_AMD_seamless_cubemap_per_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_shader_atomic_counter_ops' => {
    'glewImpl' => 'GLEW_AMD_shader_atomic_counter_ops',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_shader_ballot' => {
    'glewImpl' => 'GLEW_AMD_shader_ballot',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_shader_explicit_vertex_parameter' => {
    'glewImpl' => 'GLEW_AMD_shader_explicit_vertex_parameter',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_shader_stencil_export' => {
    'glewImpl' => 'GLEW_AMD_shader_stencil_export',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_shader_stencil_value_export' => {
    'glewImpl' => 'GLEW_AMD_shader_stencil_value_export',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_shader_trinary_minmax' => {
    'glewImpl' => 'GLEW_AMD_shader_trinary_minmax',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_sparse_texture' => {
    'glewImpl' => 'GLEW_AMD_sparse_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_stencil_operation_extended' => {
    'glewImpl' => 'GLEW_AMD_stencil_operation_extended',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_texture_gather_bias_lod' => {
    'glewImpl' => 'GLEW_AMD_texture_gather_bias_lod',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_texture_texture4' => {
    'glewImpl' => 'GLEW_AMD_texture_texture4',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_transform_feedback3_lines_triangles' => {
    'glewImpl' => 'GLEW_AMD_transform_feedback3_lines_triangles',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_transform_feedback4' => {
    'glewImpl' => 'GLEW_AMD_transform_feedback4',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_vertex_shader_layer' => {
    'glewImpl' => 'GLEW_AMD_vertex_shader_layer',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_vertex_shader_tessellator' => {
    'glewImpl' => 'GLEW_AMD_vertex_shader_tessellator',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_AMD_vertex_shader_viewport_index' => {
    'glewImpl' => 'GLEW_AMD_vertex_shader_viewport_index',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ANDROID_extension_pack_es31a' => {
    'glewImpl' => 'GLEW_ANDROID_extension_pack_es31a',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ANGLE_depth_texture' => {
    'glewImpl' => 'GLEW_ANGLE_depth_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ANGLE_framebuffer_blit' => {
    'glewImpl' => 'GLEW_ANGLE_framebuffer_blit',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ANGLE_framebuffer_multisample' => {
    'glewImpl' => 'GLEW_ANGLE_framebuffer_multisample',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ANGLE_instanced_arrays' => {
    'glewImpl' => 'GLEW_ANGLE_instanced_arrays',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ANGLE_pack_reverse_row_order' => {
    'glewImpl' => 'GLEW_ANGLE_pack_reverse_row_order',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ANGLE_program_binary' => {
    'glewImpl' => 'GLEW_ANGLE_program_binary',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ANGLE_texture_compression_dxt1' => {
    'glewImpl' => 'GLEW_ANGLE_texture_compression_dxt1',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ANGLE_texture_compression_dxt3' => {
    'glewImpl' => 'GLEW_ANGLE_texture_compression_dxt3',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ANGLE_texture_compression_dxt5' => {
    'glewImpl' => 'GLEW_ANGLE_texture_compression_dxt5',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ANGLE_texture_usage' => {
    'glewImpl' => 'GLEW_ANGLE_texture_usage',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ANGLE_timer_query' => {
    'glewImpl' => 'GLEW_ANGLE_timer_query',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ANGLE_translated_shader_source' => {
    'glewImpl' => 'GLEW_ANGLE_translated_shader_source',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_aux_depth_stencil' => {
    'glewImpl' => 'GLEW_APPLE_aux_depth_stencil',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_client_storage' => {
    'glewImpl' => 'GLEW_APPLE_client_storage',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_clip_distance' => {
    'glewImpl' => 'GLEW_APPLE_clip_distance',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_color_buffer_packed_float' => {
    'glewImpl' => 'GLEW_APPLE_color_buffer_packed_float',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_copy_texture_levels' => {
    'glewImpl' => 'GLEW_APPLE_copy_texture_levels',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_element_array' => {
    'glewImpl' => 'GLEW_APPLE_element_array',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_fence' => {
    'glewImpl' => 'GLEW_APPLE_fence',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_float_pixels' => {
    'glewImpl' => 'GLEW_APPLE_float_pixels',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_flush_buffer_range' => {
    'glewImpl' => 'GLEW_APPLE_flush_buffer_range',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_framebuffer_multisample' => {
    'glewImpl' => 'GLEW_APPLE_framebuffer_multisample',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_object_purgeable' => {
    'glewImpl' => 'GLEW_APPLE_object_purgeable',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_pixel_buffer' => {
    'glewImpl' => 'GLEW_APPLE_pixel_buffer',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_rgb_422' => {
    'glewImpl' => 'GLEW_APPLE_rgb_422',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_row_bytes' => {
    'glewImpl' => 'GLEW_APPLE_row_bytes',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_specular_vector' => {
    'glewImpl' => 'GLEW_APPLE_specular_vector',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_sync' => {
    'glewImpl' => 'GLEW_APPLE_sync',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_texture_2D_limited_npot' => {
    'glewImpl' => 'GLEW_APPLE_texture_2D_limited_npot',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_texture_format_BGRA8888' => {
    'glewImpl' => 'GLEW_APPLE_texture_format_BGRA8888',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_texture_max_level' => {
    'glewImpl' => 'GLEW_APPLE_texture_max_level',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_texture_packed_float' => {
    'glewImpl' => 'GLEW_APPLE_texture_packed_float',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_texture_range' => {
    'glewImpl' => 'GLEW_APPLE_texture_range',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_transform_hint' => {
    'glewImpl' => 'GLEW_APPLE_transform_hint',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_vertex_array_object' => {
    'glewImpl' => 'GLEW_APPLE_vertex_array_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_vertex_array_range' => {
    'glewImpl' => 'GLEW_APPLE_vertex_array_range',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_vertex_program_evaluators' => {
    'glewImpl' => 'GLEW_APPLE_vertex_program_evaluators',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_APPLE_ycbcr_422' => {
    'glewImpl' => 'GLEW_APPLE_ycbcr_422',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_ES2_compatibility' => {
    'glewImpl' => 'GLEW_ARB_ES2_compatibility',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_ES3_1_compatibility' => {
    'glewImpl' => 'GLEW_ARB_ES3_1_compatibility',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_ES3_2_compatibility' => {
    'glewImpl' => 'GLEW_ARB_ES3_2_compatibility',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_ES3_compatibility' => {
    'glewImpl' => 'GLEW_ARB_ES3_compatibility',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_arrays_of_arrays' => {
    'glewImpl' => 'GLEW_ARB_arrays_of_arrays',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_base_instance' => {
    'glewImpl' => 'GLEW_ARB_base_instance',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_bindless_texture' => {
    'glewImpl' => 'GLEW_ARB_bindless_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_blend_func_extended' => {
    'glewImpl' => 'GLEW_ARB_blend_func_extended',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_buffer_storage' => {
    'glewImpl' => 'GLEW_ARB_buffer_storage',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_cl_event' => {
    'glewImpl' => 'GLEW_ARB_cl_event',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_clear_buffer_object' => {
    'glewImpl' => 'GLEW_ARB_clear_buffer_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_clear_texture' => {
    'glewImpl' => 'GLEW_ARB_clear_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_clip_control' => {
    'glewImpl' => 'GLEW_ARB_clip_control',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_color_buffer_float' => {
    'glewImpl' => 'GLEW_ARB_color_buffer_float',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_compatibility' => {
    'glewImpl' => 'GLEW_ARB_compatibility',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_compressed_texture_pixel_storage' => {
    'glewImpl' => 'GLEW_ARB_compressed_texture_pixel_storage',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_compute_shader' => {
    'glewImpl' => 'GLEW_ARB_compute_shader',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_compute_variable_group_size' => {
    'glewImpl' => 'GLEW_ARB_compute_variable_group_size',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_conditional_render_inverted' => {
    'glewImpl' => 'GLEW_ARB_conditional_render_inverted',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_conservative_depth' => {
    'glewImpl' => 'GLEW_ARB_conservative_depth',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_copy_buffer' => {
    'glewImpl' => 'GLEW_ARB_copy_buffer',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_copy_image' => {
    'glewImpl' => 'GLEW_ARB_copy_image',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_cull_distance' => {
    'glewImpl' => 'GLEW_ARB_cull_distance',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_debug_output' => {
    'glewImpl' => 'GLEW_ARB_debug_output',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_depth_buffer_float' => {
    'glewImpl' => 'GLEW_ARB_depth_buffer_float',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_depth_clamp' => {
    'glewImpl' => 'GLEW_ARB_depth_clamp',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_depth_texture' => {
    'glewImpl' => 'GLEW_ARB_depth_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_derivative_control' => {
    'glewImpl' => 'GLEW_ARB_derivative_control',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_direct_state_access' => {
    'glewImpl' => 'GLEW_ARB_direct_state_access',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_draw_buffers' => {
    'glewImpl' => 'GLEW_ARB_draw_buffers',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_draw_buffers_blend' => {
    'glewImpl' => 'GLEW_ARB_draw_buffers_blend',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_draw_elements_base_vertex' => {
    'glewImpl' => 'GLEW_ARB_draw_elements_base_vertex',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_draw_indirect' => {
    'glewImpl' => 'GLEW_ARB_draw_indirect',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_draw_instanced' => {
    'glewImpl' => 'GLEW_ARB_draw_instanced',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_enhanced_layouts' => {
    'glewImpl' => 'GLEW_ARB_enhanced_layouts',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_explicit_attrib_location' => {
    'glewImpl' => 'GLEW_ARB_explicit_attrib_location',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_explicit_uniform_location' => {
    'glewImpl' => 'GLEW_ARB_explicit_uniform_location',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_fragment_coord_conventions' => {
    'glewImpl' => 'GLEW_ARB_fragment_coord_conventions',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_fragment_layer_viewport' => {
    'glewImpl' => 'GLEW_ARB_fragment_layer_viewport',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_fragment_program' => {
    'glewImpl' => 'GLEW_ARB_fragment_program',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_fragment_program_shadow' => {
    'glewImpl' => 'GLEW_ARB_fragment_program_shadow',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_fragment_shader' => {
    'glewImpl' => 'GLEW_ARB_fragment_shader',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_fragment_shader_interlock' => {
    'glewImpl' => 'GLEW_ARB_fragment_shader_interlock',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_framebuffer_no_attachments' => {
    'glewImpl' => 'GLEW_ARB_framebuffer_no_attachments',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_framebuffer_object' => {
    'glewImpl' => 'GLEW_ARB_framebuffer_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_framebuffer_sRGB' => {
    'glewImpl' => 'GLEW_ARB_framebuffer_sRGB',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_geometry_shader4' => {
    'glewImpl' => 'GLEW_ARB_geometry_shader4',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_get_program_binary' => {
    'glewImpl' => 'GLEW_ARB_get_program_binary',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_get_texture_sub_image' => {
    'glewImpl' => 'GLEW_ARB_get_texture_sub_image',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_gl_spirv' => {
    'glewImpl' => 'GLEW_ARB_gl_spirv',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_gpu_shader5' => {
    'glewImpl' => 'GLEW_ARB_gpu_shader5',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_gpu_shader_fp64' => {
    'glewImpl' => 'GLEW_ARB_gpu_shader_fp64',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_gpu_shader_int64' => {
    'glewImpl' => 'GLEW_ARB_gpu_shader_int64',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_half_float_pixel' => {
    'glewImpl' => 'GLEW_ARB_half_float_pixel',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_half_float_vertex' => {
    'glewImpl' => 'GLEW_ARB_half_float_vertex',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_imaging' => {
    'glewImpl' => 'GLEW_ARB_imaging',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_indirect_parameters' => {
    'glewImpl' => 'GLEW_ARB_indirect_parameters',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_instanced_arrays' => {
    'glewImpl' => 'GLEW_ARB_instanced_arrays',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_internalformat_query' => {
    'glewImpl' => 'GLEW_ARB_internalformat_query',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_internalformat_query2' => {
    'glewImpl' => 'GLEW_ARB_internalformat_query2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_invalidate_subdata' => {
    'glewImpl' => 'GLEW_ARB_invalidate_subdata',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_map_buffer_alignment' => {
    'glewImpl' => 'GLEW_ARB_map_buffer_alignment',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_map_buffer_range' => {
    'glewImpl' => 'GLEW_ARB_map_buffer_range',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_matrix_palette' => {
    'glewImpl' => 'GLEW_ARB_matrix_palette',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_multi_bind' => {
    'glewImpl' => 'GLEW_ARB_multi_bind',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_multi_draw_indirect' => {
    'glewImpl' => 'GLEW_ARB_multi_draw_indirect',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_multisample' => {
    'glewImpl' => 'GLEW_ARB_multisample',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_multitexture' => {
    'glewImpl' => 'GLEW_ARB_multitexture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_occlusion_query' => {
    'glewImpl' => 'GLEW_ARB_occlusion_query',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_occlusion_query2' => {
    'glewImpl' => 'GLEW_ARB_occlusion_query2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_parallel_shader_compile' => {
    'glewImpl' => 'GLEW_ARB_parallel_shader_compile',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_pipeline_statistics_query' => {
    'glewImpl' => 'GLEW_ARB_pipeline_statistics_query',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_pixel_buffer_object' => {
    'glewImpl' => 'GLEW_ARB_pixel_buffer_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_point_parameters' => {
    'glewImpl' => 'GLEW_ARB_point_parameters',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_point_sprite' => {
    'glewImpl' => 'GLEW_ARB_point_sprite',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_polygon_offset_clamp' => {
    'glewImpl' => 'GLEW_ARB_polygon_offset_clamp',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_post_depth_coverage' => {
    'glewImpl' => 'GLEW_ARB_post_depth_coverage',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_program_interface_query' => {
    'glewImpl' => 'GLEW_ARB_program_interface_query',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_provoking_vertex' => {
    'glewImpl' => 'GLEW_ARB_provoking_vertex',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_query_buffer_object' => {
    'glewImpl' => 'GLEW_ARB_query_buffer_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_robust_buffer_access_behavior' => {
    'glewImpl' => 'GLEW_ARB_robust_buffer_access_behavior',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_robustness' => {
    'glewImpl' => 'GLEW_ARB_robustness',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_robustness_application_isolation' => {
    'glewImpl' => 'GLEW_ARB_robustness_application_isolation',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_robustness_share_group_isolation' => {
    'glewImpl' => 'GLEW_ARB_robustness_share_group_isolation',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_sample_locations' => {
    'glewImpl' => 'GLEW_ARB_sample_locations',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_sample_shading' => {
    'glewImpl' => 'GLEW_ARB_sample_shading',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_sampler_objects' => {
    'glewImpl' => 'GLEW_ARB_sampler_objects',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_seamless_cube_map' => {
    'glewImpl' => 'GLEW_ARB_seamless_cube_map',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_seamless_cubemap_per_texture' => {
    'glewImpl' => 'GLEW_ARB_seamless_cubemap_per_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_separate_shader_objects' => {
    'glewImpl' => 'GLEW_ARB_separate_shader_objects',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shader_atomic_counter_ops' => {
    'glewImpl' => 'GLEW_ARB_shader_atomic_counter_ops',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shader_atomic_counters' => {
    'glewImpl' => 'GLEW_ARB_shader_atomic_counters',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shader_ballot' => {
    'glewImpl' => 'GLEW_ARB_shader_ballot',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shader_bit_encoding' => {
    'glewImpl' => 'GLEW_ARB_shader_bit_encoding',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shader_clock' => {
    'glewImpl' => 'GLEW_ARB_shader_clock',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shader_draw_parameters' => {
    'glewImpl' => 'GLEW_ARB_shader_draw_parameters',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shader_group_vote' => {
    'glewImpl' => 'GLEW_ARB_shader_group_vote',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shader_image_load_store' => {
    'glewImpl' => 'GLEW_ARB_shader_image_load_store',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shader_image_size' => {
    'glewImpl' => 'GLEW_ARB_shader_image_size',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shader_objects' => {
    'glewImpl' => 'GLEW_ARB_shader_objects',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shader_precision' => {
    'glewImpl' => 'GLEW_ARB_shader_precision',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shader_stencil_export' => {
    'glewImpl' => 'GLEW_ARB_shader_stencil_export',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shader_storage_buffer_object' => {
    'glewImpl' => 'GLEW_ARB_shader_storage_buffer_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shader_subroutine' => {
    'glewImpl' => 'GLEW_ARB_shader_subroutine',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shader_texture_image_samples' => {
    'glewImpl' => 'GLEW_ARB_shader_texture_image_samples',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shader_texture_lod' => {
    'glewImpl' => 'GLEW_ARB_shader_texture_lod',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shader_viewport_layer_array' => {
    'glewImpl' => 'GLEW_ARB_shader_viewport_layer_array',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shading_language_100' => {
    'glewImpl' => 'GLEW_ARB_shading_language_100',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shading_language_420pack' => {
    'glewImpl' => 'GLEW_ARB_shading_language_420pack',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shading_language_include' => {
    'glewImpl' => 'GLEW_ARB_shading_language_include',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shading_language_packing' => {
    'glewImpl' => 'GLEW_ARB_shading_language_packing',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shadow' => {
    'glewImpl' => 'GLEW_ARB_shadow',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_shadow_ambient' => {
    'glewImpl' => 'GLEW_ARB_shadow_ambient',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_sparse_buffer' => {
    'glewImpl' => 'GLEW_ARB_sparse_buffer',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_sparse_texture' => {
    'glewImpl' => 'GLEW_ARB_sparse_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_sparse_texture2' => {
    'glewImpl' => 'GLEW_ARB_sparse_texture2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_sparse_texture_clamp' => {
    'glewImpl' => 'GLEW_ARB_sparse_texture_clamp',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_spirv_extensions' => {
    'glewImpl' => 'GLEW_ARB_spirv_extensions',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_stencil_texturing' => {
    'glewImpl' => 'GLEW_ARB_stencil_texturing',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_sync' => {
    'glewImpl' => 'GLEW_ARB_sync',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_tessellation_shader' => {
    'glewImpl' => 'GLEW_ARB_tessellation_shader',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_barrier' => {
    'glewImpl' => 'GLEW_ARB_texture_barrier',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_border_clamp' => {
    'glewImpl' => 'GLEW_ARB_texture_border_clamp',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_buffer_object' => {
    'glewImpl' => 'GLEW_ARB_texture_buffer_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_buffer_object_rgb32' => {
    'glewImpl' => 'GLEW_ARB_texture_buffer_object_rgb32',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_buffer_range' => {
    'glewImpl' => 'GLEW_ARB_texture_buffer_range',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_compression' => {
    'glewImpl' => 'GLEW_ARB_texture_compression',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_compression_bptc' => {
    'glewImpl' => 'GLEW_ARB_texture_compression_bptc',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_compression_rgtc' => {
    'glewImpl' => 'GLEW_ARB_texture_compression_rgtc',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_cube_map' => {
    'glewImpl' => 'GLEW_ARB_texture_cube_map',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_cube_map_array' => {
    'glewImpl' => 'GLEW_ARB_texture_cube_map_array',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_env_add' => {
    'glewImpl' => 'GLEW_ARB_texture_env_add',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_env_combine' => {
    'glewImpl' => 'GLEW_ARB_texture_env_combine',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_env_crossbar' => {
    'glewImpl' => 'GLEW_ARB_texture_env_crossbar',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_env_dot3' => {
    'glewImpl' => 'GLEW_ARB_texture_env_dot3',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_filter_anisotropic' => {
    'glewImpl' => 'GLEW_ARB_texture_filter_anisotropic',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_filter_minmax' => {
    'glewImpl' => 'GLEW_ARB_texture_filter_minmax',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_float' => {
    'glewImpl' => 'GLEW_ARB_texture_float',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_gather' => {
    'glewImpl' => 'GLEW_ARB_texture_gather',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_mirror_clamp_to_edge' => {
    'glewImpl' => 'GLEW_ARB_texture_mirror_clamp_to_edge',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_mirrored_repeat' => {
    'glewImpl' => 'GLEW_ARB_texture_mirrored_repeat',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_multisample' => {
    'glewImpl' => 'GLEW_ARB_texture_multisample',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_non_power_of_two' => {
    'glewImpl' => 'GLEW_ARB_texture_non_power_of_two',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_query_levels' => {
    'glewImpl' => 'GLEW_ARB_texture_query_levels',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_query_lod' => {
    'glewImpl' => 'GLEW_ARB_texture_query_lod',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_rectangle' => {
    'glewImpl' => 'GLEW_ARB_texture_rectangle',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_rg' => {
    'glewImpl' => 'GLEW_ARB_texture_rg',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_rgb10_a2ui' => {
    'glewImpl' => 'GLEW_ARB_texture_rgb10_a2ui',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_stencil8' => {
    'glewImpl' => 'GLEW_ARB_texture_stencil8',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_storage' => {
    'glewImpl' => 'GLEW_ARB_texture_storage',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_storage_multisample' => {
    'glewImpl' => 'GLEW_ARB_texture_storage_multisample',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_swizzle' => {
    'glewImpl' => 'GLEW_ARB_texture_swizzle',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_texture_view' => {
    'glewImpl' => 'GLEW_ARB_texture_view',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_timer_query' => {
    'glewImpl' => 'GLEW_ARB_timer_query',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_transform_feedback2' => {
    'glewImpl' => 'GLEW_ARB_transform_feedback2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_transform_feedback3' => {
    'glewImpl' => 'GLEW_ARB_transform_feedback3',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_transform_feedback_instanced' => {
    'glewImpl' => 'GLEW_ARB_transform_feedback_instanced',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_transform_feedback_overflow_query' => {
    'glewImpl' => 'GLEW_ARB_transform_feedback_overflow_query',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_transpose_matrix' => {
    'glewImpl' => 'GLEW_ARB_transpose_matrix',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_uniform_buffer_object' => {
    'glewImpl' => 'GLEW_ARB_uniform_buffer_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_vertex_array_bgra' => {
    'glewImpl' => 'GLEW_ARB_vertex_array_bgra',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_vertex_array_object' => {
    'glewImpl' => 'GLEW_ARB_vertex_array_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_vertex_attrib_64bit' => {
    'glewImpl' => 'GLEW_ARB_vertex_attrib_64bit',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_vertex_attrib_binding' => {
    'glewImpl' => 'GLEW_ARB_vertex_attrib_binding',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_vertex_blend' => {
    'glewImpl' => 'GLEW_ARB_vertex_blend',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_vertex_buffer_object' => {
    'glewImpl' => 'GLEW_ARB_vertex_buffer_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_vertex_program' => {
    'glewImpl' => 'GLEW_ARB_vertex_program',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_vertex_shader' => {
    'glewImpl' => 'GLEW_ARB_vertex_shader',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_vertex_type_10f_11f_11f_rev' => {
    'glewImpl' => 'GLEW_ARB_vertex_type_10f_11f_11f_rev',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_vertex_type_2_10_10_10_rev' => {
    'glewImpl' => 'GLEW_ARB_vertex_type_2_10_10_10_rev',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_viewport_array' => {
    'glewImpl' => 'GLEW_ARB_viewport_array',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARB_window_pos' => {
    'glewImpl' => 'GLEW_ARB_window_pos',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARM_mali_program_binary' => {
    'glewImpl' => 'GLEW_ARM_mali_program_binary',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARM_mali_shader_binary' => {
    'glewImpl' => 'GLEW_ARM_mali_shader_binary',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARM_rgba8' => {
    'glewImpl' => 'GLEW_ARM_rgba8',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARM_shader_framebuffer_fetch' => {
    'glewImpl' => 'GLEW_ARM_shader_framebuffer_fetch',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ARM_shader_framebuffer_fetch_depth_stencil' => {
    'glewImpl' => 'GLEW_ARM_shader_framebuffer_fetch_depth_stencil',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ATIX_point_sprites' => {
    'glewImpl' => 'GLEW_ATIX_point_sprites',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ATIX_texture_env_combine3' => {
    'glewImpl' => 'GLEW_ATIX_texture_env_combine3',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ATIX_texture_env_route' => {
    'glewImpl' => 'GLEW_ATIX_texture_env_route',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ATIX_vertex_shader_output_point_size' => {
    'glewImpl' => 'GLEW_ATIX_vertex_shader_output_point_size',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ATI_draw_buffers' => {
    'glewImpl' => 'GLEW_ATI_draw_buffers',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ATI_element_array' => {
    'glewImpl' => 'GLEW_ATI_element_array',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ATI_envmap_bumpmap' => {
    'glewImpl' => 'GLEW_ATI_envmap_bumpmap',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ATI_fragment_shader' => {
    'glewImpl' => 'GLEW_ATI_fragment_shader',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ATI_map_object_buffer' => {
    'glewImpl' => 'GLEW_ATI_map_object_buffer',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ATI_meminfo' => {
    'glewImpl' => 'GLEW_ATI_meminfo',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ATI_pn_triangles' => {
    'glewImpl' => 'GLEW_ATI_pn_triangles',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ATI_separate_stencil' => {
    'glewImpl' => 'GLEW_ATI_separate_stencil',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ATI_shader_texture_lod' => {
    'glewImpl' => 'GLEW_ATI_shader_texture_lod',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ATI_text_fragment_shader' => {
    'glewImpl' => 'GLEW_ATI_text_fragment_shader',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ATI_texture_compression_3dc' => {
    'glewImpl' => 'GLEW_ATI_texture_compression_3dc',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ATI_texture_env_combine3' => {
    'glewImpl' => 'GLEW_ATI_texture_env_combine3',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ATI_texture_float' => {
    'glewImpl' => 'GLEW_ATI_texture_float',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ATI_texture_mirror_once' => {
    'glewImpl' => 'GLEW_ATI_texture_mirror_once',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ATI_vertex_array_object' => {
    'glewImpl' => 'GLEW_ATI_vertex_array_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ATI_vertex_attrib_array_object' => {
    'glewImpl' => 'GLEW_ATI_vertex_attrib_array_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_ATI_vertex_streams' => {
    'glewImpl' => 'GLEW_ATI_vertex_streams',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EGL_KHR_context_flush_control' => {
    'glewImpl' => 'GLEW_EGL_KHR_context_flush_control',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EGL_NV_robustness_video_memory_purge' => {
    'glewImpl' => 'GLEW_EGL_NV_robustness_video_memory_purge',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_422_pixels' => {
    'glewImpl' => 'GLEW_EXT_422_pixels',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_Cg_shader' => {
    'glewImpl' => 'GLEW_EXT_Cg_shader',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_EGL_image_array' => {
    'glewImpl' => 'GLEW_EXT_EGL_image_array',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_YUV_target' => {
    'glewImpl' => 'GLEW_EXT_YUV_target',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_abgr' => {
    'glewImpl' => 'GLEW_EXT_abgr',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_base_instance' => {
    'glewImpl' => 'GLEW_EXT_base_instance',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_bgra' => {
    'glewImpl' => 'GLEW_EXT_bgra',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_bindable_uniform' => {
    'glewImpl' => 'GLEW_EXT_bindable_uniform',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_blend_color' => {
    'glewImpl' => 'GLEW_EXT_blend_color',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_blend_equation_separate' => {
    'glewImpl' => 'GLEW_EXT_blend_equation_separate',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_blend_func_extended' => {
    'glewImpl' => 'GLEW_EXT_blend_func_extended',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_blend_func_separate' => {
    'glewImpl' => 'GLEW_EXT_blend_func_separate',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_blend_logic_op' => {
    'glewImpl' => 'GLEW_EXT_blend_logic_op',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_blend_minmax' => {
    'glewImpl' => 'GLEW_EXT_blend_minmax',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_blend_subtract' => {
    'glewImpl' => 'GLEW_EXT_blend_subtract',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_buffer_storage' => {
    'glewImpl' => 'GLEW_EXT_buffer_storage',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_clear_texture' => {
    'glewImpl' => 'GLEW_EXT_clear_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_clip_cull_distance' => {
    'glewImpl' => 'GLEW_EXT_clip_cull_distance',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_clip_volume_hint' => {
    'glewImpl' => 'GLEW_EXT_clip_volume_hint',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_cmyka' => {
    'glewImpl' => 'GLEW_EXT_cmyka',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_color_buffer_float' => {
    'glewImpl' => 'GLEW_EXT_color_buffer_float',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_color_buffer_half_float' => {
    'glewImpl' => 'GLEW_EXT_color_buffer_half_float',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_color_subtable' => {
    'glewImpl' => 'GLEW_EXT_color_subtable',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_compiled_vertex_array' => {
    'glewImpl' => 'GLEW_EXT_compiled_vertex_array',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_compressed_ETC1_RGB8_sub_texture' => {
    'glewImpl' => 'GLEW_EXT_compressed_ETC1_RGB8_sub_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_conservative_depth' => {
    'glewImpl' => 'GLEW_EXT_conservative_depth',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_convolution' => {
    'glewImpl' => 'GLEW_EXT_convolution',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_coordinate_frame' => {
    'glewImpl' => 'GLEW_EXT_coordinate_frame',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_copy_image' => {
    'glewImpl' => 'GLEW_EXT_copy_image',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_copy_texture' => {
    'glewImpl' => 'GLEW_EXT_copy_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_cull_vertex' => {
    'glewImpl' => 'GLEW_EXT_cull_vertex',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_debug_label' => {
    'glewImpl' => 'GLEW_EXT_debug_label',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_debug_marker' => {
    'glewImpl' => 'GLEW_EXT_debug_marker',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_depth_bounds_test' => {
    'glewImpl' => 'GLEW_EXT_depth_bounds_test',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_direct_state_access' => {
    'glewImpl' => 'GLEW_EXT_direct_state_access',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_discard_framebuffer' => {
    'glewImpl' => 'GLEW_EXT_discard_framebuffer',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_draw_buffers' => {
    'glewImpl' => 'GLEW_EXT_draw_buffers',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_draw_buffers2' => {
    'glewImpl' => 'GLEW_EXT_draw_buffers2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_draw_buffers_indexed' => {
    'glewImpl' => 'GLEW_EXT_draw_buffers_indexed',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_draw_elements_base_vertex' => {
    'glewImpl' => 'GLEW_EXT_draw_elements_base_vertex',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_draw_instanced' => {
    'glewImpl' => 'GLEW_EXT_draw_instanced',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_draw_range_elements' => {
    'glewImpl' => 'GLEW_EXT_draw_range_elements',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_external_buffer' => {
    'glewImpl' => 'GLEW_EXT_external_buffer',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_float_blend' => {
    'glewImpl' => 'GLEW_EXT_float_blend',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_fog_coord' => {
    'glewImpl' => 'GLEW_EXT_fog_coord',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_frag_depth' => {
    'glewImpl' => 'GLEW_EXT_frag_depth',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_fragment_lighting' => {
    'glewImpl' => 'GLEW_EXT_fragment_lighting',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_framebuffer_blit' => {
    'glewImpl' => 'GLEW_EXT_framebuffer_blit',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_framebuffer_multisample' => {
    'glewImpl' => 'GLEW_EXT_framebuffer_multisample',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_framebuffer_multisample_blit_scaled' => {
    'glewImpl' => 'GLEW_EXT_framebuffer_multisample_blit_scaled',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_framebuffer_object' => {
    'glewImpl' => 'GLEW_EXT_framebuffer_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_framebuffer_sRGB' => {
    'glewImpl' => 'GLEW_EXT_framebuffer_sRGB',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_geometry_point_size' => {
    'glewImpl' => 'GLEW_EXT_geometry_point_size',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_geometry_shader' => {
    'glewImpl' => 'GLEW_EXT_geometry_shader',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_geometry_shader4' => {
    'glewImpl' => 'GLEW_EXT_geometry_shader4',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_gpu_program_parameters' => {
    'glewImpl' => 'GLEW_EXT_gpu_program_parameters',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_gpu_shader4' => {
    'glewImpl' => 'GLEW_EXT_gpu_shader4',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_gpu_shader5' => {
    'glewImpl' => 'GLEW_EXT_gpu_shader5',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_histogram' => {
    'glewImpl' => 'GLEW_EXT_histogram',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_index_array_formats' => {
    'glewImpl' => 'GLEW_EXT_index_array_formats',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_index_func' => {
    'glewImpl' => 'GLEW_EXT_index_func',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_index_material' => {
    'glewImpl' => 'GLEW_EXT_index_material',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_index_texture' => {
    'glewImpl' => 'GLEW_EXT_index_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_instanced_arrays' => {
    'glewImpl' => 'GLEW_EXT_instanced_arrays',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_light_texture' => {
    'glewImpl' => 'GLEW_EXT_light_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_map_buffer_range' => {
    'glewImpl' => 'GLEW_EXT_map_buffer_range',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_memory_object' => {
    'glewImpl' => 'GLEW_EXT_memory_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_memory_object_fd' => {
    'glewImpl' => 'GLEW_EXT_memory_object_fd',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_memory_object_win32' => {
    'glewImpl' => 'GLEW_EXT_memory_object_win32',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_misc_attribute' => {
    'glewImpl' => 'GLEW_EXT_misc_attribute',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_multi_draw_arrays' => {
    'glewImpl' => 'GLEW_EXT_multi_draw_arrays',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_multi_draw_indirect' => {
    'glewImpl' => 'GLEW_EXT_multi_draw_indirect',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_multiple_textures' => {
    'glewImpl' => 'GLEW_EXT_multiple_textures',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_multisample' => {
    'glewImpl' => 'GLEW_EXT_multisample',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_multisample_compatibility' => {
    'glewImpl' => 'GLEW_EXT_multisample_compatibility',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_multisampled_render_to_texture' => {
    'glewImpl' => 'GLEW_EXT_multisampled_render_to_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_multisampled_render_to_texture2' => {
    'glewImpl' => 'GLEW_EXT_multisampled_render_to_texture2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_multiview_draw_buffers' => {
    'glewImpl' => 'GLEW_EXT_multiview_draw_buffers',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_packed_depth_stencil' => {
    'glewImpl' => 'GLEW_EXT_packed_depth_stencil',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_packed_float' => {
    'glewImpl' => 'GLEW_EXT_packed_float',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_packed_pixels' => {
    'glewImpl' => 'GLEW_EXT_packed_pixels',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_paletted_texture' => {
    'glewImpl' => 'GLEW_EXT_paletted_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_pixel_buffer_object' => {
    'glewImpl' => 'GLEW_EXT_pixel_buffer_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_pixel_transform' => {
    'glewImpl' => 'GLEW_EXT_pixel_transform',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_pixel_transform_color_table' => {
    'glewImpl' => 'GLEW_EXT_pixel_transform_color_table',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_point_parameters' => {
    'glewImpl' => 'GLEW_EXT_point_parameters',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_polygon_offset' => {
    'glewImpl' => 'GLEW_EXT_polygon_offset',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_polygon_offset_clamp' => {
    'glewImpl' => 'GLEW_EXT_polygon_offset_clamp',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_post_depth_coverage' => {
    'glewImpl' => 'GLEW_EXT_post_depth_coverage',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_provoking_vertex' => {
    'glewImpl' => 'GLEW_EXT_provoking_vertex',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_pvrtc_sRGB' => {
    'glewImpl' => 'GLEW_EXT_pvrtc_sRGB',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_raster_multisample' => {
    'glewImpl' => 'GLEW_EXT_raster_multisample',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_read_format_bgra' => {
    'glewImpl' => 'GLEW_EXT_read_format_bgra',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_render_snorm' => {
    'glewImpl' => 'GLEW_EXT_render_snorm',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_rescale_normal' => {
    'glewImpl' => 'GLEW_EXT_rescale_normal',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_sRGB' => {
    'glewImpl' => 'GLEW_EXT_sRGB',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_sRGB_write_control' => {
    'glewImpl' => 'GLEW_EXT_sRGB_write_control',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_scene_marker' => {
    'glewImpl' => 'GLEW_EXT_scene_marker',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_secondary_color' => {
    'glewImpl' => 'GLEW_EXT_secondary_color',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_semaphore' => {
    'glewImpl' => 'GLEW_EXT_semaphore',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_semaphore_fd' => {
    'glewImpl' => 'GLEW_EXT_semaphore_fd',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_semaphore_win32' => {
    'glewImpl' => 'GLEW_EXT_semaphore_win32',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_separate_shader_objects' => {
    'glewImpl' => 'GLEW_EXT_separate_shader_objects',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_separate_specular_color' => {
    'glewImpl' => 'GLEW_EXT_separate_specular_color',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_shader_framebuffer_fetch' => {
    'glewImpl' => 'GLEW_EXT_shader_framebuffer_fetch',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_shader_group_vote' => {
    'glewImpl' => 'GLEW_EXT_shader_group_vote',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_shader_image_load_formatted' => {
    'glewImpl' => 'GLEW_EXT_shader_image_load_formatted',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_shader_image_load_store' => {
    'glewImpl' => 'GLEW_EXT_shader_image_load_store',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_shader_implicit_conversions' => {
    'glewImpl' => 'GLEW_EXT_shader_implicit_conversions',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_shader_integer_mix' => {
    'glewImpl' => 'GLEW_EXT_shader_integer_mix',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_shader_io_blocks' => {
    'glewImpl' => 'GLEW_EXT_shader_io_blocks',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_shader_non_constant_global_initializers' => {
    'glewImpl' => 'GLEW_EXT_shader_non_constant_global_initializers',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_shader_pixel_local_storage' => {
    'glewImpl' => 'GLEW_EXT_shader_pixel_local_storage',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_shader_pixel_local_storage2' => {
    'glewImpl' => 'GLEW_EXT_shader_pixel_local_storage2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_shader_texture_lod' => {
    'glewImpl' => 'GLEW_EXT_shader_texture_lod',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_shadow_funcs' => {
    'glewImpl' => 'GLEW_EXT_shadow_funcs',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_shadow_samplers' => {
    'glewImpl' => 'GLEW_EXT_shadow_samplers',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_shared_texture_palette' => {
    'glewImpl' => 'GLEW_EXT_shared_texture_palette',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_sparse_texture' => {
    'glewImpl' => 'GLEW_EXT_sparse_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_sparse_texture2' => {
    'glewImpl' => 'GLEW_EXT_sparse_texture2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_stencil_clear_tag' => {
    'glewImpl' => 'GLEW_EXT_stencil_clear_tag',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_stencil_two_side' => {
    'glewImpl' => 'GLEW_EXT_stencil_two_side',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_stencil_wrap' => {
    'glewImpl' => 'GLEW_EXT_stencil_wrap',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_subtexture' => {
    'glewImpl' => 'GLEW_EXT_subtexture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture' => {
    'glewImpl' => 'GLEW_EXT_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture3D' => {
    'glewImpl' => 'GLEW_EXT_texture3D',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_array' => {
    'glewImpl' => 'GLEW_EXT_texture_array',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_buffer_object' => {
    'glewImpl' => 'GLEW_EXT_texture_buffer_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_compression_astc_decode_mode' => {
    'glewImpl' => 'GLEW_EXT_texture_compression_astc_decode_mode',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_compression_astc_decode_mode_rgb9e5' => {
    'glewImpl' => 'GLEW_EXT_texture_compression_astc_decode_mode_rgb9e5',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_compression_bptc' => {
    'glewImpl' => 'GLEW_EXT_texture_compression_bptc',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_compression_dxt1' => {
    'glewImpl' => 'GLEW_EXT_texture_compression_dxt1',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_compression_latc' => {
    'glewImpl' => 'GLEW_EXT_texture_compression_latc',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_compression_rgtc' => {
    'glewImpl' => 'GLEW_EXT_texture_compression_rgtc',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_compression_s3tc' => {
    'glewImpl' => 'GLEW_EXT_texture_compression_s3tc',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_cube_map' => {
    'glewImpl' => 'GLEW_EXT_texture_cube_map',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_cube_map_array' => {
    'glewImpl' => 'GLEW_EXT_texture_cube_map_array',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_edge_clamp' => {
    'glewImpl' => 'GLEW_EXT_texture_edge_clamp',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_env' => {
    'glewImpl' => 'GLEW_EXT_texture_env',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_env_add' => {
    'glewImpl' => 'GLEW_EXT_texture_env_add',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_env_combine' => {
    'glewImpl' => 'GLEW_EXT_texture_env_combine',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_env_dot3' => {
    'glewImpl' => 'GLEW_EXT_texture_env_dot3',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_filter_anisotropic' => {
    'glewImpl' => 'GLEW_EXT_texture_filter_anisotropic',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_filter_minmax' => {
    'glewImpl' => 'GLEW_EXT_texture_filter_minmax',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_format_BGRA8888' => {
    'glewImpl' => 'GLEW_EXT_texture_format_BGRA8888',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_integer' => {
    'glewImpl' => 'GLEW_EXT_texture_integer',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_lod_bias' => {
    'glewImpl' => 'GLEW_EXT_texture_lod_bias',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_mirror_clamp' => {
    'glewImpl' => 'GLEW_EXT_texture_mirror_clamp',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_norm16' => {
    'glewImpl' => 'GLEW_EXT_texture_norm16',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_object' => {
    'glewImpl' => 'GLEW_EXT_texture_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_perturb_normal' => {
    'glewImpl' => 'GLEW_EXT_texture_perturb_normal',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_rectangle' => {
    'glewImpl' => 'GLEW_EXT_texture_rectangle',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_rg' => {
    'glewImpl' => 'GLEW_EXT_texture_rg',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_sRGB' => {
    'glewImpl' => 'GLEW_EXT_texture_sRGB',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_sRGB_R8' => {
    'glewImpl' => 'GLEW_EXT_texture_sRGB_R8',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_sRGB_RG8' => {
    'glewImpl' => 'GLEW_EXT_texture_sRGB_RG8',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_sRGB_decode' => {
    'glewImpl' => 'GLEW_EXT_texture_sRGB_decode',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_shared_exponent' => {
    'glewImpl' => 'GLEW_EXT_texture_shared_exponent',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_snorm' => {
    'glewImpl' => 'GLEW_EXT_texture_snorm',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_storage' => {
    'glewImpl' => 'GLEW_EXT_texture_storage',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_swizzle' => {
    'glewImpl' => 'GLEW_EXT_texture_swizzle',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_type_2_10_10_10_REV' => {
    'glewImpl' => 'GLEW_EXT_texture_type_2_10_10_10_REV',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_texture_view' => {
    'glewImpl' => 'GLEW_EXT_texture_view',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_timer_query' => {
    'glewImpl' => 'GLEW_EXT_timer_query',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_transform_feedback' => {
    'glewImpl' => 'GLEW_EXT_transform_feedback',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_unpack_subimage' => {
    'glewImpl' => 'GLEW_EXT_unpack_subimage',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_vertex_array' => {
    'glewImpl' => 'GLEW_EXT_vertex_array',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_vertex_array_bgra' => {
    'glewImpl' => 'GLEW_EXT_vertex_array_bgra',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_vertex_array_setXXX' => {
    'glewImpl' => 'GLEW_EXT_vertex_array_setXXX',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_vertex_attrib_64bit' => {
    'glewImpl' => 'GLEW_EXT_vertex_attrib_64bit',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_vertex_shader' => {
    'glewImpl' => 'GLEW_EXT_vertex_shader',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_vertex_weighting' => {
    'glewImpl' => 'GLEW_EXT_vertex_weighting',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_win32_keyed_mutex' => {
    'glewImpl' => 'GLEW_EXT_win32_keyed_mutex',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_window_rectangles' => {
    'glewImpl' => 'GLEW_EXT_window_rectangles',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_EXT_x11_sync_object' => {
    'glewImpl' => 'GLEW_EXT_x11_sync_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_GREMEDY_frame_terminator' => {
    'glewImpl' => 'GLEW_GREMEDY_frame_terminator',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_GREMEDY_string_marker' => {
    'glewImpl' => 'GLEW_GREMEDY_string_marker',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_HP_convolution_border_modes' => {
    'glewImpl' => 'GLEW_HP_convolution_border_modes',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_HP_image_transform' => {
    'glewImpl' => 'GLEW_HP_image_transform',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_HP_occlusion_test' => {
    'glewImpl' => 'GLEW_HP_occlusion_test',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_HP_texture_lighting' => {
    'glewImpl' => 'GLEW_HP_texture_lighting',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_IBM_cull_vertex' => {
    'glewImpl' => 'GLEW_IBM_cull_vertex',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_IBM_multimode_draw_arrays' => {
    'glewImpl' => 'GLEW_IBM_multimode_draw_arrays',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_IBM_rasterpos_clip' => {
    'glewImpl' => 'GLEW_IBM_rasterpos_clip',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_IBM_static_data' => {
    'glewImpl' => 'GLEW_IBM_static_data',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_IBM_texture_mirrored_repeat' => {
    'glewImpl' => 'GLEW_IBM_texture_mirrored_repeat',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_IBM_vertex_array_lists' => {
    'glewImpl' => 'GLEW_IBM_vertex_array_lists',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_INGR_color_clamp' => {
    'glewImpl' => 'GLEW_INGR_color_clamp',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_INGR_interlace_read' => {
    'glewImpl' => 'GLEW_INGR_interlace_read',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_INTEL_conservative_rasterization' => {
    'glewImpl' => 'GLEW_INTEL_conservative_rasterization',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_INTEL_fragment_shader_ordering' => {
    'glewImpl' => 'GLEW_INTEL_fragment_shader_ordering',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_INTEL_framebuffer_CMAA' => {
    'glewImpl' => 'GLEW_INTEL_framebuffer_CMAA',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_INTEL_map_texture' => {
    'glewImpl' => 'GLEW_INTEL_map_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_INTEL_parallel_arrays' => {
    'glewImpl' => 'GLEW_INTEL_parallel_arrays',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_INTEL_performance_query' => {
    'glewImpl' => 'GLEW_INTEL_performance_query',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_INTEL_texture_scissor' => {
    'glewImpl' => 'GLEW_INTEL_texture_scissor',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_KHR_blend_equation_advanced' => {
    'glewImpl' => 'GLEW_KHR_blend_equation_advanced',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_KHR_blend_equation_advanced_coherent' => {
    'glewImpl' => 'GLEW_KHR_blend_equation_advanced_coherent',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_KHR_context_flush_control' => {
    'glewImpl' => 'GLEW_KHR_context_flush_control',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_KHR_debug' => {
    'glewImpl' => 'GLEW_KHR_debug',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_KHR_no_error' => {
    'glewImpl' => 'GLEW_KHR_no_error',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_KHR_parallel_shader_compile' => {
    'glewImpl' => 'GLEW_KHR_parallel_shader_compile',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_KHR_robust_buffer_access_behavior' => {
    'glewImpl' => 'GLEW_KHR_robust_buffer_access_behavior',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_KHR_robustness' => {
    'glewImpl' => 'GLEW_KHR_robustness',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_KHR_texture_compression_astc_hdr' => {
    'glewImpl' => 'GLEW_KHR_texture_compression_astc_hdr',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_KHR_texture_compression_astc_ldr' => {
    'glewImpl' => 'GLEW_KHR_texture_compression_astc_ldr',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_KHR_texture_compression_astc_sliced_3d' => {
    'glewImpl' => 'GLEW_KHR_texture_compression_astc_sliced_3d',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_KTX_buffer_region' => {
    'glewImpl' => 'GLEW_KTX_buffer_region',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_MESAX_texture_stack' => {
    'glewImpl' => 'GLEW_MESAX_texture_stack',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_MESA_pack_invert' => {
    'glewImpl' => 'GLEW_MESA_pack_invert',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_MESA_resize_buffers' => {
    'glewImpl' => 'GLEW_MESA_resize_buffers',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_MESA_shader_integer_functions' => {
    'glewImpl' => 'GLEW_MESA_shader_integer_functions',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_MESA_window_pos' => {
    'glewImpl' => 'GLEW_MESA_window_pos',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_MESA_ycbcr_texture' => {
    'glewImpl' => 'GLEW_MESA_ycbcr_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NVX_blend_equation_advanced_multi_draw_buffers' => {
    'glewImpl' => 'GLEW_NVX_blend_equation_advanced_multi_draw_buffers',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NVX_conditional_render' => {
    'glewImpl' => 'GLEW_NVX_conditional_render',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NVX_gpu_memory_info' => {
    'glewImpl' => 'GLEW_NVX_gpu_memory_info',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NVX_linked_gpu_multicast' => {
    'glewImpl' => 'GLEW_NVX_linked_gpu_multicast',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_3dvision_settings' => {
    'glewImpl' => 'GLEW_NV_3dvision_settings',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_EGL_stream_consumer_external' => {
    'glewImpl' => 'GLEW_NV_EGL_stream_consumer_external',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_alpha_to_coverage_dither_control' => {
    'glewImpl' => 'GLEW_NV_alpha_to_coverage_dither_control',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_bgr' => {
    'glewImpl' => 'GLEW_NV_bgr',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_bindless_multi_draw_indirect' => {
    'glewImpl' => 'GLEW_NV_bindless_multi_draw_indirect',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_bindless_multi_draw_indirect_count' => {
    'glewImpl' => 'GLEW_NV_bindless_multi_draw_indirect_count',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_bindless_texture' => {
    'glewImpl' => 'GLEW_NV_bindless_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_blend_equation_advanced' => {
    'glewImpl' => 'GLEW_NV_blend_equation_advanced',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_blend_equation_advanced_coherent' => {
    'glewImpl' => 'GLEW_NV_blend_equation_advanced_coherent',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_blend_minmax_factor' => {
    'glewImpl' => 'GLEW_NV_blend_minmax_factor',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_blend_square' => {
    'glewImpl' => 'GLEW_NV_blend_square',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_clip_space_w_scaling' => {
    'glewImpl' => 'GLEW_NV_clip_space_w_scaling',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_command_list' => {
    'glewImpl' => 'GLEW_NV_command_list',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_compute_program5' => {
    'glewImpl' => 'GLEW_NV_compute_program5',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_conditional_render' => {
    'glewImpl' => 'GLEW_NV_conditional_render',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_conservative_raster' => {
    'glewImpl' => 'GLEW_NV_conservative_raster',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_conservative_raster_dilate' => {
    'glewImpl' => 'GLEW_NV_conservative_raster_dilate',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_conservative_raster_pre_snap_triangles' => {
    'glewImpl' => 'GLEW_NV_conservative_raster_pre_snap_triangles',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_copy_buffer' => {
    'glewImpl' => 'GLEW_NV_copy_buffer',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_copy_depth_to_color' => {
    'glewImpl' => 'GLEW_NV_copy_depth_to_color',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_copy_image' => {
    'glewImpl' => 'GLEW_NV_copy_image',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_deep_texture3D' => {
    'glewImpl' => 'GLEW_NV_deep_texture3D',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_depth_buffer_float' => {
    'glewImpl' => 'GLEW_NV_depth_buffer_float',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_depth_clamp' => {
    'glewImpl' => 'GLEW_NV_depth_clamp',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_depth_range_unclamped' => {
    'glewImpl' => 'GLEW_NV_depth_range_unclamped',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_draw_buffers' => {
    'glewImpl' => 'GLEW_NV_draw_buffers',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_draw_instanced' => {
    'glewImpl' => 'GLEW_NV_draw_instanced',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_draw_texture' => {
    'glewImpl' => 'GLEW_NV_draw_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_draw_vulkan_image' => {
    'glewImpl' => 'GLEW_NV_draw_vulkan_image',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_evaluators' => {
    'glewImpl' => 'GLEW_NV_evaluators',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_explicit_attrib_location' => {
    'glewImpl' => 'GLEW_NV_explicit_attrib_location',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_explicit_multisample' => {
    'glewImpl' => 'GLEW_NV_explicit_multisample',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_fbo_color_attachments' => {
    'glewImpl' => 'GLEW_NV_fbo_color_attachments',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_fence' => {
    'glewImpl' => 'GLEW_NV_fence',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_fill_rectangle' => {
    'glewImpl' => 'GLEW_NV_fill_rectangle',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_float_buffer' => {
    'glewImpl' => 'GLEW_NV_float_buffer',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_fog_distance' => {
    'glewImpl' => 'GLEW_NV_fog_distance',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_fragment_coverage_to_color' => {
    'glewImpl' => 'GLEW_NV_fragment_coverage_to_color',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_fragment_program' => {
    'glewImpl' => 'GLEW_NV_fragment_program',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_fragment_program2' => {
    'glewImpl' => 'GLEW_NV_fragment_program2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_fragment_program4' => {
    'glewImpl' => 'GLEW_NV_fragment_program4',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_fragment_program_option' => {
    'glewImpl' => 'GLEW_NV_fragment_program_option',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_fragment_shader_interlock' => {
    'glewImpl' => 'GLEW_NV_fragment_shader_interlock',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_framebuffer_blit' => {
    'glewImpl' => 'GLEW_NV_framebuffer_blit',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_framebuffer_mixed_samples' => {
    'glewImpl' => 'GLEW_NV_framebuffer_mixed_samples',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_framebuffer_multisample' => {
    'glewImpl' => 'GLEW_NV_framebuffer_multisample',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_framebuffer_multisample_coverage' => {
    'glewImpl' => 'GLEW_NV_framebuffer_multisample_coverage',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_generate_mipmap_sRGB' => {
    'glewImpl' => 'GLEW_NV_generate_mipmap_sRGB',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_geometry_program4' => {
    'glewImpl' => 'GLEW_NV_geometry_program4',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_geometry_shader4' => {
    'glewImpl' => 'GLEW_NV_geometry_shader4',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_geometry_shader_passthrough' => {
    'glewImpl' => 'GLEW_NV_geometry_shader_passthrough',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_gpu_multicast' => {
    'glewImpl' => 'GLEW_NV_gpu_multicast',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_gpu_program4' => {
    'glewImpl' => 'GLEW_NV_gpu_program4',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_gpu_program5' => {
    'glewImpl' => 'GLEW_NV_gpu_program5',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_gpu_program5_mem_extended' => {
    'glewImpl' => 'GLEW_NV_gpu_program5_mem_extended',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_gpu_program_fp64' => {
    'glewImpl' => 'GLEW_NV_gpu_program_fp64',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_gpu_shader5' => {
    'glewImpl' => 'GLEW_NV_gpu_shader5',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_half_float' => {
    'glewImpl' => 'GLEW_NV_half_float',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_image_formats' => {
    'glewImpl' => 'GLEW_NV_image_formats',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_instanced_arrays' => {
    'glewImpl' => 'GLEW_NV_instanced_arrays',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_internalformat_sample_query' => {
    'glewImpl' => 'GLEW_NV_internalformat_sample_query',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_light_max_exponent' => {
    'glewImpl' => 'GLEW_NV_light_max_exponent',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_multisample_coverage' => {
    'glewImpl' => 'GLEW_NV_multisample_coverage',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_multisample_filter_hint' => {
    'glewImpl' => 'GLEW_NV_multisample_filter_hint',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_non_square_matrices' => {
    'glewImpl' => 'GLEW_NV_non_square_matrices',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_occlusion_query' => {
    'glewImpl' => 'GLEW_NV_occlusion_query',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_pack_subimage' => {
    'glewImpl' => 'GLEW_NV_pack_subimage',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_packed_depth_stencil' => {
    'glewImpl' => 'GLEW_NV_packed_depth_stencil',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_packed_float' => {
    'glewImpl' => 'GLEW_NV_packed_float',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_packed_float_linear' => {
    'glewImpl' => 'GLEW_NV_packed_float_linear',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_parameter_buffer_object' => {
    'glewImpl' => 'GLEW_NV_parameter_buffer_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_parameter_buffer_object2' => {
    'glewImpl' => 'GLEW_NV_parameter_buffer_object2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_path_rendering' => {
    'glewImpl' => 'GLEW_NV_path_rendering',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_path_rendering_shared_edge' => {
    'glewImpl' => 'GLEW_NV_path_rendering_shared_edge',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_pixel_buffer_object' => {
    'glewImpl' => 'GLEW_NV_pixel_buffer_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_pixel_data_range' => {
    'glewImpl' => 'GLEW_NV_pixel_data_range',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_platform_binary' => {
    'glewImpl' => 'GLEW_NV_platform_binary',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_point_sprite' => {
    'glewImpl' => 'GLEW_NV_point_sprite',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_polygon_mode' => {
    'glewImpl' => 'GLEW_NV_polygon_mode',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_present_video' => {
    'glewImpl' => 'GLEW_NV_present_video',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_primitive_restart' => {
    'glewImpl' => 'GLEW_NV_primitive_restart',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_read_depth' => {
    'glewImpl' => 'GLEW_NV_read_depth',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_read_depth_stencil' => {
    'glewImpl' => 'GLEW_NV_read_depth_stencil',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_read_stencil' => {
    'glewImpl' => 'GLEW_NV_read_stencil',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_register_combiners' => {
    'glewImpl' => 'GLEW_NV_register_combiners',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_register_combiners2' => {
    'glewImpl' => 'GLEW_NV_register_combiners2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_robustness_video_memory_purge' => {
    'glewImpl' => 'GLEW_NV_robustness_video_memory_purge',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_sRGB_formats' => {
    'glewImpl' => 'GLEW_NV_sRGB_formats',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_sample_locations' => {
    'glewImpl' => 'GLEW_NV_sample_locations',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_sample_mask_override_coverage' => {
    'glewImpl' => 'GLEW_NV_sample_mask_override_coverage',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_shader_atomic_counters' => {
    'glewImpl' => 'GLEW_NV_shader_atomic_counters',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_shader_atomic_float' => {
    'glewImpl' => 'GLEW_NV_shader_atomic_float',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_shader_atomic_float64' => {
    'glewImpl' => 'GLEW_NV_shader_atomic_float64',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_shader_atomic_fp16_vector' => {
    'glewImpl' => 'GLEW_NV_shader_atomic_fp16_vector',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_shader_atomic_int64' => {
    'glewImpl' => 'GLEW_NV_shader_atomic_int64',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_shader_buffer_load' => {
    'glewImpl' => 'GLEW_NV_shader_buffer_load',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_shader_noperspective_interpolation' => {
    'glewImpl' => 'GLEW_NV_shader_noperspective_interpolation',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_shader_storage_buffer_object' => {
    'glewImpl' => 'GLEW_NV_shader_storage_buffer_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_shader_thread_group' => {
    'glewImpl' => 'GLEW_NV_shader_thread_group',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_shader_thread_shuffle' => {
    'glewImpl' => 'GLEW_NV_shader_thread_shuffle',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_shadow_samplers_array' => {
    'glewImpl' => 'GLEW_NV_shadow_samplers_array',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_shadow_samplers_cube' => {
    'glewImpl' => 'GLEW_NV_shadow_samplers_cube',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_stereo_view_rendering' => {
    'glewImpl' => 'GLEW_NV_stereo_view_rendering',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_tessellation_program5' => {
    'glewImpl' => 'GLEW_NV_tessellation_program5',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_texgen_emboss' => {
    'glewImpl' => 'GLEW_NV_texgen_emboss',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_texgen_reflection' => {
    'glewImpl' => 'GLEW_NV_texgen_reflection',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_texture_array' => {
    'glewImpl' => 'GLEW_NV_texture_array',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_texture_barrier' => {
    'glewImpl' => 'GLEW_NV_texture_barrier',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_texture_border_clamp' => {
    'glewImpl' => 'GLEW_NV_texture_border_clamp',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_texture_compression_latc' => {
    'glewImpl' => 'GLEW_NV_texture_compression_latc',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_texture_compression_s3tc' => {
    'glewImpl' => 'GLEW_NV_texture_compression_s3tc',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_texture_compression_s3tc_update' => {
    'glewImpl' => 'GLEW_NV_texture_compression_s3tc_update',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_texture_compression_vtc' => {
    'glewImpl' => 'GLEW_NV_texture_compression_vtc',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_texture_env_combine4' => {
    'glewImpl' => 'GLEW_NV_texture_env_combine4',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_texture_expand_normal' => {
    'glewImpl' => 'GLEW_NV_texture_expand_normal',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_texture_multisample' => {
    'glewImpl' => 'GLEW_NV_texture_multisample',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_texture_npot_2D_mipmap' => {
    'glewImpl' => 'GLEW_NV_texture_npot_2D_mipmap',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_texture_rectangle' => {
    'glewImpl' => 'GLEW_NV_texture_rectangle',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_texture_rectangle_compressed' => {
    'glewImpl' => 'GLEW_NV_texture_rectangle_compressed',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_texture_shader' => {
    'glewImpl' => 'GLEW_NV_texture_shader',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_texture_shader2' => {
    'glewImpl' => 'GLEW_NV_texture_shader2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_texture_shader3' => {
    'glewImpl' => 'GLEW_NV_texture_shader3',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_transform_feedback' => {
    'glewImpl' => 'GLEW_NV_transform_feedback',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_transform_feedback2' => {
    'glewImpl' => 'GLEW_NV_transform_feedback2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_uniform_buffer_unified_memory' => {
    'glewImpl' => 'GLEW_NV_uniform_buffer_unified_memory',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_vdpau_interop' => {
    'glewImpl' => 'GLEW_NV_vdpau_interop',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_vertex_array_range' => {
    'glewImpl' => 'GLEW_NV_vertex_array_range',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_vertex_array_range2' => {
    'glewImpl' => 'GLEW_NV_vertex_array_range2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_vertex_attrib_integer_64bit' => {
    'glewImpl' => 'GLEW_NV_vertex_attrib_integer_64bit',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_vertex_buffer_unified_memory' => {
    'glewImpl' => 'GLEW_NV_vertex_buffer_unified_memory',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_vertex_program' => {
    'glewImpl' => 'GLEW_NV_vertex_program',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_vertex_program1_1' => {
    'glewImpl' => 'GLEW_NV_vertex_program1_1',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_vertex_program2' => {
    'glewImpl' => 'GLEW_NV_vertex_program2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_vertex_program2_option' => {
    'glewImpl' => 'GLEW_NV_vertex_program2_option',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_vertex_program3' => {
    'glewImpl' => 'GLEW_NV_vertex_program3',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_vertex_program4' => {
    'glewImpl' => 'GLEW_NV_vertex_program4',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_video_capture' => {
    'glewImpl' => 'GLEW_NV_video_capture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_viewport_array' => {
    'glewImpl' => 'GLEW_NV_viewport_array',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_viewport_array2' => {
    'glewImpl' => 'GLEW_NV_viewport_array2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_NV_viewport_swizzle' => {
    'glewImpl' => 'GLEW_NV_viewport_swizzle',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_OES_byte_coordinates' => {
    'glewImpl' => 'GLEW_OES_byte_coordinates',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_OML_interlace' => {
    'glewImpl' => 'GLEW_OML_interlace',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_OML_resample' => {
    'glewImpl' => 'GLEW_OML_resample',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_OML_subsample' => {
    'glewImpl' => 'GLEW_OML_subsample',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_OVR_multiview' => {
    'glewImpl' => 'GLEW_OVR_multiview',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_OVR_multiview2' => {
    'glewImpl' => 'GLEW_OVR_multiview2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_OVR_multiview_multisampled_render_to_texture' => {
    'glewImpl' => 'GLEW_OVR_multiview_multisampled_render_to_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_PGI_misc_hints' => {
    'glewImpl' => 'GLEW_PGI_misc_hints',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_PGI_vertex_hints' => {
    'glewImpl' => 'GLEW_PGI_vertex_hints',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_QCOM_alpha_test' => {
    'glewImpl' => 'GLEW_QCOM_alpha_test',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_QCOM_binning_control' => {
    'glewImpl' => 'GLEW_QCOM_binning_control',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_QCOM_driver_control' => {
    'glewImpl' => 'GLEW_QCOM_driver_control',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_QCOM_extended_get' => {
    'glewImpl' => 'GLEW_QCOM_extended_get',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_QCOM_extended_get2' => {
    'glewImpl' => 'GLEW_QCOM_extended_get2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_QCOM_framebuffer_foveated' => {
    'glewImpl' => 'GLEW_QCOM_framebuffer_foveated',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_QCOM_perfmon_global_mode' => {
    'glewImpl' => 'GLEW_QCOM_perfmon_global_mode',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_QCOM_shader_framebuffer_fetch_noncoherent' => {
    'glewImpl' => 'GLEW_QCOM_shader_framebuffer_fetch_noncoherent',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_QCOM_tiled_rendering' => {
    'glewImpl' => 'GLEW_QCOM_tiled_rendering',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_QCOM_writeonly_rendering' => {
    'glewImpl' => 'GLEW_QCOM_writeonly_rendering',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_REGAL_ES1_0_compatibility' => {
    'glewImpl' => 'GLEW_REGAL_ES1_0_compatibility',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_REGAL_ES1_1_compatibility' => {
    'glewImpl' => 'GLEW_REGAL_ES1_1_compatibility',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_REGAL_enable' => {
    'glewImpl' => 'GLEW_REGAL_enable',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_REGAL_error_string' => {
    'glewImpl' => 'GLEW_REGAL_error_string',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_REGAL_extension_query' => {
    'glewImpl' => 'GLEW_REGAL_extension_query',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_REGAL_log' => {
    'glewImpl' => 'GLEW_REGAL_log',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_REGAL_proc_address' => {
    'glewImpl' => 'GLEW_REGAL_proc_address',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_REND_screen_coordinates' => {
    'glewImpl' => 'GLEW_REND_screen_coordinates',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_S3_s3tc' => {
    'glewImpl' => 'GLEW_S3_s3tc',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIS_clip_band_hint' => {
    'glewImpl' => 'GLEW_SGIS_clip_band_hint',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIS_color_range' => {
    'glewImpl' => 'GLEW_SGIS_color_range',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIS_detail_texture' => {
    'glewImpl' => 'GLEW_SGIS_detail_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIS_fog_function' => {
    'glewImpl' => 'GLEW_SGIS_fog_function',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIS_generate_mipmap' => {
    'glewImpl' => 'GLEW_SGIS_generate_mipmap',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIS_line_texgen' => {
    'glewImpl' => 'GLEW_SGIS_line_texgen',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIS_multisample' => {
    'glewImpl' => 'GLEW_SGIS_multisample',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIS_multitexture' => {
    'glewImpl' => 'GLEW_SGIS_multitexture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIS_pixel_texture' => {
    'glewImpl' => 'GLEW_SGIS_pixel_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIS_point_line_texgen' => {
    'glewImpl' => 'GLEW_SGIS_point_line_texgen',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIS_shared_multisample' => {
    'glewImpl' => 'GLEW_SGIS_shared_multisample',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIS_sharpen_texture' => {
    'glewImpl' => 'GLEW_SGIS_sharpen_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIS_texture4D' => {
    'glewImpl' => 'GLEW_SGIS_texture4D',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIS_texture_border_clamp' => {
    'glewImpl' => 'GLEW_SGIS_texture_border_clamp',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIS_texture_edge_clamp' => {
    'glewImpl' => 'GLEW_SGIS_texture_edge_clamp',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIS_texture_filter4' => {
    'glewImpl' => 'GLEW_SGIS_texture_filter4',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIS_texture_lod' => {
    'glewImpl' => 'GLEW_SGIS_texture_lod',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIS_texture_select' => {
    'glewImpl' => 'GLEW_SGIS_texture_select',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_async' => {
    'glewImpl' => 'GLEW_SGIX_async',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_async_histogram' => {
    'glewImpl' => 'GLEW_SGIX_async_histogram',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_async_pixel' => {
    'glewImpl' => 'GLEW_SGIX_async_pixel',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_bali_g_instruments' => {
    'glewImpl' => 'GLEW_SGIX_bali_g_instruments',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_bali_r_instruments' => {
    'glewImpl' => 'GLEW_SGIX_bali_r_instruments',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_bali_timer_instruments' => {
    'glewImpl' => 'GLEW_SGIX_bali_timer_instruments',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_blend_alpha_minmax' => {
    'glewImpl' => 'GLEW_SGIX_blend_alpha_minmax',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_blend_cadd' => {
    'glewImpl' => 'GLEW_SGIX_blend_cadd',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_blend_cmultiply' => {
    'glewImpl' => 'GLEW_SGIX_blend_cmultiply',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_calligraphic_fragment' => {
    'glewImpl' => 'GLEW_SGIX_calligraphic_fragment',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_clipmap' => {
    'glewImpl' => 'GLEW_SGIX_clipmap',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_color_matrix_accuracy' => {
    'glewImpl' => 'GLEW_SGIX_color_matrix_accuracy',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_color_table_index_mode' => {
    'glewImpl' => 'GLEW_SGIX_color_table_index_mode',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_complex_polar' => {
    'glewImpl' => 'GLEW_SGIX_complex_polar',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_convolution_accuracy' => {
    'glewImpl' => 'GLEW_SGIX_convolution_accuracy',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_cube_map' => {
    'glewImpl' => 'GLEW_SGIX_cube_map',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_cylinder_texgen' => {
    'glewImpl' => 'GLEW_SGIX_cylinder_texgen',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_datapipe' => {
    'glewImpl' => 'GLEW_SGIX_datapipe',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_decimation' => {
    'glewImpl' => 'GLEW_SGIX_decimation',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_depth_pass_instrument' => {
    'glewImpl' => 'GLEW_SGIX_depth_pass_instrument',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_depth_texture' => {
    'glewImpl' => 'GLEW_SGIX_depth_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_dvc' => {
    'glewImpl' => 'GLEW_SGIX_dvc',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_flush_raster' => {
    'glewImpl' => 'GLEW_SGIX_flush_raster',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_fog_blend' => {
    'glewImpl' => 'GLEW_SGIX_fog_blend',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_fog_factor_to_alpha' => {
    'glewImpl' => 'GLEW_SGIX_fog_factor_to_alpha',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_fog_layers' => {
    'glewImpl' => 'GLEW_SGIX_fog_layers',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_fog_offset' => {
    'glewImpl' => 'GLEW_SGIX_fog_offset',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_fog_patchy' => {
    'glewImpl' => 'GLEW_SGIX_fog_patchy',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_fog_scale' => {
    'glewImpl' => 'GLEW_SGIX_fog_scale',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_fog_texture' => {
    'glewImpl' => 'GLEW_SGIX_fog_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_fragment_lighting_space' => {
    'glewImpl' => 'GLEW_SGIX_fragment_lighting_space',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_fragment_specular_lighting' => {
    'glewImpl' => 'GLEW_SGIX_fragment_specular_lighting',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_fragments_instrument' => {
    'glewImpl' => 'GLEW_SGIX_fragments_instrument',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_framezoom' => {
    'glewImpl' => 'GLEW_SGIX_framezoom',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_icc_texture' => {
    'glewImpl' => 'GLEW_SGIX_icc_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_igloo_interface' => {
    'glewImpl' => 'GLEW_SGIX_igloo_interface',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_image_compression' => {
    'glewImpl' => 'GLEW_SGIX_image_compression',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_impact_pixel_texture' => {
    'glewImpl' => 'GLEW_SGIX_impact_pixel_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_instrument_error' => {
    'glewImpl' => 'GLEW_SGIX_instrument_error',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_interlace' => {
    'glewImpl' => 'GLEW_SGIX_interlace',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_ir_instrument1' => {
    'glewImpl' => 'GLEW_SGIX_ir_instrument1',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_line_quality_hint' => {
    'glewImpl' => 'GLEW_SGIX_line_quality_hint',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_list_priority' => {
    'glewImpl' => 'GLEW_SGIX_list_priority',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_mpeg1' => {
    'glewImpl' => 'GLEW_SGIX_mpeg1',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_mpeg2' => {
    'glewImpl' => 'GLEW_SGIX_mpeg2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_nonlinear_lighting_pervertex' => {
    'glewImpl' => 'GLEW_SGIX_nonlinear_lighting_pervertex',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_nurbs_eval' => {
    'glewImpl' => 'GLEW_SGIX_nurbs_eval',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_occlusion_instrument' => {
    'glewImpl' => 'GLEW_SGIX_occlusion_instrument',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_packed_6bytes' => {
    'glewImpl' => 'GLEW_SGIX_packed_6bytes',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_pixel_texture' => {
    'glewImpl' => 'GLEW_SGIX_pixel_texture',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_pixel_texture_bits' => {
    'glewImpl' => 'GLEW_SGIX_pixel_texture_bits',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_pixel_texture_lod' => {
    'glewImpl' => 'GLEW_SGIX_pixel_texture_lod',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_pixel_tiles' => {
    'glewImpl' => 'GLEW_SGIX_pixel_tiles',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_polynomial_ffd' => {
    'glewImpl' => 'GLEW_SGIX_polynomial_ffd',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_quad_mesh' => {
    'glewImpl' => 'GLEW_SGIX_quad_mesh',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_reference_plane' => {
    'glewImpl' => 'GLEW_SGIX_reference_plane',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_resample' => {
    'glewImpl' => 'GLEW_SGIX_resample',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_scalebias_hint' => {
    'glewImpl' => 'GLEW_SGIX_scalebias_hint',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_shadow' => {
    'glewImpl' => 'GLEW_SGIX_shadow',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_shadow_ambient' => {
    'glewImpl' => 'GLEW_SGIX_shadow_ambient',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_slim' => {
    'glewImpl' => 'GLEW_SGIX_slim',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_spotlight_cutoff' => {
    'glewImpl' => 'GLEW_SGIX_spotlight_cutoff',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_sprite' => {
    'glewImpl' => 'GLEW_SGIX_sprite',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_subdiv_patch' => {
    'glewImpl' => 'GLEW_SGIX_subdiv_patch',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_subsample' => {
    'glewImpl' => 'GLEW_SGIX_subsample',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_tag_sample_buffer' => {
    'glewImpl' => 'GLEW_SGIX_tag_sample_buffer',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_texture_add_env' => {
    'glewImpl' => 'GLEW_SGIX_texture_add_env',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_texture_coordinate_clamp' => {
    'glewImpl' => 'GLEW_SGIX_texture_coordinate_clamp',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_texture_lod_bias' => {
    'glewImpl' => 'GLEW_SGIX_texture_lod_bias',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_texture_mipmap_anisotropic' => {
    'glewImpl' => 'GLEW_SGIX_texture_mipmap_anisotropic',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_texture_multi_buffer' => {
    'glewImpl' => 'GLEW_SGIX_texture_multi_buffer',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_texture_phase' => {
    'glewImpl' => 'GLEW_SGIX_texture_phase',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_texture_range' => {
    'glewImpl' => 'GLEW_SGIX_texture_range',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_texture_scale_bias' => {
    'glewImpl' => 'GLEW_SGIX_texture_scale_bias',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_texture_supersample' => {
    'glewImpl' => 'GLEW_SGIX_texture_supersample',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_vector_ops' => {
    'glewImpl' => 'GLEW_SGIX_vector_ops',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_vertex_array_object' => {
    'glewImpl' => 'GLEW_SGIX_vertex_array_object',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_vertex_preclip' => {
    'glewImpl' => 'GLEW_SGIX_vertex_preclip',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_vertex_preclip_hint' => {
    'glewImpl' => 'GLEW_SGIX_vertex_preclip_hint',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_ycrcb' => {
    'glewImpl' => 'GLEW_SGIX_ycrcb',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_ycrcb_subsample' => {
    'glewImpl' => 'GLEW_SGIX_ycrcb_subsample',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGIX_ycrcba' => {
    'glewImpl' => 'GLEW_SGIX_ycrcba',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGI_color_matrix' => {
    'glewImpl' => 'GLEW_SGI_color_matrix',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGI_color_table' => {
    'glewImpl' => 'GLEW_SGI_color_table',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGI_complex' => {
    'glewImpl' => 'GLEW_SGI_complex',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGI_complex_type' => {
    'glewImpl' => 'GLEW_SGI_complex_type',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGI_fft' => {
    'glewImpl' => 'GLEW_SGI_fft',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SGI_texture_color_table' => {
    'glewImpl' => 'GLEW_SGI_texture_color_table',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SUNX_constant_data' => {
    'glewImpl' => 'GLEW_SUNX_constant_data',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SUN_convolution_border_modes' => {
    'glewImpl' => 'GLEW_SUN_convolution_border_modes',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SUN_global_alpha' => {
    'glewImpl' => 'GLEW_SUN_global_alpha',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SUN_mesh_array' => {
    'glewImpl' => 'GLEW_SUN_mesh_array',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SUN_read_video_pixels' => {
    'glewImpl' => 'GLEW_SUN_read_video_pixels',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SUN_slice_accum' => {
    'glewImpl' => 'GLEW_SUN_slice_accum',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SUN_triangle_list' => {
    'glewImpl' => 'GLEW_SUN_triangle_list',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_SUN_vertex' => {
    'glewImpl' => 'GLEW_SUN_vertex',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_VERSION_1_1' => {
    'glewImpl' => 'GLEW_VERSION_1_1',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_VERSION_1_2' => {
    'glewImpl' => 'GLEW_VERSION_1_2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_VERSION_1_2_1' => {
    'glewImpl' => 'GLEW_VERSION_1_2_1',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_VERSION_1_3' => {
    'glewImpl' => 'GLEW_VERSION_1_3',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_VERSION_1_4' => {
    'glewImpl' => 'GLEW_VERSION_1_4',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_VERSION_1_5' => {
    'glewImpl' => 'GLEW_VERSION_1_5',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_VERSION_2_0' => {
    'glewImpl' => 'GLEW_VERSION_2_0',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_VERSION_2_1' => {
    'glewImpl' => 'GLEW_VERSION_2_1',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_VERSION_3_0' => {
    'glewImpl' => 'GLEW_VERSION_3_0',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_VERSION_3_1' => {
    'glewImpl' => 'GLEW_VERSION_3_1',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_VERSION_3_2' => {
    'glewImpl' => 'GLEW_VERSION_3_2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_VERSION_3_3' => {
    'glewImpl' => 'GLEW_VERSION_3_3',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_VERSION_4_0' => {
    'glewImpl' => 'GLEW_VERSION_4_0',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_VERSION_4_1' => {
    'glewImpl' => 'GLEW_VERSION_4_1',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_VERSION_4_2' => {
    'glewImpl' => 'GLEW_VERSION_4_2',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_VERSION_4_3' => {
    'glewImpl' => 'GLEW_VERSION_4_3',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_VERSION_4_4' => {
    'glewImpl' => 'GLEW_VERSION_4_4',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_VERSION_4_5' => {
    'glewImpl' => 'GLEW_VERSION_4_5',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_VERSION_4_6' => {
    'glewImpl' => 'GLEW_VERSION_4_6',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_WIN_phong_shading' => {
    'glewImpl' => 'GLEW_WIN_phong_shading',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_WIN_scene_markerXXX' => {
    'glewImpl' => 'GLEW_WIN_scene_markerXXX',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_WIN_specular_fog' => {
    'glewImpl' => 'GLEW_WIN_specular_fog',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'GLEW_WIN_swap_hint' => {
    'glewImpl' => 'GLEW_WIN_swap_hint',
    'glewtype' => 'var',
    'restype' => 'GLboolean'
  },
  'glAccum' => {
    'argdata' => [
      [
        'op',
        'GLenum '
      ],
      [
        'value',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glAcquireKeyedMutexWin32EXT' => {
    'argdata' => [
      [
        'memory',
        'GLuint '
      ],
      [
        'key',
        'GLuint64 '
      ],
      [
        'timeout',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_win32_keyed_mutex',
    'glewImpl' => '__glewAcquireKeyedMutexWin32EXT',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glActiveProgramEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_separate_shader_objects',
    'glewImpl' => '__glewActiveProgramEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glActiveShaderProgram' => {
    'argdata' => [
      [
        'pipeline',
        'GLuint '
      ],
      [
        'program',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewActiveShaderProgram',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glActiveStencilFaceEXT' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_stencil_two_side',
    'glewImpl' => '__glewActiveStencilFaceEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glActiveTexture' => {
    'argdata' => [
      [
        'texture',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewActiveTexture',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glActiveTextureARB' => {
    'argdata' => [
      [
        'texture',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewActiveTextureARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glActiveVaryingNV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'name',
        'const GLchar *'
      ]
    ],
    'binding_name' => 'glActiveVaryingNV_c',
    'feature' => 'GL_NV_transform_feedback',
    'glewImpl' => '__glewActiveVaryingNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glAddSwapHintRectWIN' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_WIN_swap_hint',
    'glewImpl' => '__glewAddSwapHintRectWIN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glAddressSpace' => {
    'argdata' => [
      [
        'space',
        'GLenum '
      ],
      [
        'mask',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_SGIX_datapipe',
    'glewImpl' => '__glewAddressSpace',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glAllocMPEGPredictorsSGIX' => {
    'argdata' => [
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'predictors',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glAllocMPEGPredictorsSGIX_c',
    'feature' => 'GL_SGIX_mpeg1',
    'glewImpl' => '__glewAllocMPEGPredictorsSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glAlphaFragmentOp1ATI' => {
    'argdata' => [
      [
        'op',
        'GLenum '
      ],
      [
        'dst',
        'GLuint '
      ],
      [
        'dstMod',
        'GLuint '
      ],
      [
        'arg1',
        'GLuint '
      ],
      [
        'arg1Rep',
        'GLuint '
      ],
      [
        'arg1Mod',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ATI_fragment_shader',
    'glewImpl' => '__glewAlphaFragmentOp1ATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glAlphaFragmentOp2ATI' => {
    'argdata' => [
      [
        'op',
        'GLenum '
      ],
      [
        'dst',
        'GLuint '
      ],
      [
        'dstMod',
        'GLuint '
      ],
      [
        'arg1',
        'GLuint '
      ],
      [
        'arg1Rep',
        'GLuint '
      ],
      [
        'arg1Mod',
        'GLuint '
      ],
      [
        'arg2',
        'GLuint '
      ],
      [
        'arg2Rep',
        'GLuint '
      ],
      [
        'arg2Mod',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ATI_fragment_shader',
    'glewImpl' => '__glewAlphaFragmentOp2ATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glAlphaFragmentOp3ATI' => {
    'argdata' => [
      [
        'op',
        'GLenum '
      ],
      [
        'dst',
        'GLuint '
      ],
      [
        'dstMod',
        'GLuint '
      ],
      [
        'arg1',
        'GLuint '
      ],
      [
        'arg1Rep',
        'GLuint '
      ],
      [
        'arg1Mod',
        'GLuint '
      ],
      [
        'arg2',
        'GLuint '
      ],
      [
        'arg2Rep',
        'GLuint '
      ],
      [
        'arg2Mod',
        'GLuint '
      ],
      [
        'arg3',
        'GLuint '
      ],
      [
        'arg3Rep',
        'GLuint '
      ],
      [
        'arg3Mod',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ATI_fragment_shader',
    'glewImpl' => '__glewAlphaFragmentOp3ATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glAlphaFunc' => {
    'argdata' => [
      [
        'func',
        'GLenum '
      ],
      [
        'ref',
        'GLclampf '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glAlphaFuncQCOM' => {
    'argdata' => [
      [
        'func',
        'GLenum '
      ],
      [
        'ref',
        'GLclampf '
      ]
    ],
    'feature' => 'GL_QCOM_alpha_test',
    'glewImpl' => '__glewAlphaFuncQCOM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glAlphaFuncx' => {
    'argdata' => [
      [
        'func',
        'GLenum '
      ],
      [
        'ref',
        'GLclampx '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewAlphaFuncx',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glApplyTextureEXT' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_light_texture',
    'glewImpl' => '__glewApplyTextureEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glAreProgramsResidentNV' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'ids',
        'const GLuint* '
      ],
      [
        'residences',
        'GLboolean *'
      ]
    ],
    'binding_name' => 'glAreProgramsResidentNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewAreProgramsResidentNV',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glAreTexturesResident' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'textures',
        'const GLuint *'
      ],
      [
        'residences',
        'GLboolean *'
      ]
    ],
    'binding_name' => 'glAreTexturesResident_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glAreTexturesResidentEXT' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'textures',
        'const GLuint* '
      ],
      [
        'residences',
        'GLboolean* '
      ]
    ],
    'binding_name' => 'glAreTexturesResidentEXT_c',
    'feature' => 'GL_EXT_texture_object',
    'glewImpl' => '__glewAreTexturesResidentEXT',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glAreVertexArraysResidentSGIX' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'arrays',
        'const GLuint* '
      ],
      [
        'residences',
        'GLboolean* '
      ]
    ],
    'binding_name' => 'glAreVertexArraysResidentSGIX_c',
    'feature' => 'GL_SGIX_vertex_array_object',
    'glewImpl' => '__glewAreVertexArraysResidentSGIX',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glArrayElement' => {
    'argdata' => [
      [
        'i',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glArrayElementEXT' => {
    'argdata' => [
      [
        'i',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_vertex_array',
    'glewImpl' => '__glewArrayElementEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glArrayObjectATI' => {
    'argdata' => [
      [
        'array',
        'GLenum '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ATI_vertex_array_object',
    'glewImpl' => '__glewArrayObjectATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glAsyncMarkerSGIX' => {
    'argdata' => [
      [
        'marker',
        'GLuint '
      ]
    ],
    'feature' => 'GL_SGIX_async',
    'glewImpl' => '__glewAsyncMarkerSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glAttachObjectARB' => {
    'argdata' => [
      [
        'containerObj',
        'GLhandleARB '
      ],
      [
        'obj',
        'GLhandleARB '
      ]
    ],
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewAttachObjectARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glAttachShader' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'shader',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewAttachShader',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBegin' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBeginConditionalRender' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewBeginConditionalRender',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBeginConditionalRenderNV' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_conditional_render',
    'glewImpl' => '__glewBeginConditionalRenderNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBeginConditionalRenderNVX' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NVX_conditional_render',
    'glewImpl' => '__glewBeginConditionalRenderNVX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBeginFragmentShaderATI' => {
    'feature' => 'GL_ATI_fragment_shader',
    'glewImpl' => '__glewBeginFragmentShaderATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBeginOcclusionQueryNV' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_occlusion_query',
    'glewImpl' => '__glewBeginOcclusionQueryNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBeginPerfMonitorAMD' => {
    'argdata' => [
      [
        'monitor',
        'GLuint '
      ]
    ],
    'feature' => 'GL_AMD_performance_monitor',
    'glewImpl' => '__glewBeginPerfMonitorAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBeginPerfQueryINTEL' => {
    'argdata' => [
      [
        'queryHandle',
        'GLuint '
      ]
    ],
    'feature' => 'GL_INTEL_performance_query',
    'glewImpl' => '__glewBeginPerfQueryINTEL',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBeginQuery' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_1_5',
    'glewImpl' => '__glewBeginQuery',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBeginQueryANGLE' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ANGLE_timer_query',
    'glewImpl' => '__glewBeginQueryANGLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBeginQueryARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_occlusion_query',
    'glewImpl' => '__glewBeginQueryARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBeginQueryIndexed' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_transform_feedback3',
    'glewImpl' => '__glewBeginQueryIndexed',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBeginSceneEXT' => {
    'feature' => 'GL_EXT_scene_marker',
    'glewImpl' => '__glewBeginSceneEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBeginTransformFeedback' => {
    'argdata' => [
      [
        'primitiveMode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewBeginTransformFeedback',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBeginTransformFeedbackEXT' => {
    'argdata' => [
      [
        'primitiveMode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_transform_feedback',
    'glewImpl' => '__glewBeginTransformFeedbackEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBeginTransformFeedbackNV' => {
    'argdata' => [
      [
        'primitiveMode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_transform_feedback',
    'glewImpl' => '__glewBeginTransformFeedbackNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBeginVertexShaderEXT' => {
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewBeginVertexShaderEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBeginVideoCaptureNV' => {
    'argdata' => [
      [
        'video_capture_slot',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_video_capture',
    'glewImpl' => '__glewBeginVideoCaptureNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindArraySetEXT' => {
    'argdata' => [
      [
        'arrayset',
        'const void *'
      ]
    ],
    'binding_name' => 'glBindArraySetEXT_c',
    'feature' => 'GL_EXT_vertex_array_setXXX',
    'glewImpl' => '__glewBindArraySetEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindAttribLocation' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'name',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glBindAttribLocation_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewBindAttribLocation',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindAttribLocationARB' => {
    'argdata' => [
      [
        'programObj',
        'GLhandleARB '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'name',
        'const GLcharARB* '
      ]
    ],
    'binding_name' => 'glBindAttribLocationARB_c',
    'feature' => 'GL_ARB_vertex_shader',
    'glewImpl' => '__glewBindAttribLocationARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindBuffer' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_1_5',
    'glewImpl' => '__glewBindBuffer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindBufferARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_buffer_object',
    'glewImpl' => '__glewBindBufferARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindBufferBase' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_uniform_buffer_object',
    'glewImpl' => '__glewBindBufferBase',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindBufferBaseEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_transform_feedback',
    'glewImpl' => '__glewBindBufferBaseEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindBufferBaseNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_transform_feedback',
    'glewImpl' => '__glewBindBufferBaseNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindBufferOffsetEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ]
    ],
    'feature' => 'GL_EXT_transform_feedback',
    'glewImpl' => '__glewBindBufferOffsetEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindBufferOffsetNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ]
    ],
    'feature' => 'GL_NV_transform_feedback',
    'glewImpl' => '__glewBindBufferOffsetNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindBufferRange' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ]
    ],
    'feature' => 'GL_ARB_uniform_buffer_object',
    'glewImpl' => '__glewBindBufferRange',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindBufferRangeEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ]
    ],
    'feature' => 'GL_EXT_transform_feedback',
    'glewImpl' => '__glewBindBufferRangeEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindBufferRangeNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ]
    ],
    'feature' => 'GL_NV_transform_feedback',
    'glewImpl' => '__glewBindBufferRangeNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindBuffersBase' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'first',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'buffers',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glBindBuffersBase_c',
    'feature' => 'GL_ARB_multi_bind',
    'glewImpl' => '__glewBindBuffersBase',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindBuffersRange' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'first',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'buffers',
        'const GLuint* '
      ],
      [
        'offsets',
        'const GLintptr *'
      ],
      [
        'sizes',
        'const GLsizeiptr *'
      ]
    ],
    'binding_name' => 'glBindBuffersRange_c',
    'feature' => 'GL_ARB_multi_bind',
    'glewImpl' => '__glewBindBuffersRange',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindFragDataLocation' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'colorNumber',
        'GLuint '
      ],
      [
        'name',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glBindFragDataLocation_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewBindFragDataLocation',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindFragDataLocationEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'color',
        'GLuint '
      ],
      [
        'name',
        'const GLchar *'
      ]
    ],
    'binding_name' => 'glBindFragDataLocationEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewBindFragDataLocationEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindFragDataLocationIndexed' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'colorNumber',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'name',
        'const GLchar * '
      ]
    ],
    'binding_name' => 'glBindFragDataLocationIndexed_c',
    'feature' => 'GL_ARB_blend_func_extended',
    'glewImpl' => '__glewBindFragDataLocationIndexed',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindFragDataLocationIndexedEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'colorNumber',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'name',
        'const GLchar * '
      ]
    ],
    'binding_name' => 'glBindFragDataLocationIndexedEXT_c',
    'feature' => 'GL_EXT_blend_func_extended',
    'glewImpl' => '__glewBindFragDataLocationIndexedEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindFragmentShaderATI' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ATI_fragment_shader',
    'glewImpl' => '__glewBindFragmentShaderATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindFramebuffer' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'framebuffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_framebuffer_object',
    'glewImpl' => '__glewBindFramebuffer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindFramebufferEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'framebuffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_framebuffer_object',
    'glewImpl' => '__glewBindFramebufferEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindImageTexture' => {
    'argdata' => [
      [
        'unit',
        'GLuint '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'layered',
        'GLboolean '
      ],
      [
        'layer',
        'GLint '
      ],
      [
        'access',
        'GLenum '
      ],
      [
        'format',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_shader_image_load_store',
    'glewImpl' => '__glewBindImageTexture',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindImageTextureEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'layered',
        'GLboolean '
      ],
      [
        'layer',
        'GLint '
      ],
      [
        'access',
        'GLenum '
      ],
      [
        'format',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_shader_image_load_store',
    'glewImpl' => '__glewBindImageTextureEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindImageTextures' => {
    'argdata' => [
      [
        'first',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'textures',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glBindImageTextures_c',
    'feature' => 'GL_ARB_multi_bind',
    'glewImpl' => '__glewBindImageTextures',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindLightParameterEXT' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'value',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewBindLightParameterEXT',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glBindMaterialParameterEXT' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'value',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewBindMaterialParameterEXT',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glBindMultiTextureEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewBindMultiTextureEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindParameterEXT' => {
    'argdata' => [
      [
        'value',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewBindParameterEXT',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glBindProgramARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'program',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewBindProgramARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindProgramNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewBindProgramNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindProgramPipeline' => {
    'argdata' => [
      [
        'pipeline',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewBindProgramPipeline',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindRenderbuffer' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'renderbuffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_framebuffer_object',
    'glewImpl' => '__glewBindRenderbuffer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindRenderbufferEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'renderbuffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_framebuffer_object',
    'glewImpl' => '__glewBindRenderbufferEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindSampler' => {
    'argdata' => [
      [
        'unit',
        'GLuint '
      ],
      [
        'sampler',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_sampler_objects',
    'glewImpl' => '__glewBindSampler',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindSamplers' => {
    'argdata' => [
      [
        'first',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'samplers',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glBindSamplers_c',
    'feature' => 'GL_ARB_multi_bind',
    'glewImpl' => '__glewBindSamplers',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindTexGenParameterEXT' => {
    'argdata' => [
      [
        'unit',
        'GLenum '
      ],
      [
        'coord',
        'GLenum '
      ],
      [
        'value',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewBindTexGenParameterEXT',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glBindTexture' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindTextureEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_texture_object',
    'glewImpl' => '__glewBindTextureEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindTextureUnit' => {
    'argdata' => [
      [
        'unit',
        'GLuint '
      ],
      [
        'texture',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewBindTextureUnit',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindTextureUnitParameterEXT' => {
    'argdata' => [
      [
        'unit',
        'GLenum '
      ],
      [
        'value',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewBindTextureUnitParameterEXT',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glBindTextures' => {
    'argdata' => [
      [
        'first',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'textures',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glBindTextures_c',
    'feature' => 'GL_ARB_multi_bind',
    'glewImpl' => '__glewBindTextures',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindTransformFeedback' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_transform_feedback2',
    'glewImpl' => '__glewBindTransformFeedback',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindTransformFeedbackNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_transform_feedback2',
    'glewImpl' => '__glewBindTransformFeedbackNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindVertexArray' => {
    'argdata' => [
      [
        'array',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_array_object',
    'glewImpl' => '__glewBindVertexArray',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindVertexArrayAPPLE' => {
    'argdata' => [
      [
        'array',
        'GLuint '
      ]
    ],
    'feature' => 'GL_APPLE_vertex_array_object',
    'glewImpl' => '__glewBindVertexArrayAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindVertexArraySGIX' => {
    'argdata' => [
      [
        'array',
        'GLuint '
      ]
    ],
    'feature' => 'GL_SGIX_vertex_array_object',
    'glewImpl' => '__glewBindVertexArraySGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindVertexBuffer' => {
    'argdata' => [
      [
        'bindingindex',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_vertex_attrib_binding',
    'glewImpl' => '__glewBindVertexBuffer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindVertexBuffers' => {
    'argdata' => [
      [
        'first',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'buffers',
        'const GLuint* '
      ],
      [
        'offsets',
        'const GLintptr *'
      ],
      [
        'strides',
        'const GLsizei *'
      ]
    ],
    'binding_name' => 'glBindVertexBuffers_c',
    'feature' => 'GL_ARB_multi_bind',
    'glewImpl' => '__glewBindVertexBuffers',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindVertexShaderEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewBindVertexShaderEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindVideoCaptureStreamBufferNV' => {
    'argdata' => [
      [
        'video_capture_slot',
        'GLuint '
      ],
      [
        'stream',
        'GLuint '
      ],
      [
        'frame_region',
        'GLenum '
      ],
      [
        'offset',
        'GLintptrARB '
      ]
    ],
    'feature' => 'GL_NV_video_capture',
    'glewImpl' => '__glewBindVideoCaptureStreamBufferNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBindVideoCaptureStreamTextureNV' => {
    'argdata' => [
      [
        'video_capture_slot',
        'GLuint '
      ],
      [
        'stream',
        'GLuint '
      ],
      [
        'frame_region',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_video_capture',
    'glewImpl' => '__glewBindVideoCaptureStreamTextureNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBinormalPointerEXT' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'void *'
      ]
    ],
    'binding_name' => 'glBinormalPointerEXT_c',
    'feature' => 'GL_EXT_coordinate_frame',
    'glewImpl' => '__glewBinormalPointerEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBitmap' => {
    'argdata' => [
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'xorig',
        'GLfloat '
      ],
      [
        'yorig',
        'GLfloat '
      ],
      [
        'xmove',
        'GLfloat '
      ],
      [
        'ymove',
        'GLfloat '
      ],
      [
        'bitmap',
        'const GLubyte *'
      ]
    ],
    'binding_name' => 'glBitmap_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendBarrierKHR' => {
    'feature' => 'GL_KHR_blend_equation_advanced',
    'glewImpl' => '__glewBlendBarrierKHR',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendBarrierNV' => {
    'feature' => 'GL_NV_blend_equation_advanced',
    'glewImpl' => '__glewBlendBarrierNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendColor' => {
    'argdata' => [
      [
        'red',
        'GLclampf '
      ],
      [
        'green',
        'GLclampf '
      ],
      [
        'blue',
        'GLclampf '
      ],
      [
        'alpha',
        'GLclampf '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewBlendColor',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendColorEXT' => {
    'argdata' => [
      [
        'red',
        'GLclampf '
      ],
      [
        'green',
        'GLclampf '
      ],
      [
        'blue',
        'GLclampf '
      ],
      [
        'alpha',
        'GLclampf '
      ]
    ],
    'feature' => 'GL_EXT_blend_color',
    'glewImpl' => '__glewBlendColorEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendEquation' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewBlendEquation',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendEquationEXT' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_blend_minmax',
    'glewImpl' => '__glewBlendEquationEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendEquationIndexedAMD' => {
    'argdata' => [
      [
        'buf',
        'GLuint '
      ],
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_AMD_draw_buffers_blend',
    'glewImpl' => '__glewBlendEquationIndexedAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendEquationSeparate' => {
    'argdata' => [
      [
        'modeRGB',
        'GLenum '
      ],
      [
        'modeAlpha',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewBlendEquationSeparate',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendEquationSeparateEXT' => {
    'argdata' => [
      [
        'modeRGB',
        'GLenum '
      ],
      [
        'modeAlpha',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_blend_equation_separate',
    'glewImpl' => '__glewBlendEquationSeparateEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendEquationSeparateIndexedAMD' => {
    'argdata' => [
      [
        'buf',
        'GLuint '
      ],
      [
        'modeRGB',
        'GLenum '
      ],
      [
        'modeAlpha',
        'GLenum '
      ]
    ],
    'feature' => 'GL_AMD_draw_buffers_blend',
    'glewImpl' => '__glewBlendEquationSeparateIndexedAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendEquationSeparatei' => {
    'argdata' => [
      [
        'buf',
        'GLuint '
      ],
      [
        'modeRGB',
        'GLenum '
      ],
      [
        'modeAlpha',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_4_0',
    'glewImpl' => '__glewBlendEquationSeparatei',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendEquationSeparateiARB' => {
    'argdata' => [
      [
        'buf',
        'GLuint '
      ],
      [
        'modeRGB',
        'GLenum '
      ],
      [
        'modeAlpha',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_draw_buffers_blend',
    'glewImpl' => '__glewBlendEquationSeparateiARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendEquationSeparateiEXT' => {
    'argdata' => [
      [
        'buf',
        'GLuint '
      ],
      [
        'modeRGB',
        'GLenum '
      ],
      [
        'modeAlpha',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_draw_buffers_indexed',
    'glewImpl' => '__glewBlendEquationSeparateiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendEquationi' => {
    'argdata' => [
      [
        'buf',
        'GLuint '
      ],
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_4_0',
    'glewImpl' => '__glewBlendEquationi',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendEquationiARB' => {
    'argdata' => [
      [
        'buf',
        'GLuint '
      ],
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_draw_buffers_blend',
    'glewImpl' => '__glewBlendEquationiARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendEquationiEXT' => {
    'argdata' => [
      [
        'buf',
        'GLuint '
      ],
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_draw_buffers_indexed',
    'glewImpl' => '__glewBlendEquationiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendFunc' => {
    'argdata' => [
      [
        'sfactor',
        'GLenum '
      ],
      [
        'dfactor',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendFuncIndexedAMD' => {
    'argdata' => [
      [
        'buf',
        'GLuint '
      ],
      [
        'src',
        'GLenum '
      ],
      [
        'dst',
        'GLenum '
      ]
    ],
    'feature' => 'GL_AMD_draw_buffers_blend',
    'glewImpl' => '__glewBlendFuncIndexedAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendFuncSeparate' => {
    'argdata' => [
      [
        'sfactorRGB',
        'GLenum '
      ],
      [
        'dfactorRGB',
        'GLenum '
      ],
      [
        'sfactorAlpha',
        'GLenum '
      ],
      [
        'dfactorAlpha',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewBlendFuncSeparate',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendFuncSeparateEXT' => {
    'argdata' => [
      [
        'sfactorRGB',
        'GLenum '
      ],
      [
        'dfactorRGB',
        'GLenum '
      ],
      [
        'sfactorAlpha',
        'GLenum '
      ],
      [
        'dfactorAlpha',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_blend_func_separate',
    'glewImpl' => '__glewBlendFuncSeparateEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendFuncSeparateIndexedAMD' => {
    'argdata' => [
      [
        'buf',
        'GLuint '
      ],
      [
        'srcRGB',
        'GLenum '
      ],
      [
        'dstRGB',
        'GLenum '
      ],
      [
        'srcAlpha',
        'GLenum '
      ],
      [
        'dstAlpha',
        'GLenum '
      ]
    ],
    'feature' => 'GL_AMD_draw_buffers_blend',
    'glewImpl' => '__glewBlendFuncSeparateIndexedAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendFuncSeparatei' => {
    'argdata' => [
      [
        'buf',
        'GLuint '
      ],
      [
        'srcRGB',
        'GLenum '
      ],
      [
        'dstRGB',
        'GLenum '
      ],
      [
        'srcAlpha',
        'GLenum '
      ],
      [
        'dstAlpha',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_4_0',
    'glewImpl' => '__glewBlendFuncSeparatei',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendFuncSeparateiARB' => {
    'argdata' => [
      [
        'buf',
        'GLuint '
      ],
      [
        'srcRGB',
        'GLenum '
      ],
      [
        'dstRGB',
        'GLenum '
      ],
      [
        'srcAlpha',
        'GLenum '
      ],
      [
        'dstAlpha',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_draw_buffers_blend',
    'glewImpl' => '__glewBlendFuncSeparateiARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendFuncSeparateiEXT' => {
    'argdata' => [
      [
        'buf',
        'GLuint '
      ],
      [
        'srcRGB',
        'GLenum '
      ],
      [
        'dstRGB',
        'GLenum '
      ],
      [
        'srcAlpha',
        'GLenum '
      ],
      [
        'dstAlpha',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_draw_buffers_indexed',
    'glewImpl' => '__glewBlendFuncSeparateiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendFunci' => {
    'argdata' => [
      [
        'buf',
        'GLuint '
      ],
      [
        'src',
        'GLenum '
      ],
      [
        'dst',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_4_0',
    'glewImpl' => '__glewBlendFunci',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendFunciARB' => {
    'argdata' => [
      [
        'buf',
        'GLuint '
      ],
      [
        'src',
        'GLenum '
      ],
      [
        'dst',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_draw_buffers_blend',
    'glewImpl' => '__glewBlendFunciARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendFunciEXT' => {
    'argdata' => [
      [
        'buf',
        'GLuint '
      ],
      [
        'src',
        'GLenum '
      ],
      [
        'dst',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_draw_buffers_indexed',
    'glewImpl' => '__glewBlendFunciEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlendParameteriNV' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'value',
        'GLint '
      ]
    ],
    'feature' => 'GL_NV_blend_equation_advanced',
    'glewImpl' => '__glewBlendParameteriNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlitFramebuffer' => {
    'argdata' => [
      [
        'srcX0',
        'GLint '
      ],
      [
        'srcY0',
        'GLint '
      ],
      [
        'srcX1',
        'GLint '
      ],
      [
        'srcY1',
        'GLint '
      ],
      [
        'dstX0',
        'GLint '
      ],
      [
        'dstY0',
        'GLint '
      ],
      [
        'dstX1',
        'GLint '
      ],
      [
        'dstY1',
        'GLint '
      ],
      [
        'mask',
        'GLbitfield '
      ],
      [
        'filter',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_framebuffer_object',
    'glewImpl' => '__glewBlitFramebuffer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlitFramebufferANGLE' => {
    'argdata' => [
      [
        'srcX0',
        'GLint '
      ],
      [
        'srcY0',
        'GLint '
      ],
      [
        'srcX1',
        'GLint '
      ],
      [
        'srcY1',
        'GLint '
      ],
      [
        'dstX0',
        'GLint '
      ],
      [
        'dstY0',
        'GLint '
      ],
      [
        'dstX1',
        'GLint '
      ],
      [
        'dstY1',
        'GLint '
      ],
      [
        'mask',
        'GLbitfield '
      ],
      [
        'filter',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ANGLE_framebuffer_blit',
    'glewImpl' => '__glewBlitFramebufferANGLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlitFramebufferEXT' => {
    'argdata' => [
      [
        'srcX0',
        'GLint '
      ],
      [
        'srcY0',
        'GLint '
      ],
      [
        'srcX1',
        'GLint '
      ],
      [
        'srcY1',
        'GLint '
      ],
      [
        'dstX0',
        'GLint '
      ],
      [
        'dstY0',
        'GLint '
      ],
      [
        'dstX1',
        'GLint '
      ],
      [
        'dstY1',
        'GLint '
      ],
      [
        'mask',
        'GLbitfield '
      ],
      [
        'filter',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_framebuffer_blit',
    'glewImpl' => '__glewBlitFramebufferEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlitFramebufferNV' => {
    'argdata' => [
      [
        'srcX0',
        'GLint '
      ],
      [
        'srcY0',
        'GLint '
      ],
      [
        'srcX1',
        'GLint '
      ],
      [
        'srcY1',
        'GLint '
      ],
      [
        'dstX0',
        'GLint '
      ],
      [
        'dstY0',
        'GLint '
      ],
      [
        'dstX1',
        'GLint '
      ],
      [
        'dstY1',
        'GLint '
      ],
      [
        'mask',
        'GLbitfield '
      ],
      [
        'filter',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_framebuffer_blit',
    'glewImpl' => '__glewBlitFramebufferNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBlitNamedFramebuffer' => {
    'argdata' => [
      [
        'readFramebuffer',
        'GLuint '
      ],
      [
        'drawFramebuffer',
        'GLuint '
      ],
      [
        'srcX0',
        'GLint '
      ],
      [
        'srcY0',
        'GLint '
      ],
      [
        'srcX1',
        'GLint '
      ],
      [
        'srcY1',
        'GLint '
      ],
      [
        'dstX0',
        'GLint '
      ],
      [
        'dstY0',
        'GLint '
      ],
      [
        'dstX1',
        'GLint '
      ],
      [
        'dstY1',
        'GLint '
      ],
      [
        'mask',
        'GLbitfield '
      ],
      [
        'filter',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewBlitNamedFramebuffer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBufferAddressRangeNV' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'address',
        'GLuint64EXT '
      ],
      [
        'length',
        'GLsizeiptr '
      ]
    ],
    'feature' => 'GL_NV_vertex_buffer_unified_memory',
    'glewImpl' => '__glewBufferAddressRangeNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBufferData' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'data',
        'const void* '
      ],
      [
        'usage',
        'GLenum '
      ]
    ],
    'binding_name' => 'glBufferData_c',
    'feature' => 'GL_VERSION_1_5',
    'glewImpl' => '__glewBufferData',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBufferDataARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'size',
        'GLsizeiptrARB '
      ],
      [
        'data',
        'const void *'
      ],
      [
        'usage',
        'GLenum '
      ]
    ],
    'binding_name' => 'glBufferDataARB_c',
    'feature' => 'GL_ARB_vertex_buffer_object',
    'glewImpl' => '__glewBufferDataARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBufferPageCommitmentARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'commit',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_ARB_sparse_buffer',
    'glewImpl' => '__glewBufferPageCommitmentARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBufferParameteriAPPLE' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_APPLE_flush_buffer_range',
    'glewImpl' => '__glewBufferParameteriAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBufferRegionEnabled' => {
    'feature' => 'GL_KTX_buffer_region',
    'glewImpl' => '__glewBufferRegionEnabled',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glBufferStorage' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'data',
        'const void *'
      ],
      [
        'flags',
        'GLbitfield '
      ]
    ],
    'binding_name' => 'glBufferStorage_c',
    'feature' => 'GL_ARB_buffer_storage',
    'glewImpl' => '__glewBufferStorage',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBufferStorageEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'data',
        'const void *'
      ],
      [
        'flags',
        'GLbitfield '
      ]
    ],
    'binding_name' => 'glBufferStorageEXT_c',
    'feature' => 'GL_EXT_buffer_storage',
    'glewImpl' => '__glewBufferStorageEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBufferStorageExternalEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'clientBuffer',
        'GLeglClientBufferEXT '
      ],
      [
        'flags',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_EXT_external_buffer',
    'glewImpl' => '__glewBufferStorageExternalEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBufferStorageMemEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'memory',
        'GLuint '
      ],
      [
        'offset',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_EXT_memory_object',
    'glewImpl' => '__glewBufferStorageMemEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBufferSubData' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'data',
        'const void* '
      ]
    ],
    'binding_name' => 'glBufferSubData_c',
    'feature' => 'GL_VERSION_1_5',
    'glewImpl' => '__glewBufferSubData',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glBufferSubDataARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'offset',
        'GLintptrARB '
      ],
      [
        'size',
        'GLsizeiptrARB '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glBufferSubDataARB_c',
    'feature' => 'GL_ARB_vertex_buffer_object',
    'glewImpl' => '__glewBufferSubDataARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCallCommandListNV' => {
    'argdata' => [
      [
        'list',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_command_list',
    'glewImpl' => '__glewCallCommandListNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCallList' => {
    'argdata' => [
      [
        'list',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCallLists' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'lists',
        'const void *'
      ]
    ],
    'binding_name' => 'glCallLists_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCheckFramebufferStatus' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_framebuffer_object',
    'glewImpl' => '__glewCheckFramebufferStatus',
    'glewtype' => 'fun',
    'restype' => 'GLenum'
  },
  'glCheckFramebufferStatusEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_framebuffer_object',
    'glewImpl' => '__glewCheckFramebufferStatusEXT',
    'glewtype' => 'fun',
    'restype' => 'GLenum'
  },
  'glCheckNamedFramebufferStatus' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewCheckNamedFramebufferStatus',
    'glewtype' => 'fun',
    'restype' => 'GLenum'
  },
  'glCheckNamedFramebufferStatusEXT' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCheckNamedFramebufferStatusEXT',
    'glewtype' => 'fun',
    'restype' => 'GLenum'
  },
  'glClampColor' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'clamp',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewClampColor',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClampColorARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'clamp',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_color_buffer_float',
    'glewImpl' => '__glewClampColorARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClear' => {
    'argdata' => [
      [
        'mask',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearAccum' => {
    'argdata' => [
      [
        'red',
        'GLfloat '
      ],
      [
        'green',
        'GLfloat '
      ],
      [
        'blue',
        'GLfloat '
      ],
      [
        'alpha',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearBufferData' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glClearBufferData_c',
    'feature' => 'GL_ARB_clear_buffer_object',
    'glewImpl' => '__glewClearBufferData',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearBufferSubData' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glClearBufferSubData_c',
    'feature' => 'GL_ARB_clear_buffer_object',
    'glewImpl' => '__glewClearBufferSubData',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearBufferfi' => {
    'argdata' => [
      [
        'buffer',
        'GLenum '
      ],
      [
        'drawBuffer',
        'GLint '
      ],
      [
        'depth',
        'GLfloat '
      ],
      [
        'stencil',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewClearBufferfi',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearBufferfv' => {
    'argdata' => [
      [
        'buffer',
        'GLenum '
      ],
      [
        'drawBuffer',
        'GLint '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glClearBufferfv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewClearBufferfv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearBufferiv' => {
    'argdata' => [
      [
        'buffer',
        'GLenum '
      ],
      [
        'drawBuffer',
        'GLint '
      ],
      [
        'value',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glClearBufferiv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewClearBufferiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearBufferuiv' => {
    'argdata' => [
      [
        'buffer',
        'GLenum '
      ],
      [
        'drawBuffer',
        'GLint '
      ],
      [
        'value',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glClearBufferuiv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewClearBufferuiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearColor' => {
    'argdata' => [
      [
        'red',
        'GLclampf '
      ],
      [
        'green',
        'GLclampf '
      ],
      [
        'blue',
        'GLclampf '
      ],
      [
        'alpha',
        'GLclampf '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearColorIiEXT' => {
    'argdata' => [
      [
        'red',
        'GLint '
      ],
      [
        'green',
        'GLint '
      ],
      [
        'blue',
        'GLint '
      ],
      [
        'alpha',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_texture_integer',
    'glewImpl' => '__glewClearColorIiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearColorIuiEXT' => {
    'argdata' => [
      [
        'red',
        'GLuint '
      ],
      [
        'green',
        'GLuint '
      ],
      [
        'blue',
        'GLuint '
      ],
      [
        'alpha',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_texture_integer',
    'glewImpl' => '__glewClearColorIuiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearColorx' => {
    'argdata' => [
      [
        'red',
        'GLclampx '
      ],
      [
        'green',
        'GLclampx '
      ],
      [
        'blue',
        'GLclampx '
      ],
      [
        'alpha',
        'GLclampx '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewClearColorx',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearDepth' => {
    'argdata' => [
      [
        'depth',
        'GLclampd '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearDepthdNV' => {
    'argdata' => [
      [
        'depth',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_NV_depth_buffer_float',
    'glewImpl' => '__glewClearDepthdNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearDepthf' => {
    'argdata' => [
      [
        'd',
        'GLclampf '
      ]
    ],
    'feature' => 'GL_ARB_ES2_compatibility',
    'glewImpl' => '__glewClearDepthf',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearDepthx' => {
    'argdata' => [
      [
        'depth',
        'GLclampx '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewClearDepthx',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearIndex' => {
    'argdata' => [
      [
        'c',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearNamedBufferData' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glClearNamedBufferData_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewClearNamedBufferData',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearNamedBufferDataEXT' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glClearNamedBufferDataEXT_c',
    'feature' => 'GL_ARB_clear_buffer_object',
    'glewImpl' => '__glewClearNamedBufferDataEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearNamedBufferSubData' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glClearNamedBufferSubData_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewClearNamedBufferSubData',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearNamedBufferSubDataEXT' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glClearNamedBufferSubDataEXT_c',
    'feature' => 'GL_ARB_clear_buffer_object',
    'glewImpl' => '__glewClearNamedBufferSubDataEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearNamedFramebufferfi' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'buffer',
        'GLenum '
      ],
      [
        'drawbuffer',
        'GLint '
      ],
      [
        'depth',
        'GLfloat '
      ],
      [
        'stencil',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewClearNamedFramebufferfi',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearNamedFramebufferfv' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'buffer',
        'GLenum '
      ],
      [
        'drawbuffer',
        'GLint '
      ],
      [
        'value',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glClearNamedFramebufferfv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewClearNamedFramebufferfv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearNamedFramebufferiv' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'buffer',
        'GLenum '
      ],
      [
        'drawbuffer',
        'GLint '
      ],
      [
        'value',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glClearNamedFramebufferiv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewClearNamedFramebufferiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearNamedFramebufferuiv' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'buffer',
        'GLenum '
      ],
      [
        'drawbuffer',
        'GLint '
      ],
      [
        'value',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glClearNamedFramebufferuiv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewClearNamedFramebufferuiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearPixelLocalStorageuiEXT' => {
    'argdata' => [
      [
        'offset',
        'GLsizei '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'values',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glClearPixelLocalStorageuiEXT_c',
    'feature' => 'GL_EXT_shader_pixel_local_storage2',
    'glewImpl' => '__glewClearPixelLocalStorageuiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearStencil' => {
    'argdata' => [
      [
        's',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearTexImage' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glClearTexImage_c',
    'feature' => 'GL_ARB_clear_texture',
    'glewImpl' => '__glewClearTexImage',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearTexImageEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glClearTexImageEXT_c',
    'feature' => 'GL_EXT_clear_texture',
    'glewImpl' => '__glewClearTexImageEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearTexSubImage' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glClearTexSubImage_c',
    'feature' => 'GL_ARB_clear_texture',
    'glewImpl' => '__glewClearTexSubImage',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClearTexSubImageEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glClearTexSubImageEXT_c',
    'feature' => 'GL_EXT_clear_texture',
    'glewImpl' => '__glewClearTexSubImageEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClientActiveTexture' => {
    'argdata' => [
      [
        'texture',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewClientActiveTexture',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClientActiveTextureARB' => {
    'argdata' => [
      [
        'texture',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewClientActiveTextureARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClientActiveVertexStreamATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewClientActiveVertexStreamATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClientAttribDefaultEXT' => {
    'argdata' => [
      [
        'mask',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewClientAttribDefaultEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClientWaitSync' => {
    'argdata' => [
      [
        'myGLsync',
        'GLsync '
      ],
      [
        'flags',
        'GLbitfield '
      ],
      [
        'timeout',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_ARB_sync',
    'glewImpl' => '__glewClientWaitSync',
    'glewtype' => 'fun',
    'restype' => 'GLenum'
  },
  'glClientWaitSyncAPPLE' => {
    'argdata' => [
      [
        'myGLsync',
        'GLsync '
      ],
      [
        'flags',
        'GLbitfield '
      ],
      [
        'timeout',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_APPLE_sync',
    'glewImpl' => '__glewClientWaitSyncAPPLE',
    'glewtype' => 'fun',
    'restype' => 'GLenum'
  },
  'glClipControl' => {
    'argdata' => [
      [
        'origin',
        'GLenum '
      ],
      [
        'depth',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_clip_control',
    'glewImpl' => '__glewClipControl',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClipPlane' => {
    'argdata' => [
      [
        'plane',
        'GLenum '
      ],
      [
        'equation',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glClipPlane_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClipPlanef' => {
    'argdata' => [
      [
        'plane',
        'GLenum '
      ],
      [
        'equation',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glClipPlanef_c',
    'feature' => 'GL_REGAL_ES1_1_compatibility',
    'glewImpl' => '__glewClipPlanef',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glClipPlanex' => {
    'argdata' => [
      [
        'plane',
        'GLenum '
      ],
      [
        'equation',
        'const GLfixed* '
      ]
    ],
    'binding_name' => 'glClipPlanex_c',
    'feature' => 'GL_REGAL_ES1_1_compatibility',
    'glewImpl' => '__glewClipPlanex',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor3b' => {
    'argdata' => [
      [
        'red',
        'GLbyte '
      ],
      [
        'green',
        'GLbyte '
      ],
      [
        'blue',
        'GLbyte '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor3bv' => {
    'argdata' => [
      [
        'v',
        'const GLbyte *'
      ]
    ],
    'binding_name' => 'glColor3bv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor3d' => {
    'argdata' => [
      [
        'red',
        'GLdouble '
      ],
      [
        'green',
        'GLdouble '
      ],
      [
        'blue',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor3dv' => {
    'argdata' => [
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glColor3dv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor3f' => {
    'argdata' => [
      [
        'red',
        'GLfloat '
      ],
      [
        'green',
        'GLfloat '
      ],
      [
        'blue',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor3fVertex3fSUN' => {
    'argdata' => [
      [
        'r',
        'GLfloat '
      ],
      [
        'g',
        'GLfloat '
      ],
      [
        'b',
        'GLfloat '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewColor3fVertex3fSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor3fVertex3fvSUN' => {
    'argdata' => [
      [
        'c',
        'const GLfloat* '
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glColor3fVertex3fvSUN_c',
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewColor3fVertex3fvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor3fv' => {
    'argdata' => [
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glColor3fv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor3hNV' => {
    'argdata' => [
      [
        'red',
        'GLhalf '
      ],
      [
        'green',
        'GLhalf '
      ],
      [
        'blue',
        'GLhalf '
      ]
    ],
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewColor3hNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor3hvNV' => {
    'argdata' => [
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glColor3hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewColor3hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor3i' => {
    'argdata' => [
      [
        'red',
        'GLint '
      ],
      [
        'green',
        'GLint '
      ],
      [
        'blue',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor3iv' => {
    'argdata' => [
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glColor3iv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor3s' => {
    'argdata' => [
      [
        'red',
        'GLshort '
      ],
      [
        'green',
        'GLshort '
      ],
      [
        'blue',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor3sv' => {
    'argdata' => [
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glColor3sv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor3ub' => {
    'argdata' => [
      [
        'red',
        'GLubyte '
      ],
      [
        'green',
        'GLubyte '
      ],
      [
        'blue',
        'GLubyte '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor3ubv' => {
    'argdata' => [
      [
        'v',
        'const GLubyte *'
      ]
    ],
    'binding_name' => 'glColor3ubv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor3ui' => {
    'argdata' => [
      [
        'red',
        'GLuint '
      ],
      [
        'green',
        'GLuint '
      ],
      [
        'blue',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor3uiv' => {
    'argdata' => [
      [
        'v',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glColor3uiv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor3us' => {
    'argdata' => [
      [
        'red',
        'GLushort '
      ],
      [
        'green',
        'GLushort '
      ],
      [
        'blue',
        'GLushort '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor3usv' => {
    'argdata' => [
      [
        'v',
        'const GLushort *'
      ]
    ],
    'binding_name' => 'glColor3usv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4b' => {
    'argdata' => [
      [
        'red',
        'GLbyte '
      ],
      [
        'green',
        'GLbyte '
      ],
      [
        'blue',
        'GLbyte '
      ],
      [
        'alpha',
        'GLbyte '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4bv' => {
    'argdata' => [
      [
        'v',
        'const GLbyte *'
      ]
    ],
    'binding_name' => 'glColor4bv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4d' => {
    'argdata' => [
      [
        'red',
        'GLdouble '
      ],
      [
        'green',
        'GLdouble '
      ],
      [
        'blue',
        'GLdouble '
      ],
      [
        'alpha',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4dv' => {
    'argdata' => [
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glColor4dv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4f' => {
    'argdata' => [
      [
        'red',
        'GLfloat '
      ],
      [
        'green',
        'GLfloat '
      ],
      [
        'blue',
        'GLfloat '
      ],
      [
        'alpha',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4fNormal3fVertex3fSUN' => {
    'argdata' => [
      [
        'r',
        'GLfloat '
      ],
      [
        'g',
        'GLfloat '
      ],
      [
        'b',
        'GLfloat '
      ],
      [
        'a',
        'GLfloat '
      ],
      [
        'nx',
        'GLfloat '
      ],
      [
        'ny',
        'GLfloat '
      ],
      [
        'nz',
        'GLfloat '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewColor4fNormal3fVertex3fSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4fNormal3fVertex3fvSUN' => {
    'argdata' => [
      [
        'c',
        'const GLfloat* '
      ],
      [
        'n',
        'const GLfloat *'
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glColor4fNormal3fVertex3fvSUN_c',
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewColor4fNormal3fVertex3fvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4fv' => {
    'argdata' => [
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glColor4fv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4hNV' => {
    'argdata' => [
      [
        'red',
        'GLhalf '
      ],
      [
        'green',
        'GLhalf '
      ],
      [
        'blue',
        'GLhalf '
      ],
      [
        'alpha',
        'GLhalf '
      ]
    ],
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewColor4hNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4hvNV' => {
    'argdata' => [
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glColor4hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewColor4hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4i' => {
    'argdata' => [
      [
        'red',
        'GLint '
      ],
      [
        'green',
        'GLint '
      ],
      [
        'blue',
        'GLint '
      ],
      [
        'alpha',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4iv' => {
    'argdata' => [
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glColor4iv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4s' => {
    'argdata' => [
      [
        'red',
        'GLshort '
      ],
      [
        'green',
        'GLshort '
      ],
      [
        'blue',
        'GLshort '
      ],
      [
        'alpha',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4sv' => {
    'argdata' => [
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glColor4sv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4ub' => {
    'argdata' => [
      [
        'red',
        'GLubyte '
      ],
      [
        'green',
        'GLubyte '
      ],
      [
        'blue',
        'GLubyte '
      ],
      [
        'alpha',
        'GLubyte '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4ubVertex2fSUN' => {
    'argdata' => [
      [
        'r',
        'GLubyte '
      ],
      [
        'g',
        'GLubyte '
      ],
      [
        'b',
        'GLubyte '
      ],
      [
        'a',
        'GLubyte '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewColor4ubVertex2fSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4ubVertex2fvSUN' => {
    'argdata' => [
      [
        'c',
        'const GLubyte* '
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glColor4ubVertex2fvSUN_c',
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewColor4ubVertex2fvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4ubVertex3fSUN' => {
    'argdata' => [
      [
        'r',
        'GLubyte '
      ],
      [
        'g',
        'GLubyte '
      ],
      [
        'b',
        'GLubyte '
      ],
      [
        'a',
        'GLubyte '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewColor4ubVertex3fSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4ubVertex3fvSUN' => {
    'argdata' => [
      [
        'c',
        'const GLubyte* '
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glColor4ubVertex3fvSUN_c',
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewColor4ubVertex3fvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4ubv' => {
    'argdata' => [
      [
        'v',
        'const GLubyte *'
      ]
    ],
    'binding_name' => 'glColor4ubv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4ui' => {
    'argdata' => [
      [
        'red',
        'GLuint '
      ],
      [
        'green',
        'GLuint '
      ],
      [
        'blue',
        'GLuint '
      ],
      [
        'alpha',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4uiv' => {
    'argdata' => [
      [
        'v',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glColor4uiv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4us' => {
    'argdata' => [
      [
        'red',
        'GLushort '
      ],
      [
        'green',
        'GLushort '
      ],
      [
        'blue',
        'GLushort '
      ],
      [
        'alpha',
        'GLushort '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4usv' => {
    'argdata' => [
      [
        'v',
        'const GLushort *'
      ]
    ],
    'binding_name' => 'glColor4usv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColor4x' => {
    'argdata' => [
      [
        'red',
        'GLfixed '
      ],
      [
        'green',
        'GLfixed '
      ],
      [
        'blue',
        'GLfixed '
      ],
      [
        'alpha',
        'GLfixed '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewColor4x',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorFormatNV' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NV_vertex_buffer_unified_memory',
    'glewImpl' => '__glewColorFormatNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorFragmentOp1ATI' => {
    'argdata' => [
      [
        'op',
        'GLenum '
      ],
      [
        'dst',
        'GLuint '
      ],
      [
        'dstMask',
        'GLuint '
      ],
      [
        'dstMod',
        'GLuint '
      ],
      [
        'arg1',
        'GLuint '
      ],
      [
        'arg1Rep',
        'GLuint '
      ],
      [
        'arg1Mod',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ATI_fragment_shader',
    'glewImpl' => '__glewColorFragmentOp1ATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorFragmentOp2ATI' => {
    'argdata' => [
      [
        'op',
        'GLenum '
      ],
      [
        'dst',
        'GLuint '
      ],
      [
        'dstMask',
        'GLuint '
      ],
      [
        'dstMod',
        'GLuint '
      ],
      [
        'arg1',
        'GLuint '
      ],
      [
        'arg1Rep',
        'GLuint '
      ],
      [
        'arg1Mod',
        'GLuint '
      ],
      [
        'arg2',
        'GLuint '
      ],
      [
        'arg2Rep',
        'GLuint '
      ],
      [
        'arg2Mod',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ATI_fragment_shader',
    'glewImpl' => '__glewColorFragmentOp2ATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorFragmentOp3ATI' => {
    'argdata' => [
      [
        'op',
        'GLenum '
      ],
      [
        'dst',
        'GLuint '
      ],
      [
        'dstMask',
        'GLuint '
      ],
      [
        'dstMod',
        'GLuint '
      ],
      [
        'arg1',
        'GLuint '
      ],
      [
        'arg1Rep',
        'GLuint '
      ],
      [
        'arg1Mod',
        'GLuint '
      ],
      [
        'arg2',
        'GLuint '
      ],
      [
        'arg2Rep',
        'GLuint '
      ],
      [
        'arg2Mod',
        'GLuint '
      ],
      [
        'arg3',
        'GLuint '
      ],
      [
        'arg3Rep',
        'GLuint '
      ],
      [
        'arg3Mod',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ATI_fragment_shader',
    'glewImpl' => '__glewColorFragmentOp3ATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorMask' => {
    'argdata' => [
      [
        'red',
        'GLboolean '
      ],
      [
        'green',
        'GLboolean '
      ],
      [
        'blue',
        'GLboolean '
      ],
      [
        'alpha',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorMaskIndexedEXT' => {
    'argdata' => [
      [
        'buf',
        'GLuint '
      ],
      [
        'r',
        'GLboolean '
      ],
      [
        'g',
        'GLboolean '
      ],
      [
        'b',
        'GLboolean '
      ],
      [
        'a',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_EXT_draw_buffers2',
    'glewImpl' => '__glewColorMaskIndexedEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorMaski' => {
    'argdata' => [
      [
        'buf',
        'GLuint '
      ],
      [
        'red',
        'GLboolean '
      ],
      [
        'green',
        'GLboolean '
      ],
      [
        'blue',
        'GLboolean '
      ],
      [
        'alpha',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewColorMaski',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorMaskiEXT' => {
    'argdata' => [
      [
        'buf',
        'GLuint '
      ],
      [
        'r',
        'GLboolean '
      ],
      [
        'g',
        'GLboolean '
      ],
      [
        'b',
        'GLboolean '
      ],
      [
        'a',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_EXT_draw_buffers_indexed',
    'glewImpl' => '__glewColorMaskiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorMaterial' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorP3ui' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'color',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewColorP3ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorP3uiv' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'color',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glColorP3uiv_c',
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewColorP3uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorP4ui' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'color',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewColorP4ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorP4uiv' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'color',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glColorP4uiv_c',
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewColorP4uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorPointer' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glColorPointer_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorPointerEXT' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glColorPointerEXT_c',
    'feature' => 'GL_EXT_vertex_array',
    'glewImpl' => '__glewColorPointerEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorPointerListIBM' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLint '
      ],
      [
        'pointer',
        'const void** '
      ],
      [
        'ptrstride',
        'GLint '
      ]
    ],
    'binding_name' => 'glColorPointerListIBM_c',
    'feature' => 'GL_IBM_vertex_array_lists',
    'glewImpl' => '__glewColorPointerListIBM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorPointervINTEL' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pointer',
        'const void** '
      ]
    ],
    'binding_name' => 'glColorPointervINTEL_c',
    'feature' => 'GL_INTEL_parallel_arrays',
    'glewImpl' => '__glewColorPointervINTEL',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorSubTable' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'start',
        'GLsizei '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glColorSubTable_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewColorSubTable',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorSubTableEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'start',
        'GLsizei '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glColorSubTableEXT_c',
    'feature' => 'GL_EXT_color_subtable',
    'glewImpl' => '__glewColorSubTableEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorTable' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'table',
        'const void *'
      ]
    ],
    'binding_name' => 'glColorTable_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewColorTable',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorTableEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalFormat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glColorTableEXT_c',
    'feature' => 'GL_EXT_paletted_texture',
    'glewImpl' => '__glewColorTableEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorTableParameterfv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glColorTableParameterfv_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewColorTableParameterfv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorTableParameterfvSGI' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glColorTableParameterfvSGI_c',
    'feature' => 'GL_SGI_color_table',
    'glewImpl' => '__glewColorTableParameterfvSGI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorTableParameteriv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glColorTableParameteriv_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewColorTableParameteriv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorTableParameterivSGI' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glColorTableParameterivSGI_c',
    'feature' => 'GL_SGI_color_table',
    'glewImpl' => '__glewColorTableParameterivSGI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glColorTableSGI' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'table',
        'const void *'
      ]
    ],
    'binding_name' => 'glColorTableSGI_c',
    'feature' => 'GL_SGI_color_table',
    'glewImpl' => '__glewColorTableSGI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCombinerInputNV' => {
    'argdata' => [
      [
        'stage',
        'GLenum '
      ],
      [
        'portion',
        'GLenum '
      ],
      [
        'variable',
        'GLenum '
      ],
      [
        'input',
        'GLenum '
      ],
      [
        'mapping',
        'GLenum '
      ],
      [
        'componentUsage',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_register_combiners',
    'glewImpl' => '__glewCombinerInputNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCombinerOutputNV' => {
    'argdata' => [
      [
        'stage',
        'GLenum '
      ],
      [
        'portion',
        'GLenum '
      ],
      [
        'abOutput',
        'GLenum '
      ],
      [
        'cdOutput',
        'GLenum '
      ],
      [
        'sumOutput',
        'GLenum '
      ],
      [
        'scale',
        'GLenum '
      ],
      [
        'bias',
        'GLenum '
      ],
      [
        'abDotProduct',
        'GLboolean '
      ],
      [
        'cdDotProduct',
        'GLboolean '
      ],
      [
        'muxSum',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_NV_register_combiners',
    'glewImpl' => '__glewCombinerOutputNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCombinerParameterfNV' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_NV_register_combiners',
    'glewImpl' => '__glewCombinerParameterfNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCombinerParameterfvNV' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glCombinerParameterfvNV_c',
    'feature' => 'GL_NV_register_combiners',
    'glewImpl' => '__glewCombinerParameterfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCombinerParameteriNV' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_NV_register_combiners',
    'glewImpl' => '__glewCombinerParameteriNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCombinerParameterivNV' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glCombinerParameterivNV_c',
    'feature' => 'GL_NV_register_combiners',
    'glewImpl' => '__glewCombinerParameterivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCombinerStageParameterfvNV' => {
    'argdata' => [
      [
        'stage',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glCombinerStageParameterfvNV_c',
    'feature' => 'GL_NV_register_combiners2',
    'glewImpl' => '__glewCombinerStageParameterfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCommandListSegmentsNV' => {
    'argdata' => [
      [
        'list',
        'GLuint '
      ],
      [
        'segments',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_command_list',
    'glewImpl' => '__glewCommandListSegmentsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompileCommandListNV' => {
    'argdata' => [
      [
        'list',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_command_list',
    'glewImpl' => '__glewCompileCommandListNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompileShader' => {
    'argdata' => [
      [
        'shader',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewCompileShader',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompileShaderARB' => {
    'argdata' => [
      [
        'shaderObj',
        'GLhandleARB '
      ]
    ],
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewCompileShaderARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompileShaderIncludeARB' => {
    'argdata' => [
      [
        'shader',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'path',
        'const GLchar* const *'
      ],
      [
        'length',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glCompileShaderIncludeARB_c',
    'feature' => 'GL_ARB_shading_language_include',
    'glewImpl' => '__glewCompileShaderIncludeARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedMultiTexImage1DEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedMultiTexImage1DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCompressedMultiTexImage1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedMultiTexImage2DEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedMultiTexImage2DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCompressedMultiTexImage2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedMultiTexImage3DEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedMultiTexImage3DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCompressedMultiTexImage3DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedMultiTexSubImage1DEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedMultiTexSubImage1DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCompressedMultiTexSubImage1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedMultiTexSubImage2DEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedMultiTexSubImage2DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCompressedMultiTexSubImage2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedMultiTexSubImage3DEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedMultiTexSubImage3DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCompressedMultiTexSubImage3DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTexImage1D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTexImage1D_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewCompressedTexImage1D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTexImage1DARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTexImage1DARB_c',
    'feature' => 'GL_ARB_texture_compression',
    'glewImpl' => '__glewCompressedTexImage1DARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTexImage2D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTexImage2D_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewCompressedTexImage2D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTexImage2DARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTexImage2DARB_c',
    'feature' => 'GL_ARB_texture_compression',
    'glewImpl' => '__glewCompressedTexImage2DARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTexImage3D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTexImage3D_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewCompressedTexImage3D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTexImage3DARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTexImage3DARB_c',
    'feature' => 'GL_ARB_texture_compression',
    'glewImpl' => '__glewCompressedTexImage3DARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTexImage3DNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTexImage3DNV_c',
    'feature' => 'GL_NV_texture_array',
    'glewImpl' => '__glewCompressedTexImage3DNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTexSubImage1D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTexSubImage1D_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewCompressedTexSubImage1D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTexSubImage1DARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTexSubImage1DARB_c',
    'feature' => 'GL_ARB_texture_compression',
    'glewImpl' => '__glewCompressedTexSubImage1DARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTexSubImage2D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTexSubImage2D_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewCompressedTexSubImage2D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTexSubImage2DARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTexSubImage2DARB_c',
    'feature' => 'GL_ARB_texture_compression',
    'glewImpl' => '__glewCompressedTexSubImage2DARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTexSubImage3D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTexSubImage3D_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewCompressedTexSubImage3D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTexSubImage3DARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTexSubImage3DARB_c',
    'feature' => 'GL_ARB_texture_compression',
    'glewImpl' => '__glewCompressedTexSubImage3DARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTexSubImage3DNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTexSubImage3DNV_c',
    'feature' => 'GL_NV_texture_array',
    'glewImpl' => '__glewCompressedTexSubImage3DNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTextureImage1DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTextureImage1DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCompressedTextureImage1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTextureImage2DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTextureImage2DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCompressedTextureImage2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTextureImage3DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTextureImage3DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCompressedTextureImage3DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTextureSubImage1D' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTextureSubImage1D_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewCompressedTextureSubImage1D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTextureSubImage1DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTextureSubImage1DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCompressedTextureSubImage1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTextureSubImage2D' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTextureSubImage2D_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewCompressedTextureSubImage2D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTextureSubImage2DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTextureSubImage2DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCompressedTextureSubImage2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTextureSubImage3D' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTextureSubImage3D_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewCompressedTextureSubImage3D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCompressedTextureSubImage3DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'imageSize',
        'GLsizei '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glCompressedTextureSubImage3DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCompressedTextureSubImage3DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glConservativeRasterParameterfNV' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'value',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_NV_conservative_raster_dilate',
    'glewImpl' => '__glewConservativeRasterParameterfNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glConservativeRasterParameteriNV' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_NV_conservative_raster_pre_snap_triangles',
    'glewImpl' => '__glewConservativeRasterParameteriNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glConvolutionFilter1D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'image',
        'const void *'
      ]
    ],
    'binding_name' => 'glConvolutionFilter1D_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewConvolutionFilter1D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glConvolutionFilter1DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'image',
        'const void *'
      ]
    ],
    'binding_name' => 'glConvolutionFilter1DEXT_c',
    'feature' => 'GL_EXT_convolution',
    'glewImpl' => '__glewConvolutionFilter1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glConvolutionFilter2D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'image',
        'const void *'
      ]
    ],
    'binding_name' => 'glConvolutionFilter2D_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewConvolutionFilter2D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glConvolutionFilter2DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'image',
        'const void *'
      ]
    ],
    'binding_name' => 'glConvolutionFilter2DEXT_c',
    'feature' => 'GL_EXT_convolution',
    'glewImpl' => '__glewConvolutionFilter2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glConvolutionParameterf' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewConvolutionParameterf',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glConvolutionParameterfEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_convolution',
    'glewImpl' => '__glewConvolutionParameterfEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glConvolutionParameterfv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glConvolutionParameterfv_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewConvolutionParameterfv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glConvolutionParameterfvEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glConvolutionParameterfvEXT_c',
    'feature' => 'GL_EXT_convolution',
    'glewImpl' => '__glewConvolutionParameterfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glConvolutionParameteri' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewConvolutionParameteri',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glConvolutionParameteriEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_convolution',
    'glewImpl' => '__glewConvolutionParameteriEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glConvolutionParameteriv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glConvolutionParameteriv_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewConvolutionParameteriv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glConvolutionParameterivEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glConvolutionParameterivEXT_c',
    'feature' => 'GL_EXT_convolution',
    'glewImpl' => '__glewConvolutionParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyBufferSubData' => {
    'argdata' => [
      [
        'readtarget',
        'GLenum '
      ],
      [
        'writetarget',
        'GLenum '
      ],
      [
        'readoffset',
        'GLintptr '
      ],
      [
        'writeoffset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ]
    ],
    'feature' => 'GL_ARB_copy_buffer',
    'glewImpl' => '__glewCopyBufferSubData',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyBufferSubDataNV' => {
    'argdata' => [
      [
        'readtarget',
        'GLenum '
      ],
      [
        'writetarget',
        'GLenum '
      ],
      [
        'readoffset',
        'GLintptr '
      ],
      [
        'writeoffset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ]
    ],
    'feature' => 'GL_NV_copy_buffer',
    'glewImpl' => '__glewCopyBufferSubDataNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyColorSubTable' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'start',
        'GLsizei '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewCopyColorSubTable',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyColorSubTableEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'start',
        'GLsizei '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_color_subtable',
    'glewImpl' => '__glewCopyColorSubTableEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyColorTable' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewCopyColorTable',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyColorTableSGI' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_SGI_color_table',
    'glewImpl' => '__glewCopyColorTableSGI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyConvolutionFilter1D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewCopyConvolutionFilter1D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyConvolutionFilter1DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_convolution',
    'glewImpl' => '__glewCopyConvolutionFilter1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyConvolutionFilter2D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewCopyConvolutionFilter2D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyConvolutionFilter2DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_convolution',
    'glewImpl' => '__glewCopyConvolutionFilter2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyImageSubData' => {
    'argdata' => [
      [
        'srcName',
        'GLuint '
      ],
      [
        'srcTarget',
        'GLenum '
      ],
      [
        'srcLevel',
        'GLint '
      ],
      [
        'srcX',
        'GLint '
      ],
      [
        'srcY',
        'GLint '
      ],
      [
        'srcZ',
        'GLint '
      ],
      [
        'dstName',
        'GLuint '
      ],
      [
        'dstTarget',
        'GLenum '
      ],
      [
        'dstLevel',
        'GLint '
      ],
      [
        'dstX',
        'GLint '
      ],
      [
        'dstY',
        'GLint '
      ],
      [
        'dstZ',
        'GLint '
      ],
      [
        'srcWidth',
        'GLsizei '
      ],
      [
        'srcHeight',
        'GLsizei '
      ],
      [
        'srcDepth',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_copy_image',
    'glewImpl' => '__glewCopyImageSubData',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyImageSubDataEXT' => {
    'argdata' => [
      [
        'srcName',
        'GLuint '
      ],
      [
        'srcTarget',
        'GLenum '
      ],
      [
        'srcLevel',
        'GLint '
      ],
      [
        'srcX',
        'GLint '
      ],
      [
        'srcY',
        'GLint '
      ],
      [
        'srcZ',
        'GLint '
      ],
      [
        'dstName',
        'GLuint '
      ],
      [
        'dstTarget',
        'GLenum '
      ],
      [
        'dstLevel',
        'GLint '
      ],
      [
        'dstX',
        'GLint '
      ],
      [
        'dstY',
        'GLint '
      ],
      [
        'dstZ',
        'GLint '
      ],
      [
        'srcWidth',
        'GLsizei '
      ],
      [
        'srcHeight',
        'GLsizei '
      ],
      [
        'srcDepth',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_copy_image',
    'glewImpl' => '__glewCopyImageSubDataEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyImageSubDataNV' => {
    'argdata' => [
      [
        'srcName',
        'GLuint '
      ],
      [
        'srcTarget',
        'GLenum '
      ],
      [
        'srcLevel',
        'GLint '
      ],
      [
        'srcX',
        'GLint '
      ],
      [
        'srcY',
        'GLint '
      ],
      [
        'srcZ',
        'GLint '
      ],
      [
        'dstName',
        'GLuint '
      ],
      [
        'dstTarget',
        'GLenum '
      ],
      [
        'dstLevel',
        'GLint '
      ],
      [
        'dstX',
        'GLint '
      ],
      [
        'dstY',
        'GLint '
      ],
      [
        'dstZ',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NV_copy_image',
    'glewImpl' => '__glewCopyImageSubDataNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyMultiTexImage1DEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCopyMultiTexImage1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyMultiTexImage2DEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCopyMultiTexImage2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyMultiTexSubImage1DEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCopyMultiTexSubImage1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyMultiTexSubImage2DEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCopyMultiTexSubImage2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyMultiTexSubImage3DEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCopyMultiTexSubImage3DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyNamedBufferSubData' => {
    'argdata' => [
      [
        'readBuffer',
        'GLuint '
      ],
      [
        'writeBuffer',
        'GLuint '
      ],
      [
        'readOffset',
        'GLintptr '
      ],
      [
        'writeOffset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewCopyNamedBufferSubData',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyPathNV' => {
    'argdata' => [
      [
        'resultPath',
        'GLuint '
      ],
      [
        'srcPath',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewCopyPathNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyPixels' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyTexImage1D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalFormat',
        'GLenum '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyTexImage1DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_copy_texture',
    'glewImpl' => '__glewCopyTexImage1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyTexImage2D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalFormat',
        'GLenum '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyTexImage2DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_copy_texture',
    'glewImpl' => '__glewCopyTexImage2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyTexSubImage1D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyTexSubImage1DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_copy_texture',
    'glewImpl' => '__glewCopyTexSubImage1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyTexSubImage2D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyTexSubImage2DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_copy_texture',
    'glewImpl' => '__glewCopyTexSubImage2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyTexSubImage3D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_VERSION_1_2',
    'glewImpl' => '__glewCopyTexSubImage3D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyTexSubImage3DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_copy_texture',
    'glewImpl' => '__glewCopyTexSubImage3DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyTexSubImage3DNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NV_texture_array',
    'glewImpl' => '__glewCopyTexSubImage3DNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyTextureImage1DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCopyTextureImage1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyTextureImage2DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCopyTextureImage2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyTextureLevelsAPPLE' => {
    'argdata' => [
      [
        'destinationTexture',
        'GLuint '
      ],
      [
        'sourceTexture',
        'GLuint '
      ],
      [
        'sourceBaseLevel',
        'GLint '
      ],
      [
        'sourceLevelCount',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_APPLE_copy_texture_levels',
    'glewImpl' => '__glewCopyTextureLevelsAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyTextureSubImage1D' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewCopyTextureSubImage1D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyTextureSubImage1DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCopyTextureSubImage1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyTextureSubImage2D' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewCopyTextureSubImage2D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyTextureSubImage2DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCopyTextureSubImage2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyTextureSubImage3D' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewCopyTextureSubImage3D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCopyTextureSubImage3DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewCopyTextureSubImage3DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCoverFillPathInstancedNV' => {
    'argdata' => [
      [
        'numPaths',
        'GLsizei '
      ],
      [
        'pathNameType',
        'GLenum '
      ],
      [
        'paths',
        'const void *'
      ],
      [
        'pathBase',
        'GLuint '
      ],
      [
        'coverMode',
        'GLenum '
      ],
      [
        'transformType',
        'GLenum '
      ],
      [
        'transformValues',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glCoverFillPathInstancedNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewCoverFillPathInstancedNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCoverFillPathNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'coverMode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewCoverFillPathNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCoverStrokePathInstancedNV' => {
    'argdata' => [
      [
        'numPaths',
        'GLsizei '
      ],
      [
        'pathNameType',
        'GLenum '
      ],
      [
        'paths',
        'const void *'
      ],
      [
        'pathBase',
        'GLuint '
      ],
      [
        'coverMode',
        'GLenum '
      ],
      [
        'transformType',
        'GLenum '
      ],
      [
        'transformValues',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glCoverStrokePathInstancedNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewCoverStrokePathInstancedNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCoverStrokePathNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'coverMode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewCoverStrokePathNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCoverageModulationNV' => {
    'argdata' => [
      [
        'components',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_raster_multisample',
    'glewImpl' => '__glewCoverageModulationNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCoverageModulationTableNV' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glCoverageModulationTableNV_c',
    'feature' => 'GL_EXT_raster_multisample',
    'glewImpl' => '__glewCoverageModulationTableNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCreateBuffers' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'buffers',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glCreateBuffers_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewCreateBuffers',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCreateCommandListsNV' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'lists',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glCreateCommandListsNV_c',
    'feature' => 'GL_NV_command_list',
    'glewImpl' => '__glewCreateCommandListsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCreateFramebuffers' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'framebuffers',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glCreateFramebuffers_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewCreateFramebuffers',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCreateMemoryObjectsEXT' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'memoryObjects',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glCreateMemoryObjectsEXT_c',
    'feature' => 'GL_EXT_memory_object',
    'glewImpl' => '__glewCreateMemoryObjectsEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCreatePerfQueryINTEL' => {
    'argdata' => [
      [
        'queryId',
        'GLuint '
      ],
      [
        'queryHandle',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glCreatePerfQueryINTEL_c',
    'feature' => 'GL_INTEL_performance_query',
    'glewImpl' => '__glewCreatePerfQueryINTEL',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCreateProgram' => {
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewCreateProgram',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glCreateProgramObjectARB' => {
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewCreateProgramObjectARB',
    'glewtype' => 'fun',
    'restype' => 'GLhandleARB'
  },
  'glCreateProgramPipelines' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'pipelines',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glCreateProgramPipelines_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewCreateProgramPipelines',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCreateQueries' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'ids',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glCreateQueries_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewCreateQueries',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCreateRenderbuffers' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'renderbuffers',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glCreateRenderbuffers_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewCreateRenderbuffers',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCreateSamplers' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'samplers',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glCreateSamplers_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewCreateSamplers',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCreateShader' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewCreateShader',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glCreateShaderObjectARB' => {
    'argdata' => [
      [
        'shaderType',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewCreateShaderObjectARB',
    'glewtype' => 'fun',
    'restype' => 'GLhandleARB'
  },
  'glCreateShaderProgramEXT' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'string',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glCreateShaderProgramEXT_c',
    'feature' => 'GL_EXT_separate_shader_objects',
    'glewImpl' => '__glewCreateShaderProgramEXT',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glCreateShaderProgramv' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'strings',
        'const GLchar * const * '
      ]
    ],
    'binding_name' => 'glCreateShaderProgramv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewCreateShaderProgramv',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glCreateStatesNV' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'states',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glCreateStatesNV_c',
    'feature' => 'GL_NV_command_list',
    'glewImpl' => '__glewCreateStatesNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCreateSyncFromCLeventARB' => {
    'argdata' => [
      [
        'context',
        'cl_context '
      ],
      [
        'event',
        'cl_event '
      ],
      [
        'flags',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_ARB_cl_event',
    'glewImpl' => '__glewCreateSyncFromCLeventARB',
    'glewtype' => 'fun',
    'restype' => 'GLsync'
  },
  'glCreateTextures' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'textures',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glCreateTextures_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewCreateTextures',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCreateTransformFeedbacks' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'ids',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glCreateTransformFeedbacks_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewCreateTransformFeedbacks',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCreateVertexArrays' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'arrays',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glCreateVertexArrays_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewCreateVertexArrays',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCullFace' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCullParameterdvEXT' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLdouble* '
      ]
    ],
    'binding_name' => 'glCullParameterdvEXT_c',
    'feature' => 'GL_EXT_cull_vertex',
    'glewImpl' => '__glewCullParameterdvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCullParameterfvEXT' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glCullParameterfvEXT_c',
    'feature' => 'GL_EXT_cull_vertex',
    'glewImpl' => '__glewCullParameterfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glCurrentPaletteMatrixARB' => {
    'argdata' => [
      [
        'index',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_matrix_palette',
    'glewImpl' => '__glewCurrentPaletteMatrixARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDataPipe' => {
    'argdata' => [
      [
        'space',
        'GLenum '
      ]
    ],
    'feature' => 'GL_SGIX_datapipe',
    'glewImpl' => '__glewDataPipe',
    'glewtype' => 'fun',
    'restype' => 'GLint'
  },
  'glDebugMessageCallback' => {
    'argdata' => [
      [
        'callback',
        'GLDEBUGPROC '
      ],
      [
        'userParam',
        'const void *'
      ]
    ],
    'binding_name' => 'glDebugMessageCallback_c',
    'feature' => 'GL_KHR_debug',
    'glewImpl' => '__glewDebugMessageCallback',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDebugMessageCallbackAMD' => {
    'argdata' => [
      [
        'callback',
        'GLDEBUGPROCAMD '
      ],
      [
        'userParam',
        'void *'
      ]
    ],
    'binding_name' => 'glDebugMessageCallbackAMD_c',
    'feature' => 'GL_AMD_debug_output',
    'glewImpl' => '__glewDebugMessageCallbackAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDebugMessageCallbackARB' => {
    'argdata' => [
      [
        'callback',
        'GLDEBUGPROCARB '
      ],
      [
        'userParam',
        'const void *'
      ]
    ],
    'binding_name' => 'glDebugMessageCallbackARB_c',
    'feature' => 'GL_ARB_debug_output',
    'glewImpl' => '__glewDebugMessageCallbackARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDebugMessageControl' => {
    'argdata' => [
      [
        'source',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'severity',
        'GLenum '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'ids',
        'const GLuint* '
      ],
      [
        'enabled',
        'GLboolean '
      ]
    ],
    'binding_name' => 'glDebugMessageControl_c',
    'feature' => 'GL_KHR_debug',
    'glewImpl' => '__glewDebugMessageControl',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDebugMessageControlARB' => {
    'argdata' => [
      [
        'source',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'severity',
        'GLenum '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'ids',
        'const GLuint* '
      ],
      [
        'enabled',
        'GLboolean '
      ]
    ],
    'binding_name' => 'glDebugMessageControlARB_c',
    'feature' => 'GL_ARB_debug_output',
    'glewImpl' => '__glewDebugMessageControlARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDebugMessageEnableAMD' => {
    'argdata' => [
      [
        'category',
        'GLenum '
      ],
      [
        'severity',
        'GLenum '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'ids',
        'const GLuint* '
      ],
      [
        'enabled',
        'GLboolean '
      ]
    ],
    'binding_name' => 'glDebugMessageEnableAMD_c',
    'feature' => 'GL_AMD_debug_output',
    'glewImpl' => '__glewDebugMessageEnableAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDebugMessageInsert' => {
    'argdata' => [
      [
        'source',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'id',
        'GLuint '
      ],
      [
        'severity',
        'GLenum '
      ],
      [
        'length',
        'GLsizei '
      ],
      [
        'buf',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glDebugMessageInsert_c',
    'feature' => 'GL_KHR_debug',
    'glewImpl' => '__glewDebugMessageInsert',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDebugMessageInsertAMD' => {
    'argdata' => [
      [
        'category',
        'GLenum '
      ],
      [
        'severity',
        'GLenum '
      ],
      [
        'id',
        'GLuint '
      ],
      [
        'length',
        'GLsizei '
      ],
      [
        'buf',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glDebugMessageInsertAMD_c',
    'feature' => 'GL_AMD_debug_output',
    'glewImpl' => '__glewDebugMessageInsertAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDebugMessageInsertARB' => {
    'argdata' => [
      [
        'source',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'id',
        'GLuint '
      ],
      [
        'severity',
        'GLenum '
      ],
      [
        'length',
        'GLsizei '
      ],
      [
        'buf',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glDebugMessageInsertARB_c',
    'feature' => 'GL_ARB_debug_output',
    'glewImpl' => '__glewDebugMessageInsertARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeformSGIX' => {
    'argdata' => [
      [
        'mask',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_SGIX_polynomial_ffd',
    'glewImpl' => '__glewDeformSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteArraySetsEXT' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'arrayset',
        'const void * *'
      ]
    ],
    'binding_name' => 'glDeleteArraySetsEXT_c',
    'feature' => 'GL_EXT_vertex_array_setXXX',
    'glewImpl' => '__glewDeleteArraySetsEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteAsyncMarkersSGIX' => {
    'argdata' => [
      [
        'marker',
        'GLuint '
      ],
      [
        'range',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_SGIX_async',
    'glewImpl' => '__glewDeleteAsyncMarkersSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteBufferRegion' => {
    'argdata' => [
      [
        'region',
        'GLenum '
      ]
    ],
    'feature' => 'GL_KTX_buffer_region',
    'glewImpl' => '__glewDeleteBufferRegion',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteBuffers' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'buffers',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteBuffers_c',
    'feature' => 'GL_VERSION_1_5',
    'glewImpl' => '__glewDeleteBuffers',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteBuffersARB' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'buffers',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteBuffersARB_c',
    'feature' => 'GL_ARB_vertex_buffer_object',
    'glewImpl' => '__glewDeleteBuffersARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteCommandListsNV' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'lists',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteCommandListsNV_c',
    'feature' => 'GL_NV_command_list',
    'glewImpl' => '__glewDeleteCommandListsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteFencesAPPLE' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'fences',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteFencesAPPLE_c',
    'feature' => 'GL_APPLE_fence',
    'glewImpl' => '__glewDeleteFencesAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteFencesNV' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'fences',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteFencesNV_c',
    'feature' => 'GL_NV_fence',
    'glewImpl' => '__glewDeleteFencesNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteFragmentShaderATI' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ATI_fragment_shader',
    'glewImpl' => '__glewDeleteFragmentShaderATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteFramebuffers' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'framebuffers',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteFramebuffers_c',
    'feature' => 'GL_ARB_framebuffer_object',
    'glewImpl' => '__glewDeleteFramebuffers',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteFramebuffersEXT' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'framebuffers',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteFramebuffersEXT_c',
    'feature' => 'GL_EXT_framebuffer_object',
    'glewImpl' => '__glewDeleteFramebuffersEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteLists' => {
    'argdata' => [
      [
        'list',
        'GLuint '
      ],
      [
        'range',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteMPEGPredictorsSGIX' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'predictors',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteMPEGPredictorsSGIX_c',
    'feature' => 'GL_SGIX_mpeg1',
    'glewImpl' => '__glewDeleteMPEGPredictorsSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteMemoryObjectsEXT' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'memoryObjects',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteMemoryObjectsEXT_c',
    'feature' => 'GL_EXT_memory_object',
    'glewImpl' => '__glewDeleteMemoryObjectsEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteNamedStringARB' => {
    'argdata' => [
      [
        'namelen',
        'GLint '
      ],
      [
        'name',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glDeleteNamedStringARB_c',
    'feature' => 'GL_ARB_shading_language_include',
    'glewImpl' => '__glewDeleteNamedStringARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteNamesAMD' => {
    'argdata' => [
      [
        'identifier',
        'GLenum '
      ],
      [
        'num',
        'GLuint '
      ],
      [
        'names',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteNamesAMD_c',
    'feature' => 'GL_AMD_name_gen_delete',
    'glewImpl' => '__glewDeleteNamesAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteObjectARB' => {
    'argdata' => [
      [
        'obj',
        'GLhandleARB '
      ]
    ],
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewDeleteObjectARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteOcclusionQueriesNV' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'ids',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteOcclusionQueriesNV_c',
    'feature' => 'GL_NV_occlusion_query',
    'glewImpl' => '__glewDeleteOcclusionQueriesNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeletePathsNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'range',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewDeletePathsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeletePerfMonitorsAMD' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'monitors',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glDeletePerfMonitorsAMD_c',
    'feature' => 'GL_AMD_performance_monitor',
    'glewImpl' => '__glewDeletePerfMonitorsAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeletePerfQueryINTEL' => {
    'argdata' => [
      [
        'queryHandle',
        'GLuint '
      ]
    ],
    'feature' => 'GL_INTEL_performance_query',
    'glewImpl' => '__glewDeletePerfQueryINTEL',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteProgram' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewDeleteProgram',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteProgramPipelines' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'pipelines',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteProgramPipelines_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewDeleteProgramPipelines',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteProgramsARB' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'programs',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteProgramsARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewDeleteProgramsARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteProgramsNV' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'ids',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteProgramsNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewDeleteProgramsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteQueries' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'ids',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteQueries_c',
    'feature' => 'GL_VERSION_1_5',
    'glewImpl' => '__glewDeleteQueries',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteQueriesANGLE' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'ids',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteQueriesANGLE_c',
    'feature' => 'GL_ANGLE_timer_query',
    'glewImpl' => '__glewDeleteQueriesANGLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteQueriesARB' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'ids',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteQueriesARB_c',
    'feature' => 'GL_ARB_occlusion_query',
    'glewImpl' => '__glewDeleteQueriesARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteRenderbuffers' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'renderbuffers',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteRenderbuffers_c',
    'feature' => 'GL_ARB_framebuffer_object',
    'glewImpl' => '__glewDeleteRenderbuffers',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteRenderbuffersEXT' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'renderbuffers',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteRenderbuffersEXT_c',
    'feature' => 'GL_EXT_framebuffer_object',
    'glewImpl' => '__glewDeleteRenderbuffersEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteSamplers' => {
    'argdata' => [
      [
        'count',
        'GLsizei '
      ],
      [
        'samplers',
        'const GLuint * '
      ]
    ],
    'binding_name' => 'glDeleteSamplers_c',
    'feature' => 'GL_ARB_sampler_objects',
    'glewImpl' => '__glewDeleteSamplers',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteSemaphoresEXT' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'semaphores',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteSemaphoresEXT_c',
    'feature' => 'GL_EXT_semaphore',
    'glewImpl' => '__glewDeleteSemaphoresEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteShader' => {
    'argdata' => [
      [
        'shader',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewDeleteShader',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteStatesNV' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'states',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteStatesNV_c',
    'feature' => 'GL_NV_command_list',
    'glewImpl' => '__glewDeleteStatesNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteSync' => {
    'argdata' => [
      [
        'myGLsync',
        'GLsync '
      ]
    ],
    'feature' => 'GL_ARB_sync',
    'glewImpl' => '__glewDeleteSync',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteSyncAPPLE' => {
    'argdata' => [
      [
        'myGLsync',
        'GLsync '
      ]
    ],
    'feature' => 'GL_APPLE_sync',
    'glewImpl' => '__glewDeleteSyncAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteTextures' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'textures',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glDeleteTextures_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteTexturesEXT' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'textures',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteTexturesEXT_c',
    'feature' => 'GL_EXT_texture_object',
    'glewImpl' => '__glewDeleteTexturesEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteTransformFeedbacks' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'ids',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteTransformFeedbacks_c',
    'feature' => 'GL_ARB_transform_feedback2',
    'glewImpl' => '__glewDeleteTransformFeedbacks',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteTransformFeedbacksNV' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'ids',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteTransformFeedbacksNV_c',
    'feature' => 'GL_NV_transform_feedback2',
    'glewImpl' => '__glewDeleteTransformFeedbacksNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteVertexArrays' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'arrays',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteVertexArrays_c',
    'feature' => 'GL_ARB_vertex_array_object',
    'glewImpl' => '__glewDeleteVertexArrays',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteVertexArraysAPPLE' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'arrays',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteVertexArraysAPPLE_c',
    'feature' => 'GL_APPLE_vertex_array_object',
    'glewImpl' => '__glewDeleteVertexArraysAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteVertexArraysSGIX' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'arrays',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glDeleteVertexArraysSGIX_c',
    'feature' => 'GL_SGIX_vertex_array_object',
    'glewImpl' => '__glewDeleteVertexArraysSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDeleteVertexShaderEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewDeleteVertexShaderEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDepthBoundsEXT' => {
    'argdata' => [
      [
        'zmin',
        'GLclampd '
      ],
      [
        'zmax',
        'GLclampd '
      ]
    ],
    'feature' => 'GL_EXT_depth_bounds_test',
    'glewImpl' => '__glewDepthBoundsEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDepthBoundsdNV' => {
    'argdata' => [
      [
        'zmin',
        'GLdouble '
      ],
      [
        'zmax',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_NV_depth_buffer_float',
    'glewImpl' => '__glewDepthBoundsdNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDepthFunc' => {
    'argdata' => [
      [
        'func',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDepthMask' => {
    'argdata' => [
      [
        'flag',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDepthRange' => {
    'argdata' => [
      [
        'zNear',
        'GLclampd '
      ],
      [
        'zFar',
        'GLclampd '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDepthRangeArrayfvNV' => {
    'argdata' => [
      [
        'first',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'v',
        'const GLfloat * '
      ]
    ],
    'binding_name' => 'glDepthRangeArrayfvNV_c',
    'feature' => 'GL_NV_viewport_array',
    'glewImpl' => '__glewDepthRangeArrayfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDepthRangeArrayv' => {
    'argdata' => [
      [
        'first',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'v',
        'const GLclampd * '
      ]
    ],
    'binding_name' => 'glDepthRangeArrayv_c',
    'feature' => 'GL_ARB_viewport_array',
    'glewImpl' => '__glewDepthRangeArrayv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDepthRangeIndexed' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'n',
        'GLclampd '
      ],
      [
        'f',
        'GLclampd '
      ]
    ],
    'feature' => 'GL_ARB_viewport_array',
    'glewImpl' => '__glewDepthRangeIndexed',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDepthRangeIndexedfNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'n',
        'GLfloat '
      ],
      [
        'f',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_NV_viewport_array',
    'glewImpl' => '__glewDepthRangeIndexedfNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDepthRangedNV' => {
    'argdata' => [
      [
        'zNear',
        'GLdouble '
      ],
      [
        'zFar',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_NV_depth_buffer_float',
    'glewImpl' => '__glewDepthRangedNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDepthRangef' => {
    'argdata' => [
      [
        'n',
        'GLclampf '
      ],
      [
        'f',
        'GLclampf '
      ]
    ],
    'feature' => 'GL_ARB_ES2_compatibility',
    'glewImpl' => '__glewDepthRangef',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDepthRangex' => {
    'argdata' => [
      [
        'zNear',
        'GLclampx '
      ],
      [
        'zFar',
        'GLclampx '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewDepthRangex',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDetachObjectARB' => {
    'argdata' => [
      [
        'containerObj',
        'GLhandleARB '
      ],
      [
        'attachedObj',
        'GLhandleARB '
      ]
    ],
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewDetachObjectARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDetachShader' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'shader',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewDetachShader',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDetailTexFuncSGIS' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'points',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glDetailTexFuncSGIS_c',
    'feature' => 'GL_SGIS_detail_texture',
    'glewImpl' => '__glewDetailTexFuncSGIS',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDisable' => {
    'argdata' => [
      [
        'cap',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDisableClientState' => {
    'argdata' => [
      [
        'array',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDisableClientStateIndexedEXT' => {
    'argdata' => [
      [
        'array',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewDisableClientStateIndexedEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDisableClientStateiEXT' => {
    'argdata' => [
      [
        'array',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewDisableClientStateiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDisableDriverControlQCOM' => {
    'argdata' => [
      [
        'driverControl',
        'GLuint '
      ]
    ],
    'feature' => 'GL_QCOM_driver_control',
    'glewImpl' => '__glewDisableDriverControlQCOM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDisableIndexedEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_draw_buffers2',
    'glewImpl' => '__glewDisableIndexedEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDisableVariantClientStateEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewDisableVariantClientStateEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDisableVertexArrayAttrib' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewDisableVertexArrayAttrib',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDisableVertexArrayAttribEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewDisableVertexArrayAttribEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDisableVertexArrayEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'array',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewDisableVertexArrayEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDisableVertexAttribAPPLE' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ]
    ],
    'feature' => 'GL_APPLE_vertex_program_evaluators',
    'glewImpl' => '__glewDisableVertexAttribAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDisableVertexAttribArray' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewDisableVertexAttribArray',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDisableVertexAttribArrayARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewDisableVertexAttribArrayARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDisablei' => {
    'argdata' => [
      [
        'cap',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewDisablei',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDisableiEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_draw_buffers_indexed',
    'glewImpl' => '__glewDisableiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDisableiNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_viewport_array',
    'glewImpl' => '__glewDisableiNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDiscardFramebufferEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'numAttachments',
        'GLsizei '
      ],
      [
        'attachments',
        'const GLenum* '
      ]
    ],
    'binding_name' => 'glDiscardFramebufferEXT_c',
    'feature' => 'GL_EXT_discard_framebuffer',
    'glewImpl' => '__glewDiscardFramebufferEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDispatchCompute' => {
    'argdata' => [
      [
        'num_groups_x',
        'GLuint '
      ],
      [
        'num_groups_y',
        'GLuint '
      ],
      [
        'num_groups_z',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_compute_shader',
    'glewImpl' => '__glewDispatchCompute',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDispatchComputeGroupSizeARB' => {
    'argdata' => [
      [
        'num_groups_x',
        'GLuint '
      ],
      [
        'num_groups_y',
        'GLuint '
      ],
      [
        'num_groups_z',
        'GLuint '
      ],
      [
        'group_size_x',
        'GLuint '
      ],
      [
        'group_size_y',
        'GLuint '
      ],
      [
        'group_size_z',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_compute_variable_group_size',
    'glewImpl' => '__glewDispatchComputeGroupSizeARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDispatchComputeIndirect' => {
    'argdata' => [
      [
        'indirect',
        'GLintptr '
      ]
    ],
    'feature' => 'GL_ARB_compute_shader',
    'glewImpl' => '__glewDispatchComputeIndirect',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawArrays' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'first',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawArraysEXT' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'first',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_vertex_array',
    'glewImpl' => '__glewDrawArraysEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawArraysIndirect' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'indirect',
        'const void *'
      ]
    ],
    'binding_name' => 'glDrawArraysIndirect_c',
    'feature' => 'GL_ARB_draw_indirect',
    'glewImpl' => '__glewDrawArraysIndirect',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawArraysInstanced' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'first',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'primcount',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_VERSION_3_1',
    'glewImpl' => '__glewDrawArraysInstanced',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawArraysInstancedANGLE' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'first',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'primcount',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ANGLE_instanced_arrays',
    'glewImpl' => '__glewDrawArraysInstancedANGLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawArraysInstancedARB' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'first',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'primcount',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_instanced_arrays',
    'glewImpl' => '__glewDrawArraysInstancedARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawArraysInstancedBaseInstance' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'first',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'primcount',
        'GLsizei '
      ],
      [
        'baseinstance',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_base_instance',
    'glewImpl' => '__glewDrawArraysInstancedBaseInstance',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawArraysInstancedBaseInstanceEXT' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'first',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'instancecount',
        'GLsizei '
      ],
      [
        'baseinstance',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_base_instance',
    'glewImpl' => '__glewDrawArraysInstancedBaseInstanceEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawArraysInstancedEXT' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'start',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'primcount',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_draw_instanced',
    'glewImpl' => '__glewDrawArraysInstancedEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawArraysInstancedNV' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'first',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'primcount',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NV_draw_instanced',
    'glewImpl' => '__glewDrawArraysInstancedNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawBuffer' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawBufferRegion' => {
    'argdata' => [
      [
        'region',
        'GLuint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'xDest',
        'GLint '
      ],
      [
        'yDest',
        'GLint '
      ]
    ],
    'feature' => 'GL_KTX_buffer_region',
    'glewImpl' => '__glewDrawBufferRegion',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawBuffers' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'bufs',
        'const GLenum* '
      ]
    ],
    'binding_name' => 'glDrawBuffers_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewDrawBuffers',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawBuffersARB' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'bufs',
        'const GLenum* '
      ]
    ],
    'binding_name' => 'glDrawBuffersARB_c',
    'feature' => 'GL_ARB_draw_buffers',
    'glewImpl' => '__glewDrawBuffersARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawBuffersATI' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'bufs',
        'const GLenum* '
      ]
    ],
    'binding_name' => 'glDrawBuffersATI_c',
    'feature' => 'GL_ATI_draw_buffers',
    'glewImpl' => '__glewDrawBuffersATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawBuffersEXT' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'bufs',
        'const GLenum* '
      ]
    ],
    'binding_name' => 'glDrawBuffersEXT_c',
    'feature' => 'GL_EXT_draw_buffers',
    'glewImpl' => '__glewDrawBuffersEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawBuffersIndexedEXT' => {
    'argdata' => [
      [
        'n',
        'GLint '
      ],
      [
        'location',
        'const GLenum* '
      ],
      [
        'indices',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glDrawBuffersIndexedEXT_c',
    'feature' => 'GL_EXT_multiview_draw_buffers',
    'glewImpl' => '__glewDrawBuffersIndexedEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawBuffersNV' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'bufs',
        'const GLenum* '
      ]
    ],
    'binding_name' => 'glDrawBuffersNV_c',
    'feature' => 'GL_NV_draw_buffers',
    'glewImpl' => '__glewDrawBuffersNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawCommandsAddressNV' => {
    'argdata' => [
      [
        'primitiveMode',
        'GLenum '
      ],
      [
        'indirects',
        'const GLuint64* '
      ],
      [
        'sizes',
        'const GLsizei* '
      ],
      [
        'count',
        'GLuint '
      ]
    ],
    'binding_name' => 'glDrawCommandsAddressNV_c',
    'feature' => 'GL_NV_command_list',
    'glewImpl' => '__glewDrawCommandsAddressNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawCommandsNV' => {
    'argdata' => [
      [
        'primitiveMode',
        'GLenum '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'indirects',
        'const GLintptr* '
      ],
      [
        'sizes',
        'const GLsizei* '
      ],
      [
        'count',
        'GLuint '
      ]
    ],
    'binding_name' => 'glDrawCommandsNV_c',
    'feature' => 'GL_NV_command_list',
    'glewImpl' => '__glewDrawCommandsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawCommandsStatesAddressNV' => {
    'argdata' => [
      [
        'indirects',
        'const GLuint64* '
      ],
      [
        'sizes',
        'const GLsizei* '
      ],
      [
        'states',
        'const GLuint* '
      ],
      [
        'fbos',
        'const GLuint* '
      ],
      [
        'count',
        'GLuint '
      ]
    ],
    'binding_name' => 'glDrawCommandsStatesAddressNV_c',
    'feature' => 'GL_NV_command_list',
    'glewImpl' => '__glewDrawCommandsStatesAddressNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawCommandsStatesNV' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'indirects',
        'const GLintptr* '
      ],
      [
        'sizes',
        'const GLsizei* '
      ],
      [
        'states',
        'const GLuint* '
      ],
      [
        'fbos',
        'const GLuint* '
      ],
      [
        'count',
        'GLuint '
      ]
    ],
    'binding_name' => 'glDrawCommandsStatesNV_c',
    'feature' => 'GL_NV_command_list',
    'glewImpl' => '__glewDrawCommandsStatesNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawElementArrayAPPLE' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'first',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_APPLE_element_array',
    'glewImpl' => '__glewDrawElementArrayAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawElementArrayATI' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'count',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ATI_element_array',
    'glewImpl' => '__glewDrawElementArrayATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawElements' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'const void *'
      ]
    ],
    'binding_name' => 'glDrawElements_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawElementsBaseVertex' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'void *'
      ],
      [
        'basevertex',
        'GLint '
      ]
    ],
    'binding_name' => 'glDrawElementsBaseVertex_c',
    'feature' => 'GL_ARB_draw_elements_base_vertex',
    'glewImpl' => '__glewDrawElementsBaseVertex',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawElementsBaseVertexEXT' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'const void *'
      ],
      [
        'basevertex',
        'GLint '
      ]
    ],
    'binding_name' => 'glDrawElementsBaseVertexEXT_c',
    'feature' => 'GL_EXT_draw_elements_base_vertex',
    'glewImpl' => '__glewDrawElementsBaseVertexEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawElementsIndirect' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indirect',
        'const void *'
      ]
    ],
    'binding_name' => 'glDrawElementsIndirect_c',
    'feature' => 'GL_ARB_draw_indirect',
    'glewImpl' => '__glewDrawElementsIndirect',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawElementsInstanced' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'const void* '
      ],
      [
        'primcount',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glDrawElementsInstanced_c',
    'feature' => 'GL_VERSION_3_1',
    'glewImpl' => '__glewDrawElementsInstanced',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawElementsInstancedANGLE' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'const void *'
      ],
      [
        'primcount',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glDrawElementsInstancedANGLE_c',
    'feature' => 'GL_ANGLE_instanced_arrays',
    'glewImpl' => '__glewDrawElementsInstancedANGLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawElementsInstancedARB' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'const void* '
      ],
      [
        'primcount',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glDrawElementsInstancedARB_c',
    'feature' => 'GL_ARB_instanced_arrays',
    'glewImpl' => '__glewDrawElementsInstancedARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawElementsInstancedBaseInstance' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'const void *'
      ],
      [
        'primcount',
        'GLsizei '
      ],
      [
        'baseinstance',
        'GLuint '
      ]
    ],
    'binding_name' => 'glDrawElementsInstancedBaseInstance_c',
    'feature' => 'GL_ARB_base_instance',
    'glewImpl' => '__glewDrawElementsInstancedBaseInstance',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawElementsInstancedBaseInstanceEXT' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'const void *'
      ],
      [
        'instancecount',
        'GLsizei '
      ],
      [
        'baseinstance',
        'GLuint '
      ]
    ],
    'binding_name' => 'glDrawElementsInstancedBaseInstanceEXT_c',
    'feature' => 'GL_EXT_base_instance',
    'glewImpl' => '__glewDrawElementsInstancedBaseInstanceEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawElementsInstancedBaseVertex' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'const void *'
      ],
      [
        'primcount',
        'GLsizei '
      ],
      [
        'basevertex',
        'GLint '
      ]
    ],
    'binding_name' => 'glDrawElementsInstancedBaseVertex_c',
    'feature' => 'GL_ARB_draw_elements_base_vertex',
    'glewImpl' => '__glewDrawElementsInstancedBaseVertex',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawElementsInstancedBaseVertexBaseInstance' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'const void *'
      ],
      [
        'primcount',
        'GLsizei '
      ],
      [
        'basevertex',
        'GLint '
      ],
      [
        'baseinstance',
        'GLuint '
      ]
    ],
    'binding_name' => 'glDrawElementsInstancedBaseVertexBaseInstance_c',
    'feature' => 'GL_ARB_base_instance',
    'glewImpl' => '__glewDrawElementsInstancedBaseVertexBaseInstance',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawElementsInstancedBaseVertexBaseInstanceEXT' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'const void *'
      ],
      [
        'instancecount',
        'GLsizei '
      ],
      [
        'basevertex',
        'GLint '
      ],
      [
        'baseinstance',
        'GLuint '
      ]
    ],
    'binding_name' => 'glDrawElementsInstancedBaseVertexBaseInstanceEXT_c',
    'feature' => 'GL_EXT_base_instance',
    'glewImpl' => '__glewDrawElementsInstancedBaseVertexBaseInstanceEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawElementsInstancedBaseVertexEXT' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'const void *'
      ],
      [
        'instancecount',
        'GLsizei '
      ],
      [
        'basevertex',
        'GLint '
      ]
    ],
    'binding_name' => 'glDrawElementsInstancedBaseVertexEXT_c',
    'feature' => 'GL_EXT_draw_elements_base_vertex',
    'glewImpl' => '__glewDrawElementsInstancedBaseVertexEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawElementsInstancedEXT' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'const void *'
      ],
      [
        'primcount',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glDrawElementsInstancedEXT_c',
    'feature' => 'GL_EXT_draw_instanced',
    'glewImpl' => '__glewDrawElementsInstancedEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawElementsInstancedNV' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'const void *'
      ],
      [
        'primcount',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glDrawElementsInstancedNV_c',
    'feature' => 'GL_NV_draw_instanced',
    'glewImpl' => '__glewDrawElementsInstancedNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawPixels' => {
    'argdata' => [
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glDrawPixels_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawRangeElementArrayAPPLE' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'start',
        'GLuint '
      ],
      [
        'end',
        'GLuint '
      ],
      [
        'first',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_APPLE_element_array',
    'glewImpl' => '__glewDrawRangeElementArrayAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawRangeElementArrayATI' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'start',
        'GLuint '
      ],
      [
        'end',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ATI_element_array',
    'glewImpl' => '__glewDrawRangeElementArrayATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawRangeElements' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'start',
        'GLuint '
      ],
      [
        'end',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'const void *'
      ]
    ],
    'binding_name' => 'glDrawRangeElements_c',
    'feature' => 'GL_VERSION_1_2',
    'glewImpl' => '__glewDrawRangeElements',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawRangeElementsBaseVertex' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'start',
        'GLuint '
      ],
      [
        'end',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'void *'
      ],
      [
        'basevertex',
        'GLint '
      ]
    ],
    'binding_name' => 'glDrawRangeElementsBaseVertex_c',
    'feature' => 'GL_ARB_draw_elements_base_vertex',
    'glewImpl' => '__glewDrawRangeElementsBaseVertex',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawRangeElementsBaseVertexEXT' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'start',
        'GLuint '
      ],
      [
        'end',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'const void *'
      ],
      [
        'basevertex',
        'GLint '
      ]
    ],
    'binding_name' => 'glDrawRangeElementsBaseVertexEXT_c',
    'feature' => 'GL_EXT_draw_elements_base_vertex',
    'glewImpl' => '__glewDrawRangeElementsBaseVertexEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawRangeElementsEXT' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'start',
        'GLuint '
      ],
      [
        'end',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'const void *'
      ]
    ],
    'binding_name' => 'glDrawRangeElementsEXT_c',
    'feature' => 'GL_EXT_draw_range_elements',
    'glewImpl' => '__glewDrawRangeElementsEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawTextureNV' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'sampler',
        'GLuint '
      ],
      [
        'x0',
        'GLfloat '
      ],
      [
        'y0',
        'GLfloat '
      ],
      [
        'x1',
        'GLfloat '
      ],
      [
        'y1',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ],
      [
        's0',
        'GLfloat '
      ],
      [
        't0',
        'GLfloat '
      ],
      [
        's1',
        'GLfloat '
      ],
      [
        't1',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_NV_draw_texture',
    'glewImpl' => '__glewDrawTextureNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawTransformFeedback' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_transform_feedback2',
    'glewImpl' => '__glewDrawTransformFeedback',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawTransformFeedbackInstanced' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'id',
        'GLuint '
      ],
      [
        'primcount',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_transform_feedback_instanced',
    'glewImpl' => '__glewDrawTransformFeedbackInstanced',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawTransformFeedbackNV' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_transform_feedback2',
    'glewImpl' => '__glewDrawTransformFeedbackNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawTransformFeedbackStream' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'id',
        'GLuint '
      ],
      [
        'stream',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_transform_feedback3',
    'glewImpl' => '__glewDrawTransformFeedbackStream',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawTransformFeedbackStreamInstanced' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'id',
        'GLuint '
      ],
      [
        'stream',
        'GLuint '
      ],
      [
        'primcount',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_transform_feedback_instanced',
    'glewImpl' => '__glewDrawTransformFeedbackStreamInstanced',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glDrawVkImageNV' => {
    'argdata' => [
      [
        'vkImage',
        'GLuint64 '
      ],
      [
        'sampler',
        'GLuint '
      ],
      [
        'x0',
        'GLfloat '
      ],
      [
        'y0',
        'GLfloat '
      ],
      [
        'x1',
        'GLfloat '
      ],
      [
        'y1',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ],
      [
        's0',
        'GLfloat '
      ],
      [
        't0',
        'GLfloat '
      ],
      [
        's1',
        'GLfloat '
      ],
      [
        't1',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_NV_draw_vulkan_image',
    'glewImpl' => '__glewDrawVkImageNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEdgeFlag' => {
    'argdata' => [
      [
        'flag',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEdgeFlagFormatNV' => {
    'argdata' => [
      [
        'stride',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NV_vertex_buffer_unified_memory',
    'glewImpl' => '__glewEdgeFlagFormatNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEdgeFlagPointer' => {
    'argdata' => [
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glEdgeFlagPointer_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEdgeFlagPointerEXT' => {
    'argdata' => [
      [
        'stride',
        'GLsizei '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'pointer',
        'const GLboolean* '
      ]
    ],
    'binding_name' => 'glEdgeFlagPointerEXT_c',
    'feature' => 'GL_EXT_vertex_array',
    'glewImpl' => '__glewEdgeFlagPointerEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEdgeFlagPointerListIBM' => {
    'argdata' => [
      [
        'stride',
        'GLint '
      ],
      [
        'pointer',
        'const GLboolean ** '
      ],
      [
        'ptrstride',
        'GLint '
      ]
    ],
    'binding_name' => 'glEdgeFlagPointerListIBM_c',
    'feature' => 'GL_IBM_vertex_array_lists',
    'glewImpl' => '__glewEdgeFlagPointerListIBM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEdgeFlagv' => {
    'argdata' => [
      [
        'flag',
        'const GLboolean *'
      ]
    ],
    'binding_name' => 'glEdgeFlagv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glElementPointerAPPLE' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glElementPointerAPPLE_c',
    'feature' => 'GL_APPLE_element_array',
    'glewImpl' => '__glewElementPointerAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glElementPointerATI' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glElementPointerATI_c',
    'feature' => 'GL_ATI_element_array',
    'glewImpl' => '__glewElementPointerATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEnable' => {
    'argdata' => [
      [
        'cap',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEnableClientState' => {
    'argdata' => [
      [
        'array',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEnableClientStateIndexedEXT' => {
    'argdata' => [
      [
        'array',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewEnableClientStateIndexedEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEnableClientStateiEXT' => {
    'argdata' => [
      [
        'array',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewEnableClientStateiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEnableDriverControlQCOM' => {
    'argdata' => [
      [
        'driverControl',
        'GLuint '
      ]
    ],
    'feature' => 'GL_QCOM_driver_control',
    'glewImpl' => '__glewEnableDriverControlQCOM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEnableIndexedEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_draw_buffers2',
    'glewImpl' => '__glewEnableIndexedEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEnableVariantClientStateEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewEnableVariantClientStateEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEnableVertexArrayAttrib' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewEnableVertexArrayAttrib',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEnableVertexArrayAttribEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewEnableVertexArrayAttribEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEnableVertexArrayEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'array',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewEnableVertexArrayEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEnableVertexAttribAPPLE' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ]
    ],
    'feature' => 'GL_APPLE_vertex_program_evaluators',
    'glewImpl' => '__glewEnableVertexAttribAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEnableVertexAttribArray' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewEnableVertexAttribArray',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEnableVertexAttribArrayARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewEnableVertexAttribArrayARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEnablei' => {
    'argdata' => [
      [
        'cap',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewEnablei',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEnableiEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_draw_buffers_indexed',
    'glewImpl' => '__glewEnableiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEnableiNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_viewport_array',
    'glewImpl' => '__glewEnableiNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEnd' => {
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEndConditionalRender' => {
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewEndConditionalRender',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEndConditionalRenderNV' => {
    'feature' => 'GL_NV_conditional_render',
    'glewImpl' => '__glewEndConditionalRenderNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEndConditionalRenderNVX' => {
    'feature' => 'GL_NVX_conditional_render',
    'glewImpl' => '__glewEndConditionalRenderNVX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEndFragmentShaderATI' => {
    'feature' => 'GL_ATI_fragment_shader',
    'glewImpl' => '__glewEndFragmentShaderATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEndList' => {
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEndOcclusionQueryNV' => {
    'feature' => 'GL_NV_occlusion_query',
    'glewImpl' => '__glewEndOcclusionQueryNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEndPerfMonitorAMD' => {
    'argdata' => [
      [
        'monitor',
        'GLuint '
      ]
    ],
    'feature' => 'GL_AMD_performance_monitor',
    'glewImpl' => '__glewEndPerfMonitorAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEndPerfQueryINTEL' => {
    'argdata' => [
      [
        'queryHandle',
        'GLuint '
      ]
    ],
    'feature' => 'GL_INTEL_performance_query',
    'glewImpl' => '__glewEndPerfQueryINTEL',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEndQuery' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_5',
    'glewImpl' => '__glewEndQuery',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEndQueryANGLE' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ANGLE_timer_query',
    'glewImpl' => '__glewEndQueryANGLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEndQueryARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_occlusion_query',
    'glewImpl' => '__glewEndQueryARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEndQueryIndexed' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_transform_feedback3',
    'glewImpl' => '__glewEndQueryIndexed',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEndSceneEXT' => {
    'feature' => 'GL_EXT_scene_marker',
    'glewImpl' => '__glewEndSceneEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEndTilingQCOM' => {
    'argdata' => [
      [
        'preserveMask',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_QCOM_tiled_rendering',
    'glewImpl' => '__glewEndTilingQCOM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEndTransformFeedback' => {
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewEndTransformFeedback',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEndTransformFeedbackEXT' => {
    'feature' => 'GL_EXT_transform_feedback',
    'glewImpl' => '__glewEndTransformFeedbackEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEndTransformFeedbackNV' => {
    'feature' => 'GL_NV_transform_feedback',
    'glewImpl' => '__glewEndTransformFeedbackNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEndVertexShaderEXT' => {
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewEndVertexShaderEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEndVideoCaptureNV' => {
    'argdata' => [
      [
        'video_capture_slot',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_video_capture',
    'glewImpl' => '__glewEndVideoCaptureNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEvalCoord1d' => {
    'argdata' => [
      [
        'u',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEvalCoord1dv' => {
    'argdata' => [
      [
        'u',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glEvalCoord1dv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEvalCoord1f' => {
    'argdata' => [
      [
        'u',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEvalCoord1fv' => {
    'argdata' => [
      [
        'u',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glEvalCoord1fv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEvalCoord2d' => {
    'argdata' => [
      [
        'u',
        'GLdouble '
      ],
      [
        'v',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEvalCoord2dv' => {
    'argdata' => [
      [
        'u',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glEvalCoord2dv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEvalCoord2f' => {
    'argdata' => [
      [
        'u',
        'GLfloat '
      ],
      [
        'v',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEvalCoord2fv' => {
    'argdata' => [
      [
        'u',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glEvalCoord2fv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEvalMapsNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_evaluators',
    'glewImpl' => '__glewEvalMapsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEvalMesh1' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'i1',
        'GLint '
      ],
      [
        'i2',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEvalMesh2' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'i1',
        'GLint '
      ],
      [
        'i2',
        'GLint '
      ],
      [
        'j1',
        'GLint '
      ],
      [
        'j2',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEvalPoint1' => {
    'argdata' => [
      [
        'i',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glEvalPoint2' => {
    'argdata' => [
      [
        'i',
        'GLint '
      ],
      [
        'j',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glExecuteProgramNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'id',
        'GLuint '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glExecuteProgramNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewExecuteProgramNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glExtGetBufferPointervQCOM' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'params',
        'void** '
      ]
    ],
    'binding_name' => 'glExtGetBufferPointervQCOM_c',
    'feature' => 'GL_QCOM_extended_get',
    'glewImpl' => '__glewExtGetBufferPointervQCOM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glExtGetBuffersQCOM' => {
    'argdata' => [
      [
        'buffers',
        'GLuint* '
      ],
      [
        'maxBuffers',
        'GLint '
      ],
      [
        'numBuffers',
        'GLint* '
      ]
    ],
    'binding_name' => 'glExtGetBuffersQCOM_c',
    'feature' => 'GL_QCOM_extended_get',
    'glewImpl' => '__glewExtGetBuffersQCOM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glExtGetFramebuffersQCOM' => {
    'argdata' => [
      [
        'framebuffers',
        'GLuint* '
      ],
      [
        'maxFramebuffers',
        'GLint '
      ],
      [
        'numFramebuffers',
        'GLint* '
      ]
    ],
    'binding_name' => 'glExtGetFramebuffersQCOM_c',
    'feature' => 'GL_QCOM_extended_get',
    'glewImpl' => '__glewExtGetFramebuffersQCOM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glExtGetProgramBinarySourceQCOM' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'shadertype',
        'GLenum '
      ],
      [
        'source',
        'GLchar* '
      ],
      [
        'length',
        'GLint* '
      ]
    ],
    'binding_name' => 'glExtGetProgramBinarySourceQCOM_c',
    'feature' => 'GL_QCOM_extended_get2',
    'glewImpl' => '__glewExtGetProgramBinarySourceQCOM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glExtGetProgramsQCOM' => {
    'argdata' => [
      [
        'programs',
        'GLuint* '
      ],
      [
        'maxPrograms',
        'GLint '
      ],
      [
        'numPrograms',
        'GLint* '
      ]
    ],
    'binding_name' => 'glExtGetProgramsQCOM_c',
    'feature' => 'GL_QCOM_extended_get2',
    'glewImpl' => '__glewExtGetProgramsQCOM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glExtGetRenderbuffersQCOM' => {
    'argdata' => [
      [
        'renderbuffers',
        'GLuint* '
      ],
      [
        'maxRenderbuffers',
        'GLint '
      ],
      [
        'numRenderbuffers',
        'GLint* '
      ]
    ],
    'binding_name' => 'glExtGetRenderbuffersQCOM_c',
    'feature' => 'GL_QCOM_extended_get',
    'glewImpl' => '__glewExtGetRenderbuffersQCOM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glExtGetShadersQCOM' => {
    'argdata' => [
      [
        'shaders',
        'GLuint* '
      ],
      [
        'maxShaders',
        'GLint '
      ],
      [
        'numShaders',
        'GLint* '
      ]
    ],
    'binding_name' => 'glExtGetShadersQCOM_c',
    'feature' => 'GL_QCOM_extended_get2',
    'glewImpl' => '__glewExtGetShadersQCOM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glExtGetTexLevelParameterivQCOM' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'face',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glExtGetTexLevelParameterivQCOM_c',
    'feature' => 'GL_QCOM_extended_get',
    'glewImpl' => '__glewExtGetTexLevelParameterivQCOM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glExtGetTexSubImageQCOM' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'texels',
        'void *'
      ]
    ],
    'binding_name' => 'glExtGetTexSubImageQCOM_c',
    'feature' => 'GL_QCOM_extended_get',
    'glewImpl' => '__glewExtGetTexSubImageQCOM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glExtGetTexturesQCOM' => {
    'argdata' => [
      [
        'textures',
        'GLuint* '
      ],
      [
        'maxTextures',
        'GLint '
      ],
      [
        'numTextures',
        'GLint* '
      ]
    ],
    'binding_name' => 'glExtGetTexturesQCOM_c',
    'feature' => 'GL_QCOM_extended_get',
    'glewImpl' => '__glewExtGetTexturesQCOM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glExtIsProgramBinaryQCOM' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ]
    ],
    'feature' => 'GL_QCOM_extended_get2',
    'glewImpl' => '__glewExtIsProgramBinaryQCOM',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glExtTexObjectStateOverrideiQCOM' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_QCOM_extended_get',
    'glewImpl' => '__glewExtTexObjectStateOverrideiQCOM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glExtractComponentEXT' => {
    'argdata' => [
      [
        'res',
        'GLuint '
      ],
      [
        'src',
        'GLuint '
      ],
      [
        'num',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewExtractComponentEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFeedbackBuffer' => {
    'argdata' => [
      [
        'size',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'buffer',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glFeedbackBuffer_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFenceSync' => {
    'argdata' => [
      [
        'condition',
        'GLenum '
      ],
      [
        'flags',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_ARB_sync',
    'glewImpl' => '__glewFenceSync',
    'glewtype' => 'fun',
    'restype' => 'GLsync'
  },
  'glFenceSyncAPPLE' => {
    'argdata' => [
      [
        'condition',
        'GLenum '
      ],
      [
        'flags',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_APPLE_sync',
    'glewImpl' => '__glewFenceSyncAPPLE',
    'glewtype' => 'fun',
    'restype' => 'GLsync'
  },
  'glFinalCombinerInputNV' => {
    'argdata' => [
      [
        'variable',
        'GLenum '
      ],
      [
        'input',
        'GLenum '
      ],
      [
        'mapping',
        'GLenum '
      ],
      [
        'componentUsage',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_register_combiners',
    'glewImpl' => '__glewFinalCombinerInputNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFinish' => {
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFinishAsyncSGIX' => {
    'argdata' => [
      [
        'markerp',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glFinishAsyncSGIX_c',
    'feature' => 'GL_SGIX_async',
    'glewImpl' => '__glewFinishAsyncSGIX',
    'glewtype' => 'fun',
    'restype' => 'GLint'
  },
  'glFinishFenceAPPLE' => {
    'argdata' => [
      [
        'fence',
        'GLuint '
      ]
    ],
    'feature' => 'GL_APPLE_fence',
    'glewImpl' => '__glewFinishFenceAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFinishFenceNV' => {
    'argdata' => [
      [
        'fence',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_fence',
    'glewImpl' => '__glewFinishFenceNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFinishObjectAPPLE' => {
    'argdata' => [
      [
        'object',
        'GLenum '
      ],
      [
        'name',
        'GLint '
      ]
    ],
    'feature' => 'GL_APPLE_fence',
    'glewImpl' => '__glewFinishObjectAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFinishTextureSUNX' => {
    'feature' => 'GL_SUNX_constant_data',
    'glewImpl' => '__glewFinishTextureSUNX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFlush' => {
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFlushMappedBufferRange' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'length',
        'GLsizeiptr '
      ]
    ],
    'feature' => 'GL_ARB_map_buffer_range',
    'glewImpl' => '__glewFlushMappedBufferRange',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFlushMappedBufferRangeAPPLE' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ]
    ],
    'feature' => 'GL_APPLE_flush_buffer_range',
    'glewImpl' => '__glewFlushMappedBufferRangeAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFlushMappedBufferRangeEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'length',
        'GLsizeiptr '
      ]
    ],
    'feature' => 'GL_EXT_map_buffer_range',
    'glewImpl' => '__glewFlushMappedBufferRangeEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFlushMappedNamedBufferRange' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'length',
        'GLsizeiptr '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewFlushMappedNamedBufferRange',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFlushMappedNamedBufferRangeEXT' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'length',
        'GLsizeiptr '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewFlushMappedNamedBufferRangeEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFlushPixelDataRangeNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_pixel_data_range',
    'glewImpl' => '__glewFlushPixelDataRangeNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFlushRasterSGIX' => {
    'feature' => 'GL_SGIX_flush_raster',
    'glewImpl' => '__glewFlushRasterSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFlushVertexArrayRangeAPPLE' => {
    'argdata' => [
      [
        'length',
        'GLsizei '
      ],
      [
        'pointer',
        'void *'
      ]
    ],
    'binding_name' => 'glFlushVertexArrayRangeAPPLE_c',
    'feature' => 'GL_APPLE_vertex_array_range',
    'glewImpl' => '__glewFlushVertexArrayRangeAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFlushVertexArrayRangeNV' => {
    'feature' => 'GL_NV_vertex_array_range',
    'glewImpl' => '__glewFlushVertexArrayRangeNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogCoordFormatNV' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NV_vertex_buffer_unified_memory',
    'glewImpl' => '__glewFogCoordFormatNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogCoordPointer' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glFogCoordPointer_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewFogCoordPointer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogCoordPointerEXT' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glFogCoordPointerEXT_c',
    'feature' => 'GL_EXT_fog_coord',
    'glewImpl' => '__glewFogCoordPointerEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogCoordPointerListIBM' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLint '
      ],
      [
        'pointer',
        'const void** '
      ],
      [
        'ptrstride',
        'GLint '
      ]
    ],
    'binding_name' => 'glFogCoordPointerListIBM_c',
    'feature' => 'GL_IBM_vertex_array_lists',
    'glewImpl' => '__glewFogCoordPointerListIBM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogCoordd' => {
    'argdata' => [
      [
        'coord',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewFogCoordd',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogCoorddEXT' => {
    'argdata' => [
      [
        'coord',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_EXT_fog_coord',
    'glewImpl' => '__glewFogCoorddEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogCoorddv' => {
    'argdata' => [
      [
        'coord',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glFogCoorddv_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewFogCoorddv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogCoorddvEXT' => {
    'argdata' => [
      [
        'coord',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glFogCoorddvEXT_c',
    'feature' => 'GL_EXT_fog_coord',
    'glewImpl' => '__glewFogCoorddvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogCoordf' => {
    'argdata' => [
      [
        'coord',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewFogCoordf',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogCoordfEXT' => {
    'argdata' => [
      [
        'coord',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_fog_coord',
    'glewImpl' => '__glewFogCoordfEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogCoordfv' => {
    'argdata' => [
      [
        'coord',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glFogCoordfv_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewFogCoordfv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogCoordfvEXT' => {
    'argdata' => [
      [
        'coord',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glFogCoordfvEXT_c',
    'feature' => 'GL_EXT_fog_coord',
    'glewImpl' => '__glewFogCoordfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogCoordhNV' => {
    'argdata' => [
      [
        'fog',
        'GLhalf '
      ]
    ],
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewFogCoordhNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogCoordhvNV' => {
    'argdata' => [
      [
        'fog',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glFogCoordhvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewFogCoordhvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogFuncSGIS' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'points',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glFogFuncSGIS_c',
    'feature' => 'GL_SGIS_fog_function',
    'glewImpl' => '__glewFogFuncSGIS',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogLayersSGIX' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'points',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glFogLayersSGIX_c',
    'feature' => 'GL_SGIX_fog_layers',
    'glewImpl' => '__glewFogLayersSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogf' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogfv' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glFogfv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogi' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogiv' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glFogiv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogx' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfixed '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewFogx',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFogxv' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfixed* '
      ]
    ],
    'binding_name' => 'glFogxv_c',
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewFogxv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentColorMaterialEXT' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_fragment_lighting',
    'glewImpl' => '__glewFragmentColorMaterialEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentColorMaterialSGIX' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_SGIX_fragment_specular_lighting',
    'glewImpl' => '__glewFragmentColorMaterialSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentCoverageColorNV' => {
    'argdata' => [
      [
        'color',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_fragment_coverage_to_color',
    'glewImpl' => '__glewFragmentCoverageColorNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentLightModelfEXT' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_fragment_lighting',
    'glewImpl' => '__glewFragmentLightModelfEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentLightModelfSGIX' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SGIX_fragment_specular_lighting',
    'glewImpl' => '__glewFragmentLightModelfSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentLightModelfvEXT' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glFragmentLightModelfvEXT_c',
    'feature' => 'GL_EXT_fragment_lighting',
    'glewImpl' => '__glewFragmentLightModelfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentLightModelfvSGIX' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glFragmentLightModelfvSGIX_c',
    'feature' => 'GL_SGIX_fragment_specular_lighting',
    'glewImpl' => '__glewFragmentLightModelfvSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentLightModeliEXT' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_fragment_lighting',
    'glewImpl' => '__glewFragmentLightModeliEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentLightModeliSGIX' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_SGIX_fragment_specular_lighting',
    'glewImpl' => '__glewFragmentLightModeliSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentLightModelivEXT' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glFragmentLightModelivEXT_c',
    'feature' => 'GL_EXT_fragment_lighting',
    'glewImpl' => '__glewFragmentLightModelivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentLightModelivSGIX' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glFragmentLightModelivSGIX_c',
    'feature' => 'GL_SGIX_fragment_specular_lighting',
    'glewImpl' => '__glewFragmentLightModelivSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentLightfEXT' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_fragment_lighting',
    'glewImpl' => '__glewFragmentLightfEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentLightfSGIX' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SGIX_fragment_specular_lighting',
    'glewImpl' => '__glewFragmentLightfSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentLightfvEXT' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glFragmentLightfvEXT_c',
    'feature' => 'GL_EXT_fragment_lighting',
    'glewImpl' => '__glewFragmentLightfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentLightfvSGIX' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glFragmentLightfvSGIX_c',
    'feature' => 'GL_SGIX_fragment_specular_lighting',
    'glewImpl' => '__glewFragmentLightfvSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentLightiEXT' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_fragment_lighting',
    'glewImpl' => '__glewFragmentLightiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentLightiSGIX' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_SGIX_fragment_specular_lighting',
    'glewImpl' => '__glewFragmentLightiSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentLightivEXT' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glFragmentLightivEXT_c',
    'feature' => 'GL_EXT_fragment_lighting',
    'glewImpl' => '__glewFragmentLightivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentLightivSGIX' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glFragmentLightivSGIX_c',
    'feature' => 'GL_SGIX_fragment_specular_lighting',
    'glewImpl' => '__glewFragmentLightivSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentMaterialfEXT' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'const GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_fragment_lighting',
    'glewImpl' => '__glewFragmentMaterialfEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentMaterialfSGIX' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'const GLfloat '
      ]
    ],
    'feature' => 'GL_SGIX_fragment_specular_lighting',
    'glewImpl' => '__glewFragmentMaterialfSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentMaterialfvEXT' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glFragmentMaterialfvEXT_c',
    'feature' => 'GL_EXT_fragment_lighting',
    'glewImpl' => '__glewFragmentMaterialfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentMaterialfvSGIX' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glFragmentMaterialfvSGIX_c',
    'feature' => 'GL_SGIX_fragment_specular_lighting',
    'glewImpl' => '__glewFragmentMaterialfvSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentMaterialiEXT' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'const GLint '
      ]
    ],
    'feature' => 'GL_EXT_fragment_lighting',
    'glewImpl' => '__glewFragmentMaterialiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentMaterialiSGIX' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'const GLint '
      ]
    ],
    'feature' => 'GL_SGIX_fragment_specular_lighting',
    'glewImpl' => '__glewFragmentMaterialiSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentMaterialivEXT' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glFragmentMaterialivEXT_c',
    'feature' => 'GL_EXT_fragment_lighting',
    'glewImpl' => '__glewFragmentMaterialivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFragmentMaterialivSGIX' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glFragmentMaterialivSGIX_c',
    'feature' => 'GL_SGIX_fragment_specular_lighting',
    'glewImpl' => '__glewFragmentMaterialivSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFrameTerminatorGREMEDY' => {
    'feature' => 'GL_GREMEDY_frame_terminator',
    'glewImpl' => '__glewFrameTerminatorGREMEDY',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFrameZoomSGIX' => {
    'argdata' => [
      [
        'factor',
        'GLint '
      ]
    ],
    'feature' => 'GL_SGIX_framezoom',
    'glewImpl' => '__glewFrameZoomSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferDrawBufferEXT' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewFramebufferDrawBufferEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferDrawBuffersEXT' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'bufs',
        'const GLenum* '
      ]
    ],
    'binding_name' => 'glFramebufferDrawBuffersEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewFramebufferDrawBuffersEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferFetchBarrierQCOM' => {
    'feature' => 'GL_QCOM_shader_framebuffer_fetch_noncoherent',
    'glewImpl' => '__glewFramebufferFetchBarrierQCOM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferFoveationConfigQCOM' => {
    'argdata' => [
      [
        'fbo',
        'GLuint '
      ],
      [
        'numLayers',
        'GLuint '
      ],
      [
        'focalPointsPerLayer',
        'GLuint '
      ],
      [
        'requestedFeatures',
        'GLuint '
      ],
      [
        'providedFeatures',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glFramebufferFoveationConfigQCOM_c',
    'feature' => 'GL_QCOM_framebuffer_foveated',
    'glewImpl' => '__glewFramebufferFoveationConfigQCOM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferFoveationParametersQCOM' => {
    'argdata' => [
      [
        'fbo',
        'GLuint '
      ],
      [
        'layer',
        'GLuint '
      ],
      [
        'focalPoint',
        'GLuint '
      ],
      [
        'focalX',
        'GLfloat '
      ],
      [
        'focalY',
        'GLfloat '
      ],
      [
        'gainX',
        'GLfloat '
      ],
      [
        'gainY',
        'GLfloat '
      ],
      [
        'foveaArea',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_QCOM_framebuffer_foveated',
    'glewImpl' => '__glewFramebufferFoveationParametersQCOM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferParameteri' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_framebuffer_no_attachments',
    'glewImpl' => '__glewFramebufferParameteri',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferPixelLocalStorageSizeEXT' => {
    'argdata' => [
      [
        'target',
        'GLuint '
      ],
      [
        'size',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_shader_pixel_local_storage2',
    'glewImpl' => '__glewFramebufferPixelLocalStorageSizeEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferReadBufferEXT' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewFramebufferReadBufferEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferRenderbuffer' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'renderbuffertarget',
        'GLenum '
      ],
      [
        'renderbuffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_framebuffer_object',
    'glewImpl' => '__glewFramebufferRenderbuffer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferRenderbufferEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'renderbuffertarget',
        'GLenum '
      ],
      [
        'renderbuffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_framebuffer_object',
    'glewImpl' => '__glewFramebufferRenderbufferEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferSampleLocationsfvARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'start',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glFramebufferSampleLocationsfvARB_c',
    'feature' => 'GL_ARB_sample_locations',
    'glewImpl' => '__glewFramebufferSampleLocationsfvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferSampleLocationsfvNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'start',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glFramebufferSampleLocationsfvNV_c',
    'feature' => 'GL_NV_sample_locations',
    'glewImpl' => '__glewFramebufferSampleLocationsfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferSamplePositionsfvAMD' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'numsamples',
        'GLuint '
      ],
      [
        'pixelindex',
        'GLuint '
      ],
      [
        'values',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glFramebufferSamplePositionsfvAMD_c',
    'feature' => 'GL_AMD_framebuffer_sample_positions',
    'glewImpl' => '__glewFramebufferSamplePositionsfvAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferTexture' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_3_2',
    'glewImpl' => '__glewFramebufferTexture',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferTexture1D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'textarget',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_framebuffer_object',
    'glewImpl' => '__glewFramebufferTexture1D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferTexture1DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'textarget',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_framebuffer_object',
    'glewImpl' => '__glewFramebufferTexture1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferTexture2D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'textarget',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_framebuffer_object',
    'glewImpl' => '__glewFramebufferTexture2D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferTexture2DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'textarget',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_framebuffer_object',
    'glewImpl' => '__glewFramebufferTexture2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferTexture2DMultisampleEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'textarget',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'samples',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_multisampled_render_to_texture',
    'glewImpl' => '__glewFramebufferTexture2DMultisampleEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferTexture3D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'textarget',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'layer',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_framebuffer_object',
    'glewImpl' => '__glewFramebufferTexture3D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferTexture3DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'textarget',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_framebuffer_object',
    'glewImpl' => '__glewFramebufferTexture3DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferTextureARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_geometry_shader4',
    'glewImpl' => '__glewFramebufferTextureARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferTextureEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_geometry_shader4',
    'glewImpl' => '__glewFramebufferTextureEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferTextureFaceARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'face',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_geometry_shader4',
    'glewImpl' => '__glewFramebufferTextureFaceARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferTextureFaceEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'face',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_geometry_shader4',
    'glewImpl' => '__glewFramebufferTextureFaceEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferTextureLayer' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'layer',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_framebuffer_object',
    'glewImpl' => '__glewFramebufferTextureLayer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferTextureLayerARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'layer',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_geometry_shader4',
    'glewImpl' => '__glewFramebufferTextureLayerARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferTextureLayerEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'layer',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_texture_array',
    'glewImpl' => '__glewFramebufferTextureLayerEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferTextureLayerNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'layer',
        'GLint '
      ]
    ],
    'feature' => 'GL_NV_texture_array',
    'glewImpl' => '__glewFramebufferTextureLayerNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferTextureMultisampleMultiviewOVR' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'baseViewIndex',
        'GLint '
      ],
      [
        'numViews',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_OVR_multiview_multisampled_render_to_texture',
    'glewImpl' => '__glewFramebufferTextureMultisampleMultiviewOVR',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFramebufferTextureMultiviewOVR' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'baseViewIndex',
        'GLint '
      ],
      [
        'numViews',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_OVR_multiview',
    'glewImpl' => '__glewFramebufferTextureMultiviewOVR',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFreeObjectBufferATI' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ATI_vertex_array_object',
    'glewImpl' => '__glewFreeObjectBufferATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFrontFace' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFrustum' => {
    'argdata' => [
      [
        'left',
        'GLdouble '
      ],
      [
        'right',
        'GLdouble '
      ],
      [
        'bottom',
        'GLdouble '
      ],
      [
        'top',
        'GLdouble '
      ],
      [
        'zNear',
        'GLdouble '
      ],
      [
        'zFar',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFrustumf' => {
    'argdata' => [
      [
        'left',
        'GLfloat '
      ],
      [
        'right',
        'GLfloat '
      ],
      [
        'bottom',
        'GLfloat '
      ],
      [
        'top',
        'GLfloat '
      ],
      [
        'zNear',
        'GLfloat '
      ],
      [
        'zFar',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewFrustumf',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glFrustumx' => {
    'argdata' => [
      [
        'left',
        'GLfixed '
      ],
      [
        'right',
        'GLfixed '
      ],
      [
        'bottom',
        'GLfixed '
      ],
      [
        'top',
        'GLfixed '
      ],
      [
        'zNear',
        'GLfixed '
      ],
      [
        'zFar',
        'GLfixed '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewFrustumx',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenAsyncMarkersSGIX' => {
    'argdata' => [
      [
        'range',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_SGIX_async',
    'glewImpl' => '__glewGenAsyncMarkersSGIX',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glGenBuffers' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'buffers',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenBuffers_c',
    'feature' => 'GL_VERSION_1_5',
    'glewImpl' => '__glewGenBuffers',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenBuffersARB' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'buffers',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenBuffersARB_c',
    'feature' => 'GL_ARB_vertex_buffer_object',
    'glewImpl' => '__glewGenBuffersARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenFencesAPPLE' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'fences',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenFencesAPPLE_c',
    'feature' => 'GL_APPLE_fence',
    'glewImpl' => '__glewGenFencesAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenFencesNV' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'fences',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenFencesNV_c',
    'feature' => 'GL_NV_fence',
    'glewImpl' => '__glewGenFencesNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenFragmentShadersATI' => {
    'argdata' => [
      [
        'range',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ATI_fragment_shader',
    'glewImpl' => '__glewGenFragmentShadersATI',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glGenFramebuffers' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'framebuffers',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenFramebuffers_c',
    'feature' => 'GL_ARB_framebuffer_object',
    'glewImpl' => '__glewGenFramebuffers',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenFramebuffersEXT' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'framebuffers',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenFramebuffersEXT_c',
    'feature' => 'GL_EXT_framebuffer_object',
    'glewImpl' => '__glewGenFramebuffersEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenLists' => {
    'argdata' => [
      [
        'range',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glGenMPEGPredictorsSGIX' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'predictors',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenMPEGPredictorsSGIX_c',
    'feature' => 'GL_SGIX_mpeg1',
    'glewImpl' => '__glewGenMPEGPredictorsSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenNamesAMD' => {
    'argdata' => [
      [
        'identifier',
        'GLenum '
      ],
      [
        'num',
        'GLuint '
      ],
      [
        'names',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenNamesAMD_c',
    'feature' => 'GL_AMD_name_gen_delete',
    'glewImpl' => '__glewGenNamesAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenOcclusionQueriesNV' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'ids',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenOcclusionQueriesNV_c',
    'feature' => 'GL_NV_occlusion_query',
    'glewImpl' => '__glewGenOcclusionQueriesNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenPathsNV' => {
    'argdata' => [
      [
        'range',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewGenPathsNV',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glGenPerfMonitorsAMD' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'monitors',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenPerfMonitorsAMD_c',
    'feature' => 'GL_AMD_performance_monitor',
    'glewImpl' => '__glewGenPerfMonitorsAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenProgramPipelines' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'pipelines',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenProgramPipelines_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewGenProgramPipelines',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenProgramsARB' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'programs',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenProgramsARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewGenProgramsARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenProgramsNV' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'ids',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenProgramsNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewGenProgramsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenQueries' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'ids',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenQueries_c',
    'feature' => 'GL_VERSION_1_5',
    'glewImpl' => '__glewGenQueries',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenQueriesANGLE' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'ids',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenQueriesANGLE_c',
    'feature' => 'GL_ANGLE_timer_query',
    'glewImpl' => '__glewGenQueriesANGLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenQueriesARB' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'ids',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenQueriesARB_c',
    'feature' => 'GL_ARB_occlusion_query',
    'glewImpl' => '__glewGenQueriesARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenRenderbuffers' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'renderbuffers',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenRenderbuffers_c',
    'feature' => 'GL_ARB_framebuffer_object',
    'glewImpl' => '__glewGenRenderbuffers',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenRenderbuffersEXT' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'renderbuffers',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenRenderbuffersEXT_c',
    'feature' => 'GL_EXT_framebuffer_object',
    'glewImpl' => '__glewGenRenderbuffersEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenSamplers' => {
    'argdata' => [
      [
        'count',
        'GLsizei '
      ],
      [
        'samplers',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenSamplers_c',
    'feature' => 'GL_ARB_sampler_objects',
    'glewImpl' => '__glewGenSamplers',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenSemaphoresEXT' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'semaphores',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenSemaphoresEXT_c',
    'feature' => 'GL_EXT_semaphore',
    'glewImpl' => '__glewGenSemaphoresEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenSymbolsEXT' => {
    'argdata' => [
      [
        'dataType',
        'GLenum '
      ],
      [
        'storageType',
        'GLenum '
      ],
      [
        'range',
        'GLenum '
      ],
      [
        'components',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewGenSymbolsEXT',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glGenTextures' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'textures',
        'GLuint *'
      ]
    ],
    'binding_name' => 'glGenTextures_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenTexturesEXT' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'textures',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenTexturesEXT_c',
    'feature' => 'GL_EXT_texture_object',
    'glewImpl' => '__glewGenTexturesEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenTransformFeedbacks' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'ids',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenTransformFeedbacks_c',
    'feature' => 'GL_ARB_transform_feedback2',
    'glewImpl' => '__glewGenTransformFeedbacks',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenTransformFeedbacksNV' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'ids',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenTransformFeedbacksNV_c',
    'feature' => 'GL_NV_transform_feedback2',
    'glewImpl' => '__glewGenTransformFeedbacksNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenVertexArrays' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'arrays',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenVertexArrays_c',
    'feature' => 'GL_ARB_vertex_array_object',
    'glewImpl' => '__glewGenVertexArrays',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenVertexArraysAPPLE' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'arrays',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glGenVertexArraysAPPLE_c',
    'feature' => 'GL_APPLE_vertex_array_object',
    'glewImpl' => '__glewGenVertexArraysAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenVertexArraysSGIX' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'arrays',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGenVertexArraysSGIX_c',
    'feature' => 'GL_SGIX_vertex_array_object',
    'glewImpl' => '__glewGenVertexArraysSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenVertexShadersEXT' => {
    'argdata' => [
      [
        'range',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewGenVertexShadersEXT',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glGenerateMipmap' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_framebuffer_object',
    'glewImpl' => '__glewGenerateMipmap',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenerateMipmapEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_framebuffer_object',
    'glewImpl' => '__glewGenerateMipmapEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenerateMultiTexMipmapEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGenerateMultiTexMipmapEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenerateTextureMipmap' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGenerateTextureMipmap',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGenerateTextureMipmapEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGenerateTextureMipmapEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetActiveAtomicCounterBufferiv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'bufferIndex',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetActiveAtomicCounterBufferiv_c',
    'feature' => 'GL_ARB_shader_atomic_counters',
    'glewImpl' => '__glewGetActiveAtomicCounterBufferiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetActiveAttrib' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'maxLength',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'size',
        'GLint* '
      ],
      [
        'type',
        'GLenum* '
      ],
      [
        'name',
        'GLchar* '
      ]
    ],
    'binding_name' => 'glGetActiveAttrib_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewGetActiveAttrib',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetActiveAttribARB' => {
    'argdata' => [
      [
        'programObj',
        'GLhandleARB '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'maxLength',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'size',
        'GLint *'
      ],
      [
        'type',
        'GLenum *'
      ],
      [
        'name',
        'GLcharARB *'
      ]
    ],
    'binding_name' => 'glGetActiveAttribARB_c',
    'feature' => 'GL_ARB_vertex_shader',
    'glewImpl' => '__glewGetActiveAttribARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetActiveSubroutineName' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'shadertype',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'bufsize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'name',
        'GLchar *'
      ]
    ],
    'binding_name' => 'glGetActiveSubroutineName_c',
    'feature' => 'GL_ARB_shader_subroutine',
    'glewImpl' => '__glewGetActiveSubroutineName',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetActiveSubroutineUniformName' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'shadertype',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'bufsize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'name',
        'GLchar *'
      ]
    ],
    'binding_name' => 'glGetActiveSubroutineUniformName_c',
    'feature' => 'GL_ARB_shader_subroutine',
    'glewImpl' => '__glewGetActiveSubroutineUniformName',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetActiveSubroutineUniformiv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'shadertype',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'values',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetActiveSubroutineUniformiv_c',
    'feature' => 'GL_ARB_shader_subroutine',
    'glewImpl' => '__glewGetActiveSubroutineUniformiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetActiveUniform' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'maxLength',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'size',
        'GLint* '
      ],
      [
        'type',
        'GLenum* '
      ],
      [
        'name',
        'GLchar* '
      ]
    ],
    'binding_name' => 'glGetActiveUniform_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewGetActiveUniform',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetActiveUniformARB' => {
    'argdata' => [
      [
        'programObj',
        'GLhandleARB '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'maxLength',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'size',
        'GLint *'
      ],
      [
        'type',
        'GLenum *'
      ],
      [
        'name',
        'GLcharARB *'
      ]
    ],
    'binding_name' => 'glGetActiveUniformARB_c',
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewGetActiveUniformARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetActiveUniformBlockName' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'uniformBlockIndex',
        'GLuint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'uniformBlockName',
        'GLchar* '
      ]
    ],
    'binding_name' => 'glGetActiveUniformBlockName_c',
    'feature' => 'GL_ARB_uniform_buffer_object',
    'glewImpl' => '__glewGetActiveUniformBlockName',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetActiveUniformBlockiv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'uniformBlockIndex',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetActiveUniformBlockiv_c',
    'feature' => 'GL_ARB_uniform_buffer_object',
    'glewImpl' => '__glewGetActiveUniformBlockiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetActiveUniformName' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'uniformIndex',
        'GLuint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'uniformName',
        'GLchar* '
      ]
    ],
    'binding_name' => 'glGetActiveUniformName_c',
    'feature' => 'GL_ARB_uniform_buffer_object',
    'glewImpl' => '__glewGetActiveUniformName',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetActiveUniformsiv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'uniformCount',
        'GLsizei '
      ],
      [
        'uniformIndices',
        'const GLuint* '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetActiveUniformsiv_c',
    'feature' => 'GL_ARB_uniform_buffer_object',
    'glewImpl' => '__glewGetActiveUniformsiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetActiveVaryingNV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei *'
      ],
      [
        'size',
        'GLsizei *'
      ],
      [
        'type',
        'GLenum *'
      ],
      [
        'name',
        'GLchar *'
      ]
    ],
    'binding_name' => 'glGetActiveVaryingNV_c',
    'feature' => 'GL_NV_transform_feedback',
    'glewImpl' => '__glewGetActiveVaryingNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetArrayObjectfvATI' => {
    'argdata' => [
      [
        'array',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetArrayObjectfvATI_c',
    'feature' => 'GL_ATI_vertex_array_object',
    'glewImpl' => '__glewGetArrayObjectfvATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetArrayObjectivATI' => {
    'argdata' => [
      [
        'array',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetArrayObjectivATI_c',
    'feature' => 'GL_ATI_vertex_array_object',
    'glewImpl' => '__glewGetArrayObjectivATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetAttachedObjectsARB' => {
    'argdata' => [
      [
        'containerObj',
        'GLhandleARB '
      ],
      [
        'maxCount',
        'GLsizei '
      ],
      [
        'count',
        'GLsizei* '
      ],
      [
        'obj',
        'GLhandleARB *'
      ]
    ],
    'binding_name' => 'glGetAttachedObjectsARB_c',
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewGetAttachedObjectsARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetAttachedShaders' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'maxCount',
        'GLsizei '
      ],
      [
        'count',
        'GLsizei* '
      ],
      [
        'shaders',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGetAttachedShaders_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewGetAttachedShaders',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetAttribLocation' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'name',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glGetAttribLocation_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewGetAttribLocation',
    'glewtype' => 'fun',
    'restype' => 'GLint'
  },
  'glGetAttribLocationARB' => {
    'argdata' => [
      [
        'programObj',
        'GLhandleARB '
      ],
      [
        'name',
        'const GLcharARB* '
      ]
    ],
    'binding_name' => 'glGetAttribLocationARB_c',
    'feature' => 'GL_ARB_vertex_shader',
    'glewImpl' => '__glewGetAttribLocationARB',
    'glewtype' => 'fun',
    'restype' => 'GLint'
  },
  'glGetBooleanIndexedvEXT' => {
    'argdata' => [
      [
        'value',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'data',
        'GLboolean* '
      ]
    ],
    'binding_name' => 'glGetBooleanIndexedvEXT_c',
    'feature' => 'GL_EXT_draw_buffers2',
    'glewImpl' => '__glewGetBooleanIndexedvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetBooleani_v' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'data',
        'GLboolean* '
      ]
    ],
    'binding_name' => 'glGetBooleani_v_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewGetBooleani_v',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetBooleanv' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLboolean *'
      ]
    ],
    'binding_name' => 'glGetBooleanv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetBufferParameteri64v' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'value',
        'GLenum '
      ],
      [
        'data',
        'GLint64 * '
      ]
    ],
    'binding_name' => 'glGetBufferParameteri64v_c',
    'feature' => 'GL_VERSION_3_2',
    'glewImpl' => '__glewGetBufferParameteri64v',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetBufferParameteriv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetBufferParameteriv_c',
    'feature' => 'GL_VERSION_1_5',
    'glewImpl' => '__glewGetBufferParameteriv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetBufferParameterivARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetBufferParameterivARB_c',
    'feature' => 'GL_ARB_vertex_buffer_object',
    'glewImpl' => '__glewGetBufferParameterivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetBufferParameterui64vNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glGetBufferParameterui64vNV_c',
    'feature' => 'GL_NV_shader_buffer_load',
    'glewImpl' => '__glewGetBufferParameterui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetBufferPointerv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'void** '
      ]
    ],
    'binding_name' => 'glGetBufferPointerv_c',
    'feature' => 'GL_VERSION_1_5',
    'glewImpl' => '__glewGetBufferPointerv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetBufferPointervARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'void** '
      ]
    ],
    'binding_name' => 'glGetBufferPointervARB_c',
    'feature' => 'GL_ARB_vertex_buffer_object',
    'glewImpl' => '__glewGetBufferPointervARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetBufferSubData' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'data',
        'void* '
      ]
    ],
    'binding_name' => 'glGetBufferSubData_c',
    'feature' => 'GL_VERSION_1_5',
    'glewImpl' => '__glewGetBufferSubData',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetBufferSubDataARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'offset',
        'GLintptrARB '
      ],
      [
        'size',
        'GLsizeiptrARB '
      ],
      [
        'data',
        'void *'
      ]
    ],
    'binding_name' => 'glGetBufferSubDataARB_c',
    'feature' => 'GL_ARB_vertex_buffer_object',
    'glewImpl' => '__glewGetBufferSubDataARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetClipPlane' => {
    'argdata' => [
      [
        'plane',
        'GLenum '
      ],
      [
        'equation',
        'GLdouble *'
      ]
    ],
    'binding_name' => 'glGetClipPlane_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetClipPlanef' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'eqn',
        'GLfloat * '
      ]
    ],
    'binding_name' => 'glGetClipPlanef_c',
    'feature' => 'GL_REGAL_ES1_1_compatibility',
    'glewImpl' => '__glewGetClipPlanef',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetClipPlanex' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'eqn',
        'GLfixed * '
      ]
    ],
    'binding_name' => 'glGetClipPlanex_c',
    'feature' => 'GL_REGAL_ES1_1_compatibility',
    'glewImpl' => '__glewGetClipPlanex',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetColorTable' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'table',
        'void *'
      ]
    ],
    'binding_name' => 'glGetColorTable_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewGetColorTable',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetColorTableEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'data',
        'void *'
      ]
    ],
    'binding_name' => 'glGetColorTableEXT_c',
    'feature' => 'GL_EXT_paletted_texture',
    'glewImpl' => '__glewGetColorTableEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetColorTableParameterfv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetColorTableParameterfv_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewGetColorTableParameterfv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetColorTableParameterfvEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetColorTableParameterfvEXT_c',
    'feature' => 'GL_EXT_paletted_texture',
    'glewImpl' => '__glewGetColorTableParameterfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetColorTableParameterfvSGI' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetColorTableParameterfvSGI_c',
    'feature' => 'GL_SGI_color_table',
    'glewImpl' => '__glewGetColorTableParameterfvSGI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetColorTableParameteriv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetColorTableParameteriv_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewGetColorTableParameteriv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetColorTableParameterivEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetColorTableParameterivEXT_c',
    'feature' => 'GL_EXT_paletted_texture',
    'glewImpl' => '__glewGetColorTableParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetColorTableParameterivSGI' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetColorTableParameterivSGI_c',
    'feature' => 'GL_SGI_color_table',
    'glewImpl' => '__glewGetColorTableParameterivSGI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetColorTableSGI' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'table',
        'void *'
      ]
    ],
    'binding_name' => 'glGetColorTableSGI_c',
    'feature' => 'GL_SGI_color_table',
    'glewImpl' => '__glewGetColorTableSGI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetCombinerInputParameterfvNV' => {
    'argdata' => [
      [
        'stage',
        'GLenum '
      ],
      [
        'portion',
        'GLenum '
      ],
      [
        'variable',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetCombinerInputParameterfvNV_c',
    'feature' => 'GL_NV_register_combiners',
    'glewImpl' => '__glewGetCombinerInputParameterfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetCombinerInputParameterivNV' => {
    'argdata' => [
      [
        'stage',
        'GLenum '
      ],
      [
        'portion',
        'GLenum '
      ],
      [
        'variable',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetCombinerInputParameterivNV_c',
    'feature' => 'GL_NV_register_combiners',
    'glewImpl' => '__glewGetCombinerInputParameterivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetCombinerOutputParameterfvNV' => {
    'argdata' => [
      [
        'stage',
        'GLenum '
      ],
      [
        'portion',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetCombinerOutputParameterfvNV_c',
    'feature' => 'GL_NV_register_combiners',
    'glewImpl' => '__glewGetCombinerOutputParameterfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetCombinerOutputParameterivNV' => {
    'argdata' => [
      [
        'stage',
        'GLenum '
      ],
      [
        'portion',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetCombinerOutputParameterivNV_c',
    'feature' => 'GL_NV_register_combiners',
    'glewImpl' => '__glewGetCombinerOutputParameterivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetCombinerStageParameterfvNV' => {
    'argdata' => [
      [
        'stage',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetCombinerStageParameterfvNV_c',
    'feature' => 'GL_NV_register_combiners2',
    'glewImpl' => '__glewGetCombinerStageParameterfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetCommandHeaderNV' => {
    'argdata' => [
      [
        'tokenID',
        'GLenum '
      ],
      [
        'size',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_command_list',
    'glewImpl' => '__glewGetCommandHeaderNV',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glGetCompressedMultiTexImageEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'img',
        'void *'
      ]
    ],
    'binding_name' => 'glGetCompressedMultiTexImageEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetCompressedMultiTexImageEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetCompressedTexImage' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'lod',
        'GLint '
      ],
      [
        'img',
        'void *'
      ]
    ],
    'binding_name' => 'glGetCompressedTexImage_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewGetCompressedTexImage',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetCompressedTexImageARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'lod',
        'GLint '
      ],
      [
        'img',
        'void *'
      ]
    ],
    'binding_name' => 'glGetCompressedTexImageARB_c',
    'feature' => 'GL_ARB_texture_compression',
    'glewImpl' => '__glewGetCompressedTexImageARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetCompressedTextureImage' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'pixels',
        'void *'
      ]
    ],
    'binding_name' => 'glGetCompressedTextureImage_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetCompressedTextureImage',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetCompressedTextureImageEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'img',
        'void *'
      ]
    ],
    'binding_name' => 'glGetCompressedTextureImageEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetCompressedTextureImageEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetCompressedTextureSubImage' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'pixels',
        'void *'
      ]
    ],
    'binding_name' => 'glGetCompressedTextureSubImage_c',
    'feature' => 'GL_ARB_get_texture_sub_image',
    'glewImpl' => '__glewGetCompressedTextureSubImage',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetConvolutionFilter' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'image',
        'void *'
      ]
    ],
    'binding_name' => 'glGetConvolutionFilter_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewGetConvolutionFilter',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetConvolutionFilterEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'image',
        'void *'
      ]
    ],
    'binding_name' => 'glGetConvolutionFilterEXT_c',
    'feature' => 'GL_EXT_convolution',
    'glewImpl' => '__glewGetConvolutionFilterEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetConvolutionParameterfv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetConvolutionParameterfv_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewGetConvolutionParameterfv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetConvolutionParameterfvEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetConvolutionParameterfvEXT_c',
    'feature' => 'GL_EXT_convolution',
    'glewImpl' => '__glewGetConvolutionParameterfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetConvolutionParameteriv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetConvolutionParameteriv_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewGetConvolutionParameteriv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetConvolutionParameterivEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetConvolutionParameterivEXT_c',
    'feature' => 'GL_EXT_convolution',
    'glewImpl' => '__glewGetConvolutionParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetCoverageModulationTableNV' => {
    'argdata' => [
      [
        'bufsize',
        'GLsizei '
      ],
      [
        'v',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetCoverageModulationTableNV_c',
    'feature' => 'GL_EXT_raster_multisample',
    'glewImpl' => '__glewGetCoverageModulationTableNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetDebugMessageLog' => {
    'argdata' => [
      [
        'count',
        'GLuint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'sources',
        'GLenum* '
      ],
      [
        'types',
        'GLenum* '
      ],
      [
        'ids',
        'GLuint* '
      ],
      [
        'severities',
        'GLenum* '
      ],
      [
        'lengths',
        'GLsizei* '
      ],
      [
        'messageLog',
        'GLchar* '
      ]
    ],
    'binding_name' => 'glGetDebugMessageLog_c',
    'feature' => 'GL_KHR_debug',
    'glewImpl' => '__glewGetDebugMessageLog',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glGetDebugMessageLogAMD' => {
    'argdata' => [
      [
        'count',
        'GLuint '
      ],
      [
        'bufsize',
        'GLsizei '
      ],
      [
        'categories',
        'GLenum* '
      ],
      [
        'severities',
        'GLuint* '
      ],
      [
        'ids',
        'GLuint* '
      ],
      [
        'lengths',
        'GLsizei* '
      ],
      [
        'message',
        'GLchar* '
      ]
    ],
    'binding_name' => 'glGetDebugMessageLogAMD_c',
    'feature' => 'GL_AMD_debug_output',
    'glewImpl' => '__glewGetDebugMessageLogAMD',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glGetDebugMessageLogARB' => {
    'argdata' => [
      [
        'count',
        'GLuint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'sources',
        'GLenum* '
      ],
      [
        'types',
        'GLenum* '
      ],
      [
        'ids',
        'GLuint* '
      ],
      [
        'severities',
        'GLenum* '
      ],
      [
        'lengths',
        'GLsizei* '
      ],
      [
        'messageLog',
        'GLchar* '
      ]
    ],
    'binding_name' => 'glGetDebugMessageLogARB_c',
    'feature' => 'GL_ARB_debug_output',
    'glewImpl' => '__glewGetDebugMessageLogARB',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glGetDetailTexFuncSGIS' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'points',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetDetailTexFuncSGIS_c',
    'feature' => 'GL_SGIS_detail_texture',
    'glewImpl' => '__glewGetDetailTexFuncSGIS',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetDoubleIndexedvEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'GLdouble* '
      ]
    ],
    'binding_name' => 'glGetDoubleIndexedvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetDoubleIndexedvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetDoublei_v' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'data',
        'GLdouble* '
      ]
    ],
    'binding_name' => 'glGetDoublei_v_c',
    'feature' => 'GL_ARB_viewport_array',
    'glewImpl' => '__glewGetDoublei_v',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetDoublei_vEXT' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'GLdouble* '
      ]
    ],
    'binding_name' => 'glGetDoublei_vEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetDoublei_vEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetDoublev' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLdouble *'
      ]
    ],
    'binding_name' => 'glGetDoublev_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetDriverControlStringQCOM' => {
    'argdata' => [
      [
        'driverControl',
        'GLuint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'driverControlString',
        'GLchar *'
      ]
    ],
    'binding_name' => 'glGetDriverControlStringQCOM_c',
    'feature' => 'GL_QCOM_driver_control',
    'glewImpl' => '__glewGetDriverControlStringQCOM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetDriverControlsQCOM' => {
    'argdata' => [
      [
        'num',
        'GLint* '
      ],
      [
        'size',
        'GLsizei '
      ],
      [
        'driverControls',
        'GLuint *'
      ]
    ],
    'binding_name' => 'glGetDriverControlsQCOM_c',
    'feature' => 'GL_QCOM_driver_control',
    'glewImpl' => '__glewGetDriverControlsQCOM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetError' => {
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'GLenum'
  },
  'glGetExtensionREGAL' => {
    'argdata' => [
      [
        'ext',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glGetExtensionREGAL_c',
    'feature' => 'GL_REGAL_extension_query',
    'glewImpl' => '__glewGetExtensionREGAL',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glGetFenceivNV' => {
    'argdata' => [
      [
        'fence',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetFenceivNV_c',
    'feature' => 'GL_NV_fence',
    'glewImpl' => '__glewGetFenceivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFinalCombinerInputParameterfvNV' => {
    'argdata' => [
      [
        'variable',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetFinalCombinerInputParameterfvNV_c',
    'feature' => 'GL_NV_register_combiners',
    'glewImpl' => '__glewGetFinalCombinerInputParameterfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFinalCombinerInputParameterivNV' => {
    'argdata' => [
      [
        'variable',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetFinalCombinerInputParameterivNV_c',
    'feature' => 'GL_NV_register_combiners',
    'glewImpl' => '__glewGetFinalCombinerInputParameterivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFirstPerfQueryIdINTEL' => {
    'argdata' => [
      [
        'queryId',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGetFirstPerfQueryIdINTEL_c',
    'feature' => 'GL_INTEL_performance_query',
    'glewImpl' => '__glewGetFirstPerfQueryIdINTEL',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFixedv' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfixed* '
      ]
    ],
    'binding_name' => 'glGetFixedv_c',
    'feature' => 'GL_REGAL_ES1_1_compatibility',
    'glewImpl' => '__glewGetFixedv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFloatIndexedvEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetFloatIndexedvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetFloatIndexedvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFloati_v' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'data',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetFloati_v_c',
    'feature' => 'GL_ARB_viewport_array',
    'glewImpl' => '__glewGetFloati_v',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFloati_vEXT' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetFloati_vEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetFloati_vEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFloati_vNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'data',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetFloati_vNV_c',
    'feature' => 'GL_NV_viewport_array',
    'glewImpl' => '__glewGetFloati_vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFloatv' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetFloatv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFogFuncSGIS' => {
    'argdata' => [
      [
        'points',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetFogFuncSGIS_c',
    'feature' => 'GL_SGIS_fog_function',
    'glewImpl' => '__glewGetFogFuncSGIS',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFogLayersSGIX' => {
    'argdata' => [
      [
        'points',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetFogLayersSGIX_c',
    'feature' => 'GL_SGIX_fog_layers',
    'glewImpl' => '__glewGetFogLayersSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFragDataIndex' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'name',
        'const GLchar * '
      ]
    ],
    'binding_name' => 'glGetFragDataIndex_c',
    'feature' => 'GL_ARB_blend_func_extended',
    'glewImpl' => '__glewGetFragDataIndex',
    'glewtype' => 'fun',
    'restype' => 'GLint'
  },
  'glGetFragDataIndexEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'name',
        'const GLchar * '
      ]
    ],
    'binding_name' => 'glGetFragDataIndexEXT_c',
    'feature' => 'GL_EXT_blend_func_extended',
    'glewImpl' => '__glewGetFragDataIndexEXT',
    'glewtype' => 'fun',
    'restype' => 'GLint'
  },
  'glGetFragDataLocation' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'name',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glGetFragDataLocation_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewGetFragDataLocation',
    'glewtype' => 'fun',
    'restype' => 'GLint'
  },
  'glGetFragDataLocationEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'name',
        'const GLchar *'
      ]
    ],
    'binding_name' => 'glGetFragDataLocationEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewGetFragDataLocationEXT',
    'glewtype' => 'fun',
    'restype' => 'GLint'
  },
  'glGetFragmentLightfvEXT' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetFragmentLightfvEXT_c',
    'feature' => 'GL_EXT_fragment_lighting',
    'glewImpl' => '__glewGetFragmentLightfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFragmentLightfvSGIX' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'value',
        'GLenum '
      ],
      [
        'data',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetFragmentLightfvSGIX_c',
    'feature' => 'GL_SGIX_fragment_specular_lighting',
    'glewImpl' => '__glewGetFragmentLightfvSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFragmentLightivEXT' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetFragmentLightivEXT_c',
    'feature' => 'GL_EXT_fragment_lighting',
    'glewImpl' => '__glewGetFragmentLightivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFragmentLightivSGIX' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'value',
        'GLenum '
      ],
      [
        'data',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetFragmentLightivSGIX_c',
    'feature' => 'GL_SGIX_fragment_specular_lighting',
    'glewImpl' => '__glewGetFragmentLightivSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFragmentMaterialfvEXT' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glGetFragmentMaterialfvEXT_c',
    'feature' => 'GL_EXT_fragment_lighting',
    'glewImpl' => '__glewGetFragmentMaterialfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFragmentMaterialfvSGIX' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'data',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glGetFragmentMaterialfvSGIX_c',
    'feature' => 'GL_SGIX_fragment_specular_lighting',
    'glewImpl' => '__glewGetFragmentMaterialfvSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFragmentMaterialivEXT' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glGetFragmentMaterialivEXT_c',
    'feature' => 'GL_EXT_fragment_lighting',
    'glewImpl' => '__glewGetFragmentMaterialivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFragmentMaterialivSGIX' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'data',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glGetFragmentMaterialivSGIX_c',
    'feature' => 'GL_SGIX_fragment_specular_lighting',
    'glewImpl' => '__glewGetFragmentMaterialivSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFramebufferAttachmentParameteriv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetFramebufferAttachmentParameteriv_c',
    'feature' => 'GL_ARB_framebuffer_object',
    'glewImpl' => '__glewGetFramebufferAttachmentParameteriv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFramebufferAttachmentParameterivEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetFramebufferAttachmentParameterivEXT_c',
    'feature' => 'GL_EXT_framebuffer_object',
    'glewImpl' => '__glewGetFramebufferAttachmentParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFramebufferParameterfvAMD' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'numsamples',
        'GLuint '
      ],
      [
        'pixelindex',
        'GLuint '
      ],
      [
        'size',
        'GLsizei '
      ],
      [
        'values',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetFramebufferParameterfvAMD_c',
    'feature' => 'GL_AMD_framebuffer_sample_positions',
    'glewImpl' => '__glewGetFramebufferParameterfvAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFramebufferParameteriv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetFramebufferParameteriv_c',
    'feature' => 'GL_ARB_framebuffer_no_attachments',
    'glewImpl' => '__glewGetFramebufferParameteriv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFramebufferParameterivEXT' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetFramebufferParameterivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetFramebufferParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetFramebufferPixelLocalStorageSizeEXT' => {
    'argdata' => [
      [
        'target',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_shader_pixel_local_storage2',
    'glewImpl' => '__glewGetFramebufferPixelLocalStorageSizeEXT',
    'glewtype' => 'fun',
    'restype' => 'GLsizei'
  },
  'glGetGraphicsResetStatus' => {
    'feature' => 'GL_VERSION_4_5',
    'glewImpl' => '__glewGetGraphicsResetStatus',
    'glewtype' => 'fun',
    'restype' => 'GLenum'
  },
  'glGetGraphicsResetStatusARB' => {
    'feature' => 'GL_ARB_robustness',
    'glewImpl' => '__glewGetGraphicsResetStatusARB',
    'glewtype' => 'fun',
    'restype' => 'GLenum'
  },
  'glGetHandleARB' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewGetHandleARB',
    'glewtype' => 'fun',
    'restype' => 'GLhandleARB'
  },
  'glGetHistogram' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'reset',
        'GLboolean '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'values',
        'void *'
      ]
    ],
    'binding_name' => 'glGetHistogram_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewGetHistogram',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetHistogramEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'reset',
        'GLboolean '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'values',
        'void *'
      ]
    ],
    'binding_name' => 'glGetHistogramEXT_c',
    'feature' => 'GL_EXT_histogram',
    'glewImpl' => '__glewGetHistogramEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetHistogramParameterfv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetHistogramParameterfv_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewGetHistogramParameterfv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetHistogramParameterfvEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetHistogramParameterfvEXT_c',
    'feature' => 'GL_EXT_histogram',
    'glewImpl' => '__glewGetHistogramParameterfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetHistogramParameteriv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetHistogramParameteriv_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewGetHistogramParameteriv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetHistogramParameterivEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetHistogramParameterivEXT_c',
    'feature' => 'GL_EXT_histogram',
    'glewImpl' => '__glewGetHistogramParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetImageHandleARB' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'layered',
        'GLboolean '
      ],
      [
        'layer',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_bindless_texture',
    'glewImpl' => '__glewGetImageHandleARB',
    'glewtype' => 'fun',
    'restype' => 'GLuint64'
  },
  'glGetImageHandleNV' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'layered',
        'GLboolean '
      ],
      [
        'layer',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_bindless_texture',
    'glewImpl' => '__glewGetImageHandleNV',
    'glewtype' => 'fun',
    'restype' => 'GLuint64'
  },
  'glGetImageTransformParameterfvHP' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glGetImageTransformParameterfvHP_c',
    'feature' => 'GL_HP_image_transform',
    'glewImpl' => '__glewGetImageTransformParameterfvHP',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetImageTransformParameterivHP' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glGetImageTransformParameterivHP_c',
    'feature' => 'GL_HP_image_transform',
    'glewImpl' => '__glewGetImageTransformParameterivHP',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetInfoLogARB' => {
    'argdata' => [
      [
        'obj',
        'GLhandleARB '
      ],
      [
        'maxLength',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'infoLog',
        'GLcharARB *'
      ]
    ],
    'binding_name' => 'glGetInfoLogARB_c',
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewGetInfoLogARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetInteger64i_v' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'data',
        'GLint64 * '
      ]
    ],
    'binding_name' => 'glGetInteger64i_v_c',
    'feature' => 'GL_VERSION_3_2',
    'glewImpl' => '__glewGetInteger64i_v',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetInteger64v' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint64* '
      ]
    ],
    'binding_name' => 'glGetInteger64v_c',
    'feature' => 'GL_ARB_sync',
    'glewImpl' => '__glewGetInteger64v',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetInteger64vAPPLE' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint64* '
      ]
    ],
    'binding_name' => 'glGetInteger64vAPPLE_c',
    'feature' => 'GL_APPLE_sync',
    'glewImpl' => '__glewGetInteger64vAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetIntegerIndexedvEXT' => {
    'argdata' => [
      [
        'value',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'data',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetIntegerIndexedvEXT_c',
    'feature' => 'GL_EXT_draw_buffers2',
    'glewImpl' => '__glewGetIntegerIndexedvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetIntegeri_v' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'data',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetIntegeri_v_c',
    'feature' => 'GL_ARB_uniform_buffer_object',
    'glewImpl' => '__glewGetIntegeri_v',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetIntegeri_vEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'data',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetIntegeri_vEXT_c',
    'feature' => 'GL_EXT_multiview_draw_buffers',
    'glewImpl' => '__glewGetIntegeri_vEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetIntegerui64i_vNV' => {
    'argdata' => [
      [
        'value',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'result',
        'GLuint64EXT * '
      ]
    ],
    'binding_name' => 'glGetIntegerui64i_vNV_c',
    'feature' => 'GL_NV_vertex_buffer_unified_memory',
    'glewImpl' => '__glewGetIntegerui64i_vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetIntegerui64vNV' => {
    'argdata' => [
      [
        'value',
        'GLenum '
      ],
      [
        'result',
        'GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glGetIntegerui64vNV_c',
    'feature' => 'GL_NV_shader_buffer_load',
    'glewImpl' => '__glewGetIntegerui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetIntegerv' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetIntegerv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetInternalformatSampleivNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetInternalformatSampleivNV_c',
    'feature' => 'GL_NV_internalformat_sample_query',
    'glewImpl' => '__glewGetInternalformatSampleivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetInternalformati64v' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'params',
        'GLint64* '
      ]
    ],
    'binding_name' => 'glGetInternalformati64v_c',
    'feature' => 'GL_ARB_internalformat_query2',
    'glewImpl' => '__glewGetInternalformati64v',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetInternalformativ' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetInternalformativ_c',
    'feature' => 'GL_ARB_internalformat_query',
    'glewImpl' => '__glewGetInternalformativ',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetInvariantBooleanvEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'value',
        'GLenum '
      ],
      [
        'data',
        'GLboolean *'
      ]
    ],
    'binding_name' => 'glGetInvariantBooleanvEXT_c',
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewGetInvariantBooleanvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetInvariantFloatvEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'value',
        'GLenum '
      ],
      [
        'data',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetInvariantFloatvEXT_c',
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewGetInvariantFloatvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetInvariantIntegervEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'value',
        'GLenum '
      ],
      [
        'data',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetInvariantIntegervEXT_c',
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewGetInvariantIntegervEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetLightfv' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetLightfv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetLightiv' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetLightiv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetLightxv' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfixed* '
      ]
    ],
    'binding_name' => 'glGetLightxv_c',
    'feature' => 'GL_REGAL_ES1_1_compatibility',
    'glewImpl' => '__glewGetLightxv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetLocalConstantBooleanvEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'value',
        'GLenum '
      ],
      [
        'data',
        'GLboolean *'
      ]
    ],
    'binding_name' => 'glGetLocalConstantBooleanvEXT_c',
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewGetLocalConstantBooleanvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetLocalConstantFloatvEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'value',
        'GLenum '
      ],
      [
        'data',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetLocalConstantFloatvEXT_c',
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewGetLocalConstantFloatvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetLocalConstantIntegervEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'value',
        'GLenum '
      ],
      [
        'data',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetLocalConstantIntegervEXT_c',
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewGetLocalConstantIntegervEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMPEGParameterfvSGIX' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetMPEGParameterfvSGIX_c',
    'feature' => 'GL_SGIX_mpeg1',
    'glewImpl' => '__glewGetMPEGParameterfvSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMPEGParameterivSGIX' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetMPEGParameterivSGIX_c',
    'feature' => 'GL_SGIX_mpeg1',
    'glewImpl' => '__glewGetMPEGParameterivSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMPEGPredictorSGIX' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'void *'
      ]
    ],
    'binding_name' => 'glGetMPEGPredictorSGIX_c',
    'feature' => 'GL_SGIX_mpeg1',
    'glewImpl' => '__glewGetMPEGPredictorSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMPEGQuantTableubv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'values',
        'GLubyte* '
      ]
    ],
    'binding_name' => 'glGetMPEGQuantTableubv_c',
    'feature' => 'GL_SGIX_mpeg1',
    'glewImpl' => '__glewGetMPEGQuantTableubv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMapAttribParameterfvNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetMapAttribParameterfvNV_c',
    'feature' => 'GL_NV_evaluators',
    'glewImpl' => '__glewGetMapAttribParameterfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMapAttribParameterivNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetMapAttribParameterivNV_c',
    'feature' => 'GL_NV_evaluators',
    'glewImpl' => '__glewGetMapAttribParameterivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMapControlPointsNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'ustride',
        'GLsizei '
      ],
      [
        'vstride',
        'GLsizei '
      ],
      [
        'packed',
        'GLboolean '
      ],
      [
        'points',
        'void *'
      ]
    ],
    'binding_name' => 'glGetMapControlPointsNV_c',
    'feature' => 'GL_NV_evaluators',
    'glewImpl' => '__glewGetMapControlPointsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMapParameterfvNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetMapParameterfvNV_c',
    'feature' => 'GL_NV_evaluators',
    'glewImpl' => '__glewGetMapParameterfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMapParameterivNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetMapParameterivNV_c',
    'feature' => 'GL_NV_evaluators',
    'glewImpl' => '__glewGetMapParameterivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMapdv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'query',
        'GLenum '
      ],
      [
        'v',
        'GLdouble *'
      ]
    ],
    'binding_name' => 'glGetMapdv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMapfv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'query',
        'GLenum '
      ],
      [
        'v',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetMapfv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMapiv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'query',
        'GLenum '
      ],
      [
        'v',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetMapiv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMaterialfv' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetMaterialfv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMaterialiv' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetMaterialiv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMaterialxv' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfixed* '
      ]
    ],
    'binding_name' => 'glGetMaterialxv_c',
    'feature' => 'GL_REGAL_ES1_1_compatibility',
    'glewImpl' => '__glewGetMaterialxv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMemoryObjectParameterivEXT' => {
    'argdata' => [
      [
        'memoryObject',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetMemoryObjectParameterivEXT_c',
    'feature' => 'GL_EXT_memory_object',
    'glewImpl' => '__glewGetMemoryObjectParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMinmax' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'reset',
        'GLboolean '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'types',
        'GLenum '
      ],
      [
        'values',
        'void *'
      ]
    ],
    'binding_name' => 'glGetMinmax_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewGetMinmax',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMinmaxEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'reset',
        'GLboolean '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'values',
        'void *'
      ]
    ],
    'binding_name' => 'glGetMinmaxEXT_c',
    'feature' => 'GL_EXT_histogram',
    'glewImpl' => '__glewGetMinmaxEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMinmaxParameterfv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetMinmaxParameterfv_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewGetMinmaxParameterfv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMinmaxParameterfvEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetMinmaxParameterfvEXT_c',
    'feature' => 'GL_EXT_histogram',
    'glewImpl' => '__glewGetMinmaxParameterfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMinmaxParameteriv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetMinmaxParameteriv_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewGetMinmaxParameteriv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMinmaxParameterivEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetMinmaxParameterivEXT_c',
    'feature' => 'GL_EXT_histogram',
    'glewImpl' => '__glewGetMinmaxParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMultiTexEnvfvEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetMultiTexEnvfvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetMultiTexEnvfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMultiTexEnvivEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetMultiTexEnvivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetMultiTexEnvivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMultiTexGendvEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'coord',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLdouble* '
      ]
    ],
    'binding_name' => 'glGetMultiTexGendvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetMultiTexGendvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMultiTexGenfvEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'coord',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetMultiTexGenfvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetMultiTexGenfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMultiTexGenivEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'coord',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetMultiTexGenivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetMultiTexGenivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMultiTexImageEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'void *'
      ]
    ],
    'binding_name' => 'glGetMultiTexImageEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetMultiTexImageEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMultiTexLevelParameterfvEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetMultiTexLevelParameterfvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetMultiTexLevelParameterfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMultiTexLevelParameterivEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetMultiTexLevelParameterivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetMultiTexLevelParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMultiTexParameterIivEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetMultiTexParameterIivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetMultiTexParameterIivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMultiTexParameterIuivEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGetMultiTexParameterIuivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetMultiTexParameterIuivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMultiTexParameterfvEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetMultiTexParameterfvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetMultiTexParameterfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMultiTexParameterivEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetMultiTexParameterivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetMultiTexParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMultisamplefv' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'val',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetMultisamplefv_c',
    'feature' => 'GL_ARB_texture_multisample',
    'glewImpl' => '__glewGetMultisamplefv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetMultisamplefvNV' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'val',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetMultisamplefvNV_c',
    'feature' => 'GL_NV_explicit_multisample',
    'glewImpl' => '__glewGetMultisamplefvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedBufferParameteri64v' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint64* '
      ]
    ],
    'binding_name' => 'glGetNamedBufferParameteri64v_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetNamedBufferParameteri64v',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedBufferParameteriv' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetNamedBufferParameteriv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetNamedBufferParameteriv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedBufferParameterivEXT' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetNamedBufferParameterivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetNamedBufferParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedBufferParameterui64vNV' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glGetNamedBufferParameterui64vNV_c',
    'feature' => 'GL_NV_shader_buffer_load',
    'glewImpl' => '__glewGetNamedBufferParameterui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedBufferPointerv' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'void** '
      ]
    ],
    'binding_name' => 'glGetNamedBufferPointerv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetNamedBufferPointerv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedBufferPointervEXT' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'void** '
      ]
    ],
    'binding_name' => 'glGetNamedBufferPointervEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetNamedBufferPointervEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedBufferSubData' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'data',
        'void *'
      ]
    ],
    'binding_name' => 'glGetNamedBufferSubData_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetNamedBufferSubData',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedBufferSubDataEXT' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'data',
        'void *'
      ]
    ],
    'binding_name' => 'glGetNamedBufferSubDataEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetNamedBufferSubDataEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedFramebufferAttachmentParameteriv' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetNamedFramebufferAttachmentParameteriv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetNamedFramebufferAttachmentParameteriv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedFramebufferAttachmentParameterivEXT' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetNamedFramebufferAttachmentParameterivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetNamedFramebufferAttachmentParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedFramebufferParameterfvAMD' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'numsamples',
        'GLuint '
      ],
      [
        'pixelindex',
        'GLuint '
      ],
      [
        'size',
        'GLsizei '
      ],
      [
        'values',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetNamedFramebufferParameterfvAMD_c',
    'feature' => 'GL_AMD_framebuffer_sample_positions',
    'glewImpl' => '__glewGetNamedFramebufferParameterfvAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedFramebufferParameteriv' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetNamedFramebufferParameteriv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetNamedFramebufferParameteriv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedFramebufferParameterivEXT' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetNamedFramebufferParameterivEXT_c',
    'feature' => 'GL_ARB_framebuffer_no_attachments',
    'glewImpl' => '__glewGetNamedFramebufferParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedProgramLocalParameterIivEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetNamedProgramLocalParameterIivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetNamedProgramLocalParameterIivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedProgramLocalParameterIuivEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGetNamedProgramLocalParameterIuivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetNamedProgramLocalParameterIuivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedProgramLocalParameterdvEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'GLdouble* '
      ]
    ],
    'binding_name' => 'glGetNamedProgramLocalParameterdvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetNamedProgramLocalParameterdvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedProgramLocalParameterfvEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetNamedProgramLocalParameterfvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetNamedProgramLocalParameterfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedProgramStringEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'string',
        'void *'
      ]
    ],
    'binding_name' => 'glGetNamedProgramStringEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetNamedProgramStringEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedProgramivEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetNamedProgramivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetNamedProgramivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedRenderbufferParameteriv' => {
    'argdata' => [
      [
        'renderbuffer',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetNamedRenderbufferParameteriv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetNamedRenderbufferParameteriv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedRenderbufferParameterivEXT' => {
    'argdata' => [
      [
        'renderbuffer',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetNamedRenderbufferParameterivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetNamedRenderbufferParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedStringARB' => {
    'argdata' => [
      [
        'namelen',
        'GLint '
      ],
      [
        'name',
        'const GLchar* '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'stringlen',
        'GLint *'
      ],
      [
        'string',
        'GLchar *'
      ]
    ],
    'binding_name' => 'glGetNamedStringARB_c',
    'feature' => 'GL_ARB_shading_language_include',
    'glewImpl' => '__glewGetNamedStringARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNamedStringivARB' => {
    'argdata' => [
      [
        'namelen',
        'GLint '
      ],
      [
        'name',
        'const GLchar* '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetNamedStringivARB_c',
    'feature' => 'GL_ARB_shading_language_include',
    'glewImpl' => '__glewGetNamedStringivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNextPerfQueryIdINTEL' => {
    'argdata' => [
      [
        'queryId',
        'GLuint '
      ],
      [
        'nextQueryId',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGetNextPerfQueryIdINTEL_c',
    'feature' => 'GL_INTEL_performance_query',
    'glewImpl' => '__glewGetNextPerfQueryIdINTEL',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNonlinLightfvSGIX' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'terms',
        'GLint* '
      ],
      [
        'data',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetNonlinLightfvSGIX_c',
    'feature' => 'GL_SGIX_nonlinear_lighting_pervertex',
    'glewImpl' => '__glewGetNonlinLightfvSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetNonlinMaterialfvSGIX' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'terms',
        'GLint* '
      ],
      [
        'data',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glGetNonlinMaterialfvSGIX_c',
    'feature' => 'GL_SGIX_nonlinear_lighting_pervertex',
    'glewImpl' => '__glewGetNonlinMaterialfvSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetObjectBufferfvATI' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetObjectBufferfvATI_c',
    'feature' => 'GL_ATI_vertex_array_object',
    'glewImpl' => '__glewGetObjectBufferfvATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetObjectBufferivATI' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetObjectBufferivATI_c',
    'feature' => 'GL_ATI_vertex_array_object',
    'glewImpl' => '__glewGetObjectBufferivATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetObjectLabel' => {
    'argdata' => [
      [
        'identifier',
        'GLenum '
      ],
      [
        'name',
        'GLuint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'label',
        'GLchar *'
      ]
    ],
    'binding_name' => 'glGetObjectLabel_c',
    'feature' => 'GL_KHR_debug',
    'glewImpl' => '__glewGetObjectLabel',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetObjectLabelEXT' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'object',
        'GLuint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'label',
        'GLchar *'
      ]
    ],
    'binding_name' => 'glGetObjectLabelEXT_c',
    'feature' => 'GL_EXT_debug_label',
    'glewImpl' => '__glewGetObjectLabelEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetObjectParameterfvARB' => {
    'argdata' => [
      [
        'obj',
        'GLhandleARB '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetObjectParameterfvARB_c',
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewGetObjectParameterfvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetObjectParameterivAPPLE' => {
    'argdata' => [
      [
        'objectType',
        'GLenum '
      ],
      [
        'name',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetObjectParameterivAPPLE_c',
    'feature' => 'GL_APPLE_object_purgeable',
    'glewImpl' => '__glewGetObjectParameterivAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetObjectParameterivARB' => {
    'argdata' => [
      [
        'obj',
        'GLhandleARB '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetObjectParameterivARB_c',
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewGetObjectParameterivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetObjectPtrLabel' => {
    'argdata' => [
      [
        'ptr',
        'void* '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'label',
        'GLchar *'
      ]
    ],
    'binding_name' => 'glGetObjectPtrLabel_c',
    'feature' => 'GL_KHR_debug',
    'glewImpl' => '__glewGetObjectPtrLabel',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetOcclusionQueryivNV' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetOcclusionQueryivNV_c',
    'feature' => 'GL_NV_occlusion_query',
    'glewImpl' => '__glewGetOcclusionQueryivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetOcclusionQueryuivNV' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGetOcclusionQueryuivNV_c',
    'feature' => 'GL_NV_occlusion_query',
    'glewImpl' => '__glewGetOcclusionQueryuivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPathColorGenfvNV' => {
    'argdata' => [
      [
        'color',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'value',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetPathColorGenfvNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewGetPathColorGenfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPathColorGenivNV' => {
    'argdata' => [
      [
        'color',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'value',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetPathColorGenivNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewGetPathColorGenivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPathCommandsNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'commands',
        'GLubyte* '
      ]
    ],
    'binding_name' => 'glGetPathCommandsNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewGetPathCommandsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPathCoordsNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'coords',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetPathCoordsNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewGetPathCoordsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPathDashArrayNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'dashArray',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetPathDashArrayNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewGetPathDashArrayNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPathLengthNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'startSegment',
        'GLsizei '
      ],
      [
        'numSegments',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewGetPathLengthNV',
    'glewtype' => 'fun',
    'restype' => 'GLfloat'
  },
  'glGetPathMetricRangeNV' => {
    'argdata' => [
      [
        'metricQueryMask',
        'GLbitfield '
      ],
      [
        'firstPathName',
        'GLuint '
      ],
      [
        'numPaths',
        'GLsizei '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'metrics',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetPathMetricRangeNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewGetPathMetricRangeNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPathMetricsNV' => {
    'argdata' => [
      [
        'metricQueryMask',
        'GLbitfield '
      ],
      [
        'numPaths',
        'GLsizei '
      ],
      [
        'pathNameType',
        'GLenum '
      ],
      [
        'paths',
        'const void *'
      ],
      [
        'pathBase',
        'GLuint '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'metrics',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetPathMetricsNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewGetPathMetricsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPathParameterfvNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'value',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetPathParameterfvNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewGetPathParameterfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPathParameterivNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'value',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetPathParameterivNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewGetPathParameterivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPathSpacingNV' => {
    'argdata' => [
      [
        'pathListMode',
        'GLenum '
      ],
      [
        'numPaths',
        'GLsizei '
      ],
      [
        'pathNameType',
        'GLenum '
      ],
      [
        'paths',
        'const void *'
      ],
      [
        'pathBase',
        'GLuint '
      ],
      [
        'advanceScale',
        'GLfloat '
      ],
      [
        'kerningScale',
        'GLfloat '
      ],
      [
        'transformType',
        'GLenum '
      ],
      [
        'returnedSpacing',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetPathSpacingNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewGetPathSpacingNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPathTexGenfvNV' => {
    'argdata' => [
      [
        'texCoordSet',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'value',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetPathTexGenfvNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewGetPathTexGenfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPathTexGenivNV' => {
    'argdata' => [
      [
        'texCoordSet',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'value',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetPathTexGenivNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewGetPathTexGenivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPerfCounterInfoINTEL' => {
    'argdata' => [
      [
        'queryId',
        'GLuint '
      ],
      [
        'counterId',
        'GLuint '
      ],
      [
        'counterNameLength',
        'GLuint '
      ],
      [
        'counterName',
        'GLchar* '
      ],
      [
        'counterDescLength',
        'GLuint '
      ],
      [
        'counterDesc',
        'GLchar *'
      ],
      [
        'counterOffset',
        'GLuint *'
      ],
      [
        'counterDataSize',
        'GLuint *'
      ],
      [
        'counterTypeEnum',
        'GLuint *'
      ],
      [
        'counterDataTypeEnum',
        'GLuint *'
      ],
      [
        'rawCounterMaxValue',
        'GLuint64 *'
      ]
    ],
    'binding_name' => 'glGetPerfCounterInfoINTEL_c',
    'feature' => 'GL_INTEL_performance_query',
    'glewImpl' => '__glewGetPerfCounterInfoINTEL',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPerfMonitorCounterDataAMD' => {
    'argdata' => [
      [
        'monitor',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'dataSize',
        'GLsizei '
      ],
      [
        'data',
        'GLuint* '
      ],
      [
        'bytesWritten',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetPerfMonitorCounterDataAMD_c',
    'feature' => 'GL_AMD_performance_monitor',
    'glewImpl' => '__glewGetPerfMonitorCounterDataAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPerfMonitorCounterInfoAMD' => {
    'argdata' => [
      [
        'group',
        'GLuint '
      ],
      [
        'counter',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'data',
        'void *'
      ]
    ],
    'binding_name' => 'glGetPerfMonitorCounterInfoAMD_c',
    'feature' => 'GL_AMD_performance_monitor',
    'glewImpl' => '__glewGetPerfMonitorCounterInfoAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPerfMonitorCounterStringAMD' => {
    'argdata' => [
      [
        'group',
        'GLuint '
      ],
      [
        'counter',
        'GLuint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'counterString',
        'GLchar *'
      ]
    ],
    'binding_name' => 'glGetPerfMonitorCounterStringAMD_c',
    'feature' => 'GL_AMD_performance_monitor',
    'glewImpl' => '__glewGetPerfMonitorCounterStringAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPerfMonitorCountersAMD' => {
    'argdata' => [
      [
        'group',
        'GLuint '
      ],
      [
        'numCounters',
        'GLint* '
      ],
      [
        'maxActiveCounters',
        'GLint *'
      ],
      [
        'countersSize',
        'GLsizei '
      ],
      [
        'counters',
        'GLuint *'
      ]
    ],
    'binding_name' => 'glGetPerfMonitorCountersAMD_c',
    'feature' => 'GL_AMD_performance_monitor',
    'glewImpl' => '__glewGetPerfMonitorCountersAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPerfMonitorGroupStringAMD' => {
    'argdata' => [
      [
        'group',
        'GLuint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'groupString',
        'GLchar *'
      ]
    ],
    'binding_name' => 'glGetPerfMonitorGroupStringAMD_c',
    'feature' => 'GL_AMD_performance_monitor',
    'glewImpl' => '__glewGetPerfMonitorGroupStringAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPerfMonitorGroupsAMD' => {
    'argdata' => [
      [
        'numGroups',
        'GLint* '
      ],
      [
        'groupsSize',
        'GLsizei '
      ],
      [
        'groups',
        'GLuint *'
      ]
    ],
    'binding_name' => 'glGetPerfMonitorGroupsAMD_c',
    'feature' => 'GL_AMD_performance_monitor',
    'glewImpl' => '__glewGetPerfMonitorGroupsAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPerfQueryDataINTEL' => {
    'argdata' => [
      [
        'queryHandle',
        'GLuint '
      ],
      [
        'flags',
        'GLuint '
      ],
      [
        'dataSize',
        'GLsizei '
      ],
      [
        'data',
        'void *'
      ],
      [
        'bytesWritten',
        'GLuint *'
      ]
    ],
    'binding_name' => 'glGetPerfQueryDataINTEL_c',
    'feature' => 'GL_INTEL_performance_query',
    'glewImpl' => '__glewGetPerfQueryDataINTEL',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPerfQueryIdByNameINTEL' => {
    'argdata' => [
      [
        'queryName',
        'GLchar* '
      ],
      [
        'queryId',
        'GLuint *'
      ]
    ],
    'binding_name' => 'glGetPerfQueryIdByNameINTEL_c',
    'feature' => 'GL_INTEL_performance_query',
    'glewImpl' => '__glewGetPerfQueryIdByNameINTEL',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPerfQueryInfoINTEL' => {
    'argdata' => [
      [
        'queryId',
        'GLuint '
      ],
      [
        'queryNameLength',
        'GLuint '
      ],
      [
        'queryName',
        'GLchar* '
      ],
      [
        'dataSize',
        'GLuint *'
      ],
      [
        'noCounters',
        'GLuint *'
      ],
      [
        'noInstances',
        'GLuint *'
      ],
      [
        'capsMask',
        'GLuint *'
      ]
    ],
    'binding_name' => 'glGetPerfQueryInfoINTEL_c',
    'feature' => 'GL_INTEL_performance_query',
    'glewImpl' => '__glewGetPerfQueryInfoINTEL',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPixelMapfv' => {
    'argdata' => [
      [
        'map',
        'GLenum '
      ],
      [
        'values',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetPixelMapfv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPixelMapuiv' => {
    'argdata' => [
      [
        'map',
        'GLenum '
      ],
      [
        'values',
        'GLuint *'
      ]
    ],
    'binding_name' => 'glGetPixelMapuiv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPixelMapusv' => {
    'argdata' => [
      [
        'map',
        'GLenum '
      ],
      [
        'values',
        'GLushort *'
      ]
    ],
    'binding_name' => 'glGetPixelMapusv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPixelTransformParameterfvEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glGetPixelTransformParameterfvEXT_c',
    'feature' => 'GL_EXT_pixel_transform',
    'glewImpl' => '__glewGetPixelTransformParameterfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPixelTransformParameterfvSGI' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetPixelTransformParameterfvSGI_c',
    'feature' => 'GL_SGI_fft',
    'glewImpl' => '__glewGetPixelTransformParameterfvSGI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPixelTransformParameterivEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glGetPixelTransformParameterivEXT_c',
    'feature' => 'GL_EXT_pixel_transform',
    'glewImpl' => '__glewGetPixelTransformParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPixelTransformParameterivSGI' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetPixelTransformParameterivSGI_c',
    'feature' => 'GL_SGI_fft',
    'glewImpl' => '__glewGetPixelTransformParameterivSGI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPointerIndexedvEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'void** '
      ]
    ],
    'binding_name' => 'glGetPointerIndexedvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetPointerIndexedvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPointeri_vEXT' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'void** '
      ]
    ],
    'binding_name' => 'glGetPointeri_vEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetPointeri_vEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPointerv' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'void* *'
      ]
    ],
    'binding_name' => 'glGetPointerv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetPolygonStipple' => {
    'argdata' => [
      [
        'mask',
        'GLubyte *'
      ]
    ],
    'binding_name' => 'glGetPolygonStipple_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProcAddressREGAL' => {
    'argdata' => [
      [
        'name',
        'const GLchar *'
      ]
    ],
    'binding_name' => 'glGetProcAddressREGAL_c',
    'feature' => 'GL_REGAL_proc_address',
    'glewImpl' => '__glewGetProcAddressREGAL',
    'glewtype' => 'fun',
    'restype' => 'void *'
  },
  'glGetProgramBinary' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'binaryFormat',
        'GLenum *'
      ],
      [
        'binary',
        'void*'
      ]
    ],
    'binding_name' => 'glGetProgramBinary_c',
    'feature' => 'GL_ARB_get_program_binary',
    'glewImpl' => '__glewGetProgramBinary',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProgramEnvParameterdvARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'GLdouble* '
      ]
    ],
    'binding_name' => 'glGetProgramEnvParameterdvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewGetProgramEnvParameterdvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProgramEnvParameterfvARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetProgramEnvParameterfvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewGetProgramEnvParameterfvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProgramInfoLog' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'infoLog',
        'GLchar* '
      ]
    ],
    'binding_name' => 'glGetProgramInfoLog_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewGetProgramInfoLog',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProgramInterfaceiv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'programInterface',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetProgramInterfaceiv_c',
    'feature' => 'GL_ARB_program_interface_query',
    'glewImpl' => '__glewGetProgramInterfaceiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProgramLocalParameterdvARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'GLdouble* '
      ]
    ],
    'binding_name' => 'glGetProgramLocalParameterdvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewGetProgramLocalParameterdvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProgramLocalParameterfvARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetProgramLocalParameterfvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewGetProgramLocalParameterfvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProgramNamedParameterdvNV' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'len',
        'GLsizei '
      ],
      [
        'name',
        'const GLubyte* '
      ],
      [
        'params',
        'GLdouble *'
      ]
    ],
    'binding_name' => 'glGetProgramNamedParameterdvNV_c',
    'feature' => 'GL_NV_fragment_program',
    'glewImpl' => '__glewGetProgramNamedParameterdvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProgramNamedParameterfvNV' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'len',
        'GLsizei '
      ],
      [
        'name',
        'const GLubyte* '
      ],
      [
        'params',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetProgramNamedParameterfvNV_c',
    'feature' => 'GL_NV_fragment_program',
    'glewImpl' => '__glewGetProgramNamedParameterfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProgramParameterdvNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLdouble* '
      ]
    ],
    'binding_name' => 'glGetProgramParameterdvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewGetProgramParameterdvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProgramParameterfvNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetProgramParameterfvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewGetProgramParameterfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProgramPipelineInfoLog' => {
    'argdata' => [
      [
        'pipeline',
        'GLuint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'infoLog',
        'GLchar *'
      ]
    ],
    'binding_name' => 'glGetProgramPipelineInfoLog_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewGetProgramPipelineInfoLog',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProgramPipelineiv' => {
    'argdata' => [
      [
        'pipeline',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetProgramPipelineiv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewGetProgramPipelineiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProgramResourceIndex' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'programInterface',
        'GLenum '
      ],
      [
        'name',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glGetProgramResourceIndex_c',
    'feature' => 'GL_ARB_program_interface_query',
    'glewImpl' => '__glewGetProgramResourceIndex',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glGetProgramResourceLocation' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'programInterface',
        'GLenum '
      ],
      [
        'name',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glGetProgramResourceLocation_c',
    'feature' => 'GL_ARB_program_interface_query',
    'glewImpl' => '__glewGetProgramResourceLocation',
    'glewtype' => 'fun',
    'restype' => 'GLint'
  },
  'glGetProgramResourceLocationIndex' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'programInterface',
        'GLenum '
      ],
      [
        'name',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glGetProgramResourceLocationIndex_c',
    'feature' => 'GL_ARB_program_interface_query',
    'glewImpl' => '__glewGetProgramResourceLocationIndex',
    'glewtype' => 'fun',
    'restype' => 'GLint'
  },
  'glGetProgramResourceLocationIndexEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'programInterface',
        'GLenum '
      ],
      [
        'name',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glGetProgramResourceLocationIndexEXT_c',
    'feature' => 'GL_EXT_blend_func_extended',
    'glewImpl' => '__glewGetProgramResourceLocationIndexEXT',
    'glewtype' => 'fun',
    'restype' => 'GLint'
  },
  'glGetProgramResourceName' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'programInterface',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'name',
        'GLchar *'
      ]
    ],
    'binding_name' => 'glGetProgramResourceName_c',
    'feature' => 'GL_ARB_program_interface_query',
    'glewImpl' => '__glewGetProgramResourceName',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProgramResourcefvNV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'programInterface',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'propCount',
        'GLsizei '
      ],
      [
        'props',
        'const GLenum* '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei *'
      ],
      [
        'params',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetProgramResourcefvNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewGetProgramResourcefvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProgramResourceiv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'programInterface',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'propCount',
        'GLsizei '
      ],
      [
        'props',
        'const GLenum* '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei *'
      ],
      [
        'params',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetProgramResourceiv_c',
    'feature' => 'GL_ARB_program_interface_query',
    'glewImpl' => '__glewGetProgramResourceiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProgramStageiv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'shadertype',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'values',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetProgramStageiv_c',
    'feature' => 'GL_ARB_shader_subroutine',
    'glewImpl' => '__glewGetProgramStageiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProgramStringARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'string',
        'void *'
      ]
    ],
    'binding_name' => 'glGetProgramStringARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewGetProgramStringARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProgramStringNV' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'program',
        'GLubyte* '
      ]
    ],
    'binding_name' => 'glGetProgramStringNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewGetProgramStringNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProgramiv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetProgramiv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewGetProgramiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProgramivARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetProgramivARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewGetProgramivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetProgramivNV' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetProgramivNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewGetProgramivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetQueryBufferObjecti64v' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'offset',
        'GLintptr '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetQueryBufferObjecti64v',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetQueryBufferObjectiv' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'offset',
        'GLintptr '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetQueryBufferObjectiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetQueryBufferObjectui64v' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'offset',
        'GLintptr '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetQueryBufferObjectui64v',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetQueryBufferObjectuiv' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'offset',
        'GLintptr '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetQueryBufferObjectuiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetQueryIndexediv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetQueryIndexediv_c',
    'feature' => 'GL_ARB_transform_feedback3',
    'glewImpl' => '__glewGetQueryIndexediv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetQueryObjecti64v' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint64* '
      ]
    ],
    'binding_name' => 'glGetQueryObjecti64v_c',
    'feature' => 'GL_ARB_timer_query',
    'glewImpl' => '__glewGetQueryObjecti64v',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetQueryObjecti64vANGLE' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint64* '
      ]
    ],
    'binding_name' => 'glGetQueryObjecti64vANGLE_c',
    'feature' => 'GL_ANGLE_timer_query',
    'glewImpl' => '__glewGetQueryObjecti64vANGLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetQueryObjecti64vEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint64EXT *'
      ]
    ],
    'binding_name' => 'glGetQueryObjecti64vEXT_c',
    'feature' => 'GL_EXT_timer_query',
    'glewImpl' => '__glewGetQueryObjecti64vEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetQueryObjectiv' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetQueryObjectiv_c',
    'feature' => 'GL_VERSION_1_5',
    'glewImpl' => '__glewGetQueryObjectiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetQueryObjectivANGLE' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetQueryObjectivANGLE_c',
    'feature' => 'GL_ANGLE_timer_query',
    'glewImpl' => '__glewGetQueryObjectivANGLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetQueryObjectivARB' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetQueryObjectivARB_c',
    'feature' => 'GL_ARB_occlusion_query',
    'glewImpl' => '__glewGetQueryObjectivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetQueryObjectui64v' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint64* '
      ]
    ],
    'binding_name' => 'glGetQueryObjectui64v_c',
    'feature' => 'GL_ARB_timer_query',
    'glewImpl' => '__glewGetQueryObjectui64v',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetQueryObjectui64vANGLE' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint64* '
      ]
    ],
    'binding_name' => 'glGetQueryObjectui64vANGLE_c',
    'feature' => 'GL_ANGLE_timer_query',
    'glewImpl' => '__glewGetQueryObjectui64vANGLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetQueryObjectui64vEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint64EXT *'
      ]
    ],
    'binding_name' => 'glGetQueryObjectui64vEXT_c',
    'feature' => 'GL_EXT_timer_query',
    'glewImpl' => '__glewGetQueryObjectui64vEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetQueryObjectuiv' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGetQueryObjectuiv_c',
    'feature' => 'GL_VERSION_1_5',
    'glewImpl' => '__glewGetQueryObjectuiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetQueryObjectuivANGLE' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGetQueryObjectuivANGLE_c',
    'feature' => 'GL_ANGLE_timer_query',
    'glewImpl' => '__glewGetQueryObjectuivANGLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetQueryObjectuivARB' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGetQueryObjectuivARB_c',
    'feature' => 'GL_ARB_occlusion_query',
    'glewImpl' => '__glewGetQueryObjectuivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetQueryiv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetQueryiv_c',
    'feature' => 'GL_VERSION_1_5',
    'glewImpl' => '__glewGetQueryiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetQueryivANGLE' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetQueryivANGLE_c',
    'feature' => 'GL_ANGLE_timer_query',
    'glewImpl' => '__glewGetQueryivANGLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetQueryivARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetQueryivARB_c',
    'feature' => 'GL_ARB_occlusion_query',
    'glewImpl' => '__glewGetQueryivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetRenderbufferParameteriv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetRenderbufferParameteriv_c',
    'feature' => 'GL_ARB_framebuffer_object',
    'glewImpl' => '__glewGetRenderbufferParameteriv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetRenderbufferParameterivEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetRenderbufferParameterivEXT_c',
    'feature' => 'GL_EXT_framebuffer_object',
    'glewImpl' => '__glewGetRenderbufferParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetSamplerParameterIiv' => {
    'argdata' => [
      [
        'sampler',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetSamplerParameterIiv_c',
    'feature' => 'GL_ARB_sampler_objects',
    'glewImpl' => '__glewGetSamplerParameterIiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetSamplerParameterIuiv' => {
    'argdata' => [
      [
        'sampler',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGetSamplerParameterIuiv_c',
    'feature' => 'GL_ARB_sampler_objects',
    'glewImpl' => '__glewGetSamplerParameterIuiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetSamplerParameterfv' => {
    'argdata' => [
      [
        'sampler',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetSamplerParameterfv_c',
    'feature' => 'GL_ARB_sampler_objects',
    'glewImpl' => '__glewGetSamplerParameterfv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetSamplerParameteriv' => {
    'argdata' => [
      [
        'sampler',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetSamplerParameteriv_c',
    'feature' => 'GL_ARB_sampler_objects',
    'glewImpl' => '__glewGetSamplerParameteriv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetSemaphoreParameterui64vEXT' => {
    'argdata' => [
      [
        'semaphore',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint64* '
      ]
    ],
    'binding_name' => 'glGetSemaphoreParameterui64vEXT_c',
    'feature' => 'GL_EXT_semaphore',
    'glewImpl' => '__glewGetSemaphoreParameterui64vEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetSeparableFilter' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'row',
        'void *'
      ],
      [
        'column',
        'void *'
      ],
      [
        'span',
        'void *'
      ]
    ],
    'binding_name' => 'glGetSeparableFilter_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewGetSeparableFilter',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetSeparableFilterEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'row',
        'void *'
      ],
      [
        'column',
        'void *'
      ],
      [
        'span',
        'void *'
      ]
    ],
    'binding_name' => 'glGetSeparableFilterEXT_c',
    'feature' => 'GL_EXT_convolution',
    'glewImpl' => '__glewGetSeparableFilterEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetShaderInfoLog' => {
    'argdata' => [
      [
        'shader',
        'GLuint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'infoLog',
        'GLchar* '
      ]
    ],
    'binding_name' => 'glGetShaderInfoLog_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewGetShaderInfoLog',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetShaderPrecisionFormat' => {
    'argdata' => [
      [
        'shadertype',
        'GLenum '
      ],
      [
        'precisiontype',
        'GLenum '
      ],
      [
        'range',
        'GLint* '
      ],
      [
        'precision',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetShaderPrecisionFormat_c',
    'feature' => 'GL_ARB_ES2_compatibility',
    'glewImpl' => '__glewGetShaderPrecisionFormat',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetShaderSource' => {
    'argdata' => [
      [
        'obj',
        'GLuint '
      ],
      [
        'maxLength',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'source',
        'GLchar* '
      ]
    ],
    'binding_name' => 'glGetShaderSource_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewGetShaderSource',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetShaderSourceARB' => {
    'argdata' => [
      [
        'obj',
        'GLhandleARB '
      ],
      [
        'maxLength',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'source',
        'GLcharARB *'
      ]
    ],
    'binding_name' => 'glGetShaderSourceARB_c',
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewGetShaderSourceARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetShaderiv' => {
    'argdata' => [
      [
        'shader',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetShaderiv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewGetShaderiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetSharpenTexFuncSGIS' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'points',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetSharpenTexFuncSGIS_c',
    'feature' => 'GL_SGIS_sharpen_texture',
    'glewImpl' => '__glewGetSharpenTexFuncSGIS',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetStageIndexNV' => {
    'argdata' => [
      [
        'shadertype',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_command_list',
    'glewImpl' => '__glewGetStageIndexNV',
    'glewtype' => 'fun',
    'restype' => 'GLushort'
  },
  'glGetString' => {
    'feature' => 'GL_VERSION_1_1',
    'glewtype' => 'fun',
    'restype' => 'const GLubyte *',
    'signature' => 'GLenum name'
  },
  'glGetSubroutineIndex' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'shadertype',
        'GLenum '
      ],
      [
        'name',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glGetSubroutineIndex_c',
    'feature' => 'GL_ARB_shader_subroutine',
    'glewImpl' => '__glewGetSubroutineIndex',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glGetSubroutineUniformLocation' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'shadertype',
        'GLenum '
      ],
      [
        'name',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glGetSubroutineUniformLocation_c',
    'feature' => 'GL_ARB_shader_subroutine',
    'glewImpl' => '__glewGetSubroutineUniformLocation',
    'glewtype' => 'fun',
    'restype' => 'GLint'
  },
  'glGetSynciv' => {
    'argdata' => [
      [
        'myGLsync',
        'GLsync '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'values',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetSynciv_c',
    'feature' => 'GL_ARB_sync',
    'glewImpl' => '__glewGetSynciv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetSyncivAPPLE' => {
    'argdata' => [
      [
        'myGLsync',
        'GLsync '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'values',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetSyncivAPPLE_c',
    'feature' => 'GL_APPLE_sync',
    'glewImpl' => '__glewGetSyncivAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTexBumpParameterfvATI' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetTexBumpParameterfvATI_c',
    'feature' => 'GL_ATI_envmap_bumpmap',
    'glewImpl' => '__glewGetTexBumpParameterfvATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTexBumpParameterivATI' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetTexBumpParameterivATI_c',
    'feature' => 'GL_ATI_envmap_bumpmap',
    'glewImpl' => '__glewGetTexBumpParameterivATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTexEnvfv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetTexEnvfv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTexEnviv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetTexEnviv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTexEnvxv' => {
    'argdata' => [
      [
        'env',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfixed* '
      ]
    ],
    'binding_name' => 'glGetTexEnvxv_c',
    'feature' => 'GL_REGAL_ES1_1_compatibility',
    'glewImpl' => '__glewGetTexEnvxv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTexFilterFuncSGIS' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'filter',
        'GLenum '
      ],
      [
        'weights',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetTexFilterFuncSGIS_c',
    'feature' => 'GL_SGIS_texture_filter4',
    'glewImpl' => '__glewGetTexFilterFuncSGIS',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTexGendv' => {
    'argdata' => [
      [
        'coord',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLdouble *'
      ]
    ],
    'binding_name' => 'glGetTexGendv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTexGenfv' => {
    'argdata' => [
      [
        'coord',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetTexGenfv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTexGeniv' => {
    'argdata' => [
      [
        'coord',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetTexGeniv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTexImage' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'void *'
      ]
    ],
    'binding_name' => 'glGetTexImage_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTexLevelParameterfv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetTexLevelParameterfv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTexLevelParameteriv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetTexLevelParameteriv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTexParameterIiv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetTexParameterIiv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewGetTexParameterIiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTexParameterIivEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetTexParameterIivEXT_c',
    'feature' => 'GL_EXT_texture_integer',
    'glewImpl' => '__glewGetTexParameterIivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTexParameterIuiv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGetTexParameterIuiv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewGetTexParameterIuiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTexParameterIuivEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint *'
      ]
    ],
    'binding_name' => 'glGetTexParameterIuivEXT_c',
    'feature' => 'GL_EXT_texture_integer',
    'glewImpl' => '__glewGetTexParameterIuivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTexParameterPointervAPPLE' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'void **'
      ]
    ],
    'binding_name' => 'glGetTexParameterPointervAPPLE_c',
    'feature' => 'GL_APPLE_texture_range',
    'glewImpl' => '__glewGetTexParameterPointervAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTexParameterfv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetTexParameterfv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTexParameteriv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetTexParameteriv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTexParameterxv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfixed* '
      ]
    ],
    'binding_name' => 'glGetTexParameterxv_c',
    'feature' => 'GL_REGAL_ES1_1_compatibility',
    'glewImpl' => '__glewGetTexParameterxv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTextureHandleARB' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_bindless_texture',
    'glewImpl' => '__glewGetTextureHandleARB',
    'glewtype' => 'fun',
    'restype' => 'GLuint64'
  },
  'glGetTextureHandleNV' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_bindless_texture',
    'glewImpl' => '__glewGetTextureHandleNV',
    'glewtype' => 'fun',
    'restype' => 'GLuint64'
  },
  'glGetTextureImage' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'pixels',
        'void *'
      ]
    ],
    'binding_name' => 'glGetTextureImage_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetTextureImage',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTextureImageEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'void *'
      ]
    ],
    'binding_name' => 'glGetTextureImageEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetTextureImageEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTextureLevelParameterfv' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetTextureLevelParameterfv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetTextureLevelParameterfv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTextureLevelParameterfvEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetTextureLevelParameterfvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetTextureLevelParameterfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTextureLevelParameteriv' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetTextureLevelParameteriv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetTextureLevelParameteriv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTextureLevelParameterivEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetTextureLevelParameterivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetTextureLevelParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTextureParameterIiv' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetTextureParameterIiv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetTextureParameterIiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTextureParameterIivEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetTextureParameterIivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetTextureParameterIivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTextureParameterIuiv' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGetTextureParameterIuiv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetTextureParameterIuiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTextureParameterIuivEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGetTextureParameterIuivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetTextureParameterIuivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTextureParameterfv' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetTextureParameterfv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetTextureParameterfv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTextureParameterfvEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetTextureParameterfvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetTextureParameterfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTextureParameteriv' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetTextureParameteriv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetTextureParameteriv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTextureParameterivEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetTextureParameterivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetTextureParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTextureSamplerHandleARB' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'sampler',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_bindless_texture',
    'glewImpl' => '__glewGetTextureSamplerHandleARB',
    'glewtype' => 'fun',
    'restype' => 'GLuint64'
  },
  'glGetTextureSamplerHandleNV' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'sampler',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_bindless_texture',
    'glewImpl' => '__glewGetTextureSamplerHandleNV',
    'glewtype' => 'fun',
    'restype' => 'GLuint64'
  },
  'glGetTextureSubImage' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'pixels',
        'void *'
      ]
    ],
    'binding_name' => 'glGetTextureSubImage_c',
    'feature' => 'GL_ARB_get_texture_sub_image',
    'glewImpl' => '__glewGetTextureSubImage',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTrackMatrixivNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'address',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetTrackMatrixivNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewGetTrackMatrixivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTransformFeedbackVarying' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei * '
      ],
      [
        'size',
        'GLsizei * '
      ],
      [
        'type',
        'GLenum * '
      ],
      [
        'name',
        'GLchar * '
      ]
    ],
    'binding_name' => 'glGetTransformFeedbackVarying_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewGetTransformFeedbackVarying',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTransformFeedbackVaryingEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'size',
        'GLsizei *'
      ],
      [
        'type',
        'GLenum *'
      ],
      [
        'name',
        'GLchar *'
      ]
    ],
    'binding_name' => 'glGetTransformFeedbackVaryingEXT_c',
    'feature' => 'GL_EXT_transform_feedback',
    'glewImpl' => '__glewGetTransformFeedbackVaryingEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTransformFeedbackVaryingNV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'location',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetTransformFeedbackVaryingNV_c',
    'feature' => 'GL_NV_transform_feedback',
    'glewImpl' => '__glewGetTransformFeedbackVaryingNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTransformFeedbacki64_v' => {
    'argdata' => [
      [
        'xfb',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'param',
        'GLint64* '
      ]
    ],
    'binding_name' => 'glGetTransformFeedbacki64_v_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetTransformFeedbacki64_v',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTransformFeedbacki_v' => {
    'argdata' => [
      [
        'xfb',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'param',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetTransformFeedbacki_v_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetTransformFeedbacki_v',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTransformFeedbackiv' => {
    'argdata' => [
      [
        'xfb',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetTransformFeedbackiv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetTransformFeedbackiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetTranslatedShaderSourceANGLE' => {
    'argdata' => [
      [
        'shader',
        'GLuint '
      ],
      [
        'bufsize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'source',
        'GLchar* '
      ]
    ],
    'binding_name' => 'glGetTranslatedShaderSourceANGLE_c',
    'feature' => 'GL_ANGLE_translated_shader_source',
    'glewImpl' => '__glewGetTranslatedShaderSourceANGLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetUniformBlockIndex' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'uniformBlockName',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glGetUniformBlockIndex_c',
    'feature' => 'GL_ARB_uniform_buffer_object',
    'glewImpl' => '__glewGetUniformBlockIndex',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glGetUniformBufferSizeEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_bindable_uniform',
    'glewImpl' => '__glewGetUniformBufferSizeEXT',
    'glewtype' => 'fun',
    'restype' => 'GLint'
  },
  'glGetUniformIndices' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'uniformCount',
        'GLsizei '
      ],
      [
        'uniformNames',
        'const GLchar* const * '
      ],
      [
        'uniformIndices',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGetUniformIndices_c',
    'feature' => 'GL_ARB_uniform_buffer_object',
    'glewImpl' => '__glewGetUniformIndices',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetUniformLocation' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'name',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glGetUniformLocation_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewGetUniformLocation',
    'glewtype' => 'fun',
    'restype' => 'GLint'
  },
  'glGetUniformLocationARB' => {
    'argdata' => [
      [
        'programObj',
        'GLhandleARB '
      ],
      [
        'name',
        'const GLcharARB* '
      ]
    ],
    'binding_name' => 'glGetUniformLocationARB_c',
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewGetUniformLocationARB',
    'glewtype' => 'fun',
    'restype' => 'GLint'
  },
  'glGetUniformOffsetEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_bindable_uniform',
    'glewImpl' => '__glewGetUniformOffsetEXT',
    'glewtype' => 'fun',
    'restype' => 'GLintptr'
  },
  'glGetUniformSubroutineuiv' => {
    'argdata' => [
      [
        'shadertype',
        'GLenum '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'params',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGetUniformSubroutineuiv_c',
    'feature' => 'GL_ARB_shader_subroutine',
    'glewImpl' => '__glewGetUniformSubroutineuiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetUniformdv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'params',
        'GLdouble* '
      ]
    ],
    'binding_name' => 'glGetUniformdv_c',
    'feature' => 'GL_ARB_gpu_shader_fp64',
    'glewImpl' => '__glewGetUniformdv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetUniformfv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetUniformfv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewGetUniformfv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetUniformfvARB' => {
    'argdata' => [
      [
        'programObj',
        'GLhandleARB '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetUniformfvARB_c',
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewGetUniformfvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetUniformi64vARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'params',
        'GLint64* '
      ]
    ],
    'binding_name' => 'glGetUniformi64vARB_c',
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewGetUniformi64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetUniformi64vNV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'params',
        'GLint64EXT* '
      ]
    ],
    'binding_name' => 'glGetUniformi64vNV_c',
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewGetUniformi64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetUniformiv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetUniformiv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewGetUniformiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetUniformivARB' => {
    'argdata' => [
      [
        'programObj',
        'GLhandleARB '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetUniformivARB_c',
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewGetUniformivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetUniformui64vARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'params',
        'GLuint64* '
      ]
    ],
    'binding_name' => 'glGetUniformui64vARB_c',
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewGetUniformui64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetUniformui64vNV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'params',
        'GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glGetUniformui64vNV_c',
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewGetUniformui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetUniformuiv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'params',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGetUniformuiv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewGetUniformuiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetUniformuivEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'params',
        'GLuint *'
      ]
    ],
    'binding_name' => 'glGetUniformuivEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewGetUniformuivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetUnsignedBytei_vEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'data',
        'GLubyte* '
      ]
    ],
    'binding_name' => 'glGetUnsignedBytei_vEXT_c',
    'feature' => 'GL_EXT_memory_object',
    'glewImpl' => '__glewGetUnsignedBytei_vEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetUnsignedBytevEXT' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'data',
        'GLubyte* '
      ]
    ],
    'binding_name' => 'glGetUnsignedBytevEXT_c',
    'feature' => 'GL_EXT_memory_object',
    'glewImpl' => '__glewGetUnsignedBytevEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVariantArrayObjectfvATI' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetVariantArrayObjectfvATI_c',
    'feature' => 'GL_ATI_vertex_array_object',
    'glewImpl' => '__glewGetVariantArrayObjectfvATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVariantArrayObjectivATI' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetVariantArrayObjectivATI_c',
    'feature' => 'GL_ATI_vertex_array_object',
    'glewImpl' => '__glewGetVariantArrayObjectivATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVariantBooleanvEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'value',
        'GLenum '
      ],
      [
        'data',
        'GLboolean *'
      ]
    ],
    'binding_name' => 'glGetVariantBooleanvEXT_c',
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewGetVariantBooleanvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVariantFloatvEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'value',
        'GLenum '
      ],
      [
        'data',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glGetVariantFloatvEXT_c',
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewGetVariantFloatvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVariantIntegervEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'value',
        'GLenum '
      ],
      [
        'data',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetVariantIntegervEXT_c',
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewGetVariantIntegervEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVariantPointervEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'value',
        'GLenum '
      ],
      [
        'data',
        'void **'
      ]
    ],
    'binding_name' => 'glGetVariantPointervEXT_c',
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewGetVariantPointervEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVaryingLocationNV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'name',
        'const GLchar *'
      ]
    ],
    'binding_name' => 'glGetVaryingLocationNV_c',
    'feature' => 'GL_NV_transform_feedback',
    'glewImpl' => '__glewGetVaryingLocationNV',
    'glewtype' => 'fun',
    'restype' => 'GLint'
  },
  'glGetVectorOperationSGIX' => {
    'argdata' => [
      [
        'operation',
        'GLenum '
      ]
    ],
    'feature' => 'GL_SGIX_vector_ops',
    'glewImpl' => '__glewGetVectorOperationSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexArrayIndexed64iv' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint64* '
      ]
    ],
    'binding_name' => 'glGetVertexArrayIndexed64iv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetVertexArrayIndexed64iv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexArrayIndexediv' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetVertexArrayIndexediv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetVertexArrayIndexediv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexArrayIntegeri_vEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetVertexArrayIntegeri_vEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetVertexArrayIntegeri_vEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexArrayIntegervEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetVertexArrayIntegervEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetVertexArrayIntegervEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexArrayPointeri_vEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'void** '
      ]
    ],
    'binding_name' => 'glGetVertexArrayPointeri_vEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetVertexArrayPointeri_vEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexArrayPointervEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'void** '
      ]
    ],
    'binding_name' => 'glGetVertexArrayPointervEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewGetVertexArrayPointervEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexArrayiv' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetVertexArrayiv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewGetVertexArrayiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribArrayObjectfvATI' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetVertexAttribArrayObjectfvATI_c',
    'feature' => 'GL_ATI_vertex_attrib_array_object',
    'glewImpl' => '__glewGetVertexAttribArrayObjectfvATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribArrayObjectivATI' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetVertexAttribArrayObjectivATI_c',
    'feature' => 'GL_ATI_vertex_attrib_array_object',
    'glewImpl' => '__glewGetVertexAttribArrayObjectivATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribIiv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetVertexAttribIiv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewGetVertexAttribIiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribIivEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint *'
      ]
    ],
    'binding_name' => 'glGetVertexAttribIivEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewGetVertexAttribIivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribIuiv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGetVertexAttribIuiv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewGetVertexAttribIuiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribIuivEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint *'
      ]
    ],
    'binding_name' => 'glGetVertexAttribIuivEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewGetVertexAttribIuivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribLdv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLdouble* '
      ]
    ],
    'binding_name' => 'glGetVertexAttribLdv_c',
    'feature' => 'GL_ARB_vertex_attrib_64bit',
    'glewImpl' => '__glewGetVertexAttribLdv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribLdvEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLdouble* '
      ]
    ],
    'binding_name' => 'glGetVertexAttribLdvEXT_c',
    'feature' => 'GL_EXT_vertex_attrib_64bit',
    'glewImpl' => '__glewGetVertexAttribLdvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribLi64vNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint64EXT* '
      ]
    ],
    'binding_name' => 'glGetVertexAttribLi64vNV_c',
    'feature' => 'GL_NV_vertex_attrib_integer_64bit',
    'glewImpl' => '__glewGetVertexAttribLi64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribLui64vARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glGetVertexAttribLui64vARB_c',
    'feature' => 'GL_ARB_bindless_texture',
    'glewImpl' => '__glewGetVertexAttribLui64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribLui64vNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glGetVertexAttribLui64vNV_c',
    'feature' => 'GL_NV_vertex_attrib_integer_64bit',
    'glewImpl' => '__glewGetVertexAttribLui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribPointerv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'pointer',
        'void** '
      ]
    ],
    'binding_name' => 'glGetVertexAttribPointerv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewGetVertexAttribPointerv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribPointervARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'pointer',
        'void** '
      ]
    ],
    'binding_name' => 'glGetVertexAttribPointervARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewGetVertexAttribPointervARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribPointervNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'pointer',
        'void** '
      ]
    ],
    'binding_name' => 'glGetVertexAttribPointervNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewGetVertexAttribPointervNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribdv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLdouble* '
      ]
    ],
    'binding_name' => 'glGetVertexAttribdv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewGetVertexAttribdv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribdvARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLdouble* '
      ]
    ],
    'binding_name' => 'glGetVertexAttribdvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewGetVertexAttribdvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribdvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLdouble* '
      ]
    ],
    'binding_name' => 'glGetVertexAttribdvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewGetVertexAttribdvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribfv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetVertexAttribfv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewGetVertexAttribfv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribfvARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetVertexAttribfvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewGetVertexAttribfvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribfvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetVertexAttribfvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewGetVertexAttribfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribiv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetVertexAttribiv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewGetVertexAttribiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribivARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetVertexAttribivARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewGetVertexAttribivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVertexAttribivNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetVertexAttribivNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewGetVertexAttribivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVideoCaptureStreamdvNV' => {
    'argdata' => [
      [
        'video_capture_slot',
        'GLuint '
      ],
      [
        'stream',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLdouble* '
      ]
    ],
    'binding_name' => 'glGetVideoCaptureStreamdvNV_c',
    'feature' => 'GL_NV_video_capture',
    'glewImpl' => '__glewGetVideoCaptureStreamdvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVideoCaptureStreamfvNV' => {
    'argdata' => [
      [
        'video_capture_slot',
        'GLuint '
      ],
      [
        'stream',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetVideoCaptureStreamfvNV_c',
    'feature' => 'GL_NV_video_capture',
    'glewImpl' => '__glewGetVideoCaptureStreamfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVideoCaptureStreamivNV' => {
    'argdata' => [
      [
        'video_capture_slot',
        'GLuint '
      ],
      [
        'stream',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetVideoCaptureStreamivNV_c',
    'feature' => 'GL_NV_video_capture',
    'glewImpl' => '__glewGetVideoCaptureStreamivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVideoCaptureivNV' => {
    'argdata' => [
      [
        'video_capture_slot',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetVideoCaptureivNV_c',
    'feature' => 'GL_NV_video_capture',
    'glewImpl' => '__glewGetVideoCaptureivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVideoi64vNV' => {
    'argdata' => [
      [
        'video_slot',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint64EXT* '
      ]
    ],
    'binding_name' => 'glGetVideoi64vNV_c',
    'feature' => 'GL_NV_present_video',
    'glewImpl' => '__glewGetVideoi64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVideoivNV' => {
    'argdata' => [
      [
        'video_slot',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetVideoivNV_c',
    'feature' => 'GL_NV_present_video',
    'glewImpl' => '__glewGetVideoivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVideoui64vNV' => {
    'argdata' => [
      [
        'video_slot',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glGetVideoui64vNV_c',
    'feature' => 'GL_NV_present_video',
    'glewImpl' => '__glewGetVideoui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVideouivNV' => {
    'argdata' => [
      [
        'video_slot',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGetVideouivNV_c',
    'feature' => 'GL_NV_present_video',
    'glewImpl' => '__glewGetVideouivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetVkProcAddrNV' => {
    'argdata' => [
      [
        'name',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glGetVkProcAddrNV_c',
    'feature' => 'GL_NV_draw_vulkan_image',
    'glewImpl' => '__glewGetVkProcAddrNV',
    'glewtype' => 'fun',
    'restype' => 'GLVULKANPROCNV'
  },
  'glGetnColorTableARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'table',
        'void* '
      ]
    ],
    'binding_name' => 'glGetnColorTableARB_c',
    'feature' => 'GL_ARB_robustness',
    'glewImpl' => '__glewGetnColorTableARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnCompressedTexImage' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'lod',
        'GLint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'pixels',
        'GLvoid *'
      ]
    ],
    'binding_name' => 'glGetnCompressedTexImage_c',
    'feature' => 'GL_VERSION_4_5',
    'glewImpl' => '__glewGetnCompressedTexImage',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnCompressedTexImageARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'lod',
        'GLint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'img',
        'void* '
      ]
    ],
    'binding_name' => 'glGetnCompressedTexImageARB_c',
    'feature' => 'GL_ARB_robustness',
    'glewImpl' => '__glewGetnCompressedTexImageARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnConvolutionFilterARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'image',
        'void* '
      ]
    ],
    'binding_name' => 'glGetnConvolutionFilterARB_c',
    'feature' => 'GL_ARB_robustness',
    'glewImpl' => '__glewGetnConvolutionFilterARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnHistogramARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'reset',
        'GLboolean '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'values',
        'void* '
      ]
    ],
    'binding_name' => 'glGetnHistogramARB_c',
    'feature' => 'GL_ARB_robustness',
    'glewImpl' => '__glewGetnHistogramARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnMapdvARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'query',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'v',
        'GLdouble* '
      ]
    ],
    'binding_name' => 'glGetnMapdvARB_c',
    'feature' => 'GL_ARB_robustness',
    'glewImpl' => '__glewGetnMapdvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnMapfvARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'query',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'v',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetnMapfvARB_c',
    'feature' => 'GL_ARB_robustness',
    'glewImpl' => '__glewGetnMapfvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnMapivARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'query',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'v',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetnMapivARB_c',
    'feature' => 'GL_ARB_robustness',
    'glewImpl' => '__glewGetnMapivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnMinmaxARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'reset',
        'GLboolean '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'values',
        'void* '
      ]
    ],
    'binding_name' => 'glGetnMinmaxARB_c',
    'feature' => 'GL_ARB_robustness',
    'glewImpl' => '__glewGetnMinmaxARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnPixelMapfvARB' => {
    'argdata' => [
      [
        'map',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'values',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetnPixelMapfvARB_c',
    'feature' => 'GL_ARB_robustness',
    'glewImpl' => '__glewGetnPixelMapfvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnPixelMapuivARB' => {
    'argdata' => [
      [
        'map',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'values',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGetnPixelMapuivARB_c',
    'feature' => 'GL_ARB_robustness',
    'glewImpl' => '__glewGetnPixelMapuivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnPixelMapusvARB' => {
    'argdata' => [
      [
        'map',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'values',
        'GLushort* '
      ]
    ],
    'binding_name' => 'glGetnPixelMapusvARB_c',
    'feature' => 'GL_ARB_robustness',
    'glewImpl' => '__glewGetnPixelMapusvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnPolygonStippleARB' => {
    'argdata' => [
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'pattern',
        'GLubyte* '
      ]
    ],
    'binding_name' => 'glGetnPolygonStippleARB_c',
    'feature' => 'GL_ARB_robustness',
    'glewImpl' => '__glewGetnPolygonStippleARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnSeparableFilterARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'rowBufSize',
        'GLsizei '
      ],
      [
        'row',
        'void* '
      ],
      [
        'columnBufSize',
        'GLsizei '
      ],
      [
        'column',
        'void*'
      ],
      [
        'span',
        'void*'
      ]
    ],
    'binding_name' => 'glGetnSeparableFilterARB_c',
    'feature' => 'GL_ARB_robustness',
    'glewImpl' => '__glewGetnSeparableFilterARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnTexImage' => {
    'argdata' => [
      [
        'tex',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'pixels',
        'GLvoid *'
      ]
    ],
    'binding_name' => 'glGetnTexImage_c',
    'feature' => 'GL_VERSION_4_5',
    'glewImpl' => '__glewGetnTexImage',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnTexImageARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'img',
        'void* '
      ]
    ],
    'binding_name' => 'glGetnTexImageARB_c',
    'feature' => 'GL_ARB_robustness',
    'glewImpl' => '__glewGetnTexImageARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnUniformdv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'params',
        'GLdouble *'
      ]
    ],
    'binding_name' => 'glGetnUniformdv_c',
    'feature' => 'GL_VERSION_4_5',
    'glewImpl' => '__glewGetnUniformdv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnUniformdvARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'params',
        'GLdouble* '
      ]
    ],
    'binding_name' => 'glGetnUniformdvARB_c',
    'feature' => 'GL_ARB_robustness',
    'glewImpl' => '__glewGetnUniformdvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnUniformfv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetnUniformfv_c',
    'feature' => 'GL_KHR_robustness',
    'glewImpl' => '__glewGetnUniformfv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnUniformfvARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glGetnUniformfvARB_c',
    'feature' => 'GL_ARB_robustness',
    'glewImpl' => '__glewGetnUniformfvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnUniformi64vARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'params',
        'GLint64* '
      ]
    ],
    'binding_name' => 'glGetnUniformi64vARB_c',
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewGetnUniformi64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnUniformiv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetnUniformiv_c',
    'feature' => 'GL_KHR_robustness',
    'glewImpl' => '__glewGetnUniformiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnUniformivARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glGetnUniformivARB_c',
    'feature' => 'GL_ARB_robustness',
    'glewImpl' => '__glewGetnUniformivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnUniformui64vARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'params',
        'GLuint64* '
      ]
    ],
    'binding_name' => 'glGetnUniformui64vARB_c',
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewGetnUniformui64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnUniformuiv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'params',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGetnUniformuiv_c',
    'feature' => 'GL_KHR_robustness',
    'glewImpl' => '__glewGetnUniformuiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGetnUniformuivARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'params',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glGetnUniformuivARB_c',
    'feature' => 'GL_ARB_robustness',
    'glewImpl' => '__glewGetnUniformuivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGlobalAlphaFactorbSUN' => {
    'argdata' => [
      [
        'factor',
        'GLbyte '
      ]
    ],
    'feature' => 'GL_SUN_global_alpha',
    'glewImpl' => '__glewGlobalAlphaFactorbSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGlobalAlphaFactordSUN' => {
    'argdata' => [
      [
        'factor',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_SUN_global_alpha',
    'glewImpl' => '__glewGlobalAlphaFactordSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGlobalAlphaFactorfSUN' => {
    'argdata' => [
      [
        'factor',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SUN_global_alpha',
    'glewImpl' => '__glewGlobalAlphaFactorfSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGlobalAlphaFactoriSUN' => {
    'argdata' => [
      [
        'factor',
        'GLint '
      ]
    ],
    'feature' => 'GL_SUN_global_alpha',
    'glewImpl' => '__glewGlobalAlphaFactoriSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGlobalAlphaFactorsSUN' => {
    'argdata' => [
      [
        'factor',
        'GLshort '
      ]
    ],
    'feature' => 'GL_SUN_global_alpha',
    'glewImpl' => '__glewGlobalAlphaFactorsSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGlobalAlphaFactorubSUN' => {
    'argdata' => [
      [
        'factor',
        'GLubyte '
      ]
    ],
    'feature' => 'GL_SUN_global_alpha',
    'glewImpl' => '__glewGlobalAlphaFactorubSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGlobalAlphaFactoruiSUN' => {
    'argdata' => [
      [
        'factor',
        'GLuint '
      ]
    ],
    'feature' => 'GL_SUN_global_alpha',
    'glewImpl' => '__glewGlobalAlphaFactoruiSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glGlobalAlphaFactorusSUN' => {
    'argdata' => [
      [
        'factor',
        'GLushort '
      ]
    ],
    'feature' => 'GL_SUN_global_alpha',
    'glewImpl' => '__glewGlobalAlphaFactorusSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glHint' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glHistogram' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'sink',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewHistogram',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glHistogramEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'sink',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_EXT_histogram',
    'glewImpl' => '__glewHistogramEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glIglooInterfaceSGIX' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'void *'
      ]
    ],
    'binding_name' => 'glIglooInterfaceSGIX_c',
    'feature' => 'GL_SGIX_igloo_interface',
    'glewImpl' => '__glewIglooInterfaceSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glImageTransformParameterfHP' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'const GLfloat '
      ]
    ],
    'feature' => 'GL_HP_image_transform',
    'glewImpl' => '__glewImageTransformParameterfHP',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glImageTransformParameterfvHP' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glImageTransformParameterfvHP_c',
    'feature' => 'GL_HP_image_transform',
    'glewImpl' => '__glewImageTransformParameterfvHP',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glImageTransformParameteriHP' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'const GLint '
      ]
    ],
    'feature' => 'GL_HP_image_transform',
    'glewImpl' => '__glewImageTransformParameteriHP',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glImageTransformParameterivHP' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glImageTransformParameterivHP_c',
    'feature' => 'GL_HP_image_transform',
    'glewImpl' => '__glewImageTransformParameterivHP',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glImportMemoryFdEXT' => {
    'argdata' => [
      [
        'memory',
        'GLuint '
      ],
      [
        'size',
        'GLuint64 '
      ],
      [
        'handleType',
        'GLenum '
      ],
      [
        'fd',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_memory_object_fd',
    'glewImpl' => '__glewImportMemoryFdEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glImportMemoryWin32HandleEXT' => {
    'argdata' => [
      [
        'memory',
        'GLuint '
      ],
      [
        'size',
        'GLuint64 '
      ],
      [
        'handleType',
        'GLenum '
      ],
      [
        'handle',
        'void *'
      ]
    ],
    'binding_name' => 'glImportMemoryWin32HandleEXT_c',
    'feature' => 'GL_EXT_memory_object_win32',
    'glewImpl' => '__glewImportMemoryWin32HandleEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glImportMemoryWin32NameEXT' => {
    'argdata' => [
      [
        'memory',
        'GLuint '
      ],
      [
        'size',
        'GLuint64 '
      ],
      [
        'handleType',
        'GLenum '
      ],
      [
        'name',
        'const void *'
      ]
    ],
    'binding_name' => 'glImportMemoryWin32NameEXT_c',
    'feature' => 'GL_EXT_memory_object_win32',
    'glewImpl' => '__glewImportMemoryWin32NameEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glImportSemaphoreFdEXT' => {
    'argdata' => [
      [
        'semaphore',
        'GLuint '
      ],
      [
        'handleType',
        'GLenum '
      ],
      [
        'fd',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_semaphore_fd',
    'glewImpl' => '__glewImportSemaphoreFdEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glImportSemaphoreWin32HandleEXT' => {
    'argdata' => [
      [
        'semaphore',
        'GLuint '
      ],
      [
        'handleType',
        'GLenum '
      ],
      [
        'handle',
        'void *'
      ]
    ],
    'binding_name' => 'glImportSemaphoreWin32HandleEXT_c',
    'feature' => 'GL_EXT_semaphore_win32',
    'glewImpl' => '__glewImportSemaphoreWin32HandleEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glImportSemaphoreWin32NameEXT' => {
    'argdata' => [
      [
        'semaphore',
        'GLuint '
      ],
      [
        'handleType',
        'GLenum '
      ],
      [
        'name',
        'const void *'
      ]
    ],
    'binding_name' => 'glImportSemaphoreWin32NameEXT_c',
    'feature' => 'GL_EXT_semaphore_win32',
    'glewImpl' => '__glewImportSemaphoreWin32NameEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glImportSyncEXT' => {
    'argdata' => [
      [
        'external_sync_type',
        'GLenum '
      ],
      [
        'external_sync',
        'GLintptr '
      ],
      [
        'flags',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_EXT_x11_sync_object',
    'glewImpl' => '__glewImportSyncEXT',
    'glewtype' => 'fun',
    'restype' => 'GLsync'
  },
  'glIndexFormatNV' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NV_vertex_buffer_unified_memory',
    'glewImpl' => '__glewIndexFormatNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glIndexFuncEXT' => {
    'argdata' => [
      [
        'func',
        'GLenum '
      ],
      [
        'ref',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_index_func',
    'glewImpl' => '__glewIndexFuncEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glIndexMask' => {
    'argdata' => [
      [
        'mask',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glIndexMaterialEXT' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_index_material',
    'glewImpl' => '__glewIndexMaterialEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glIndexPointer' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glIndexPointer_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glIndexPointerEXT' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glIndexPointerEXT_c',
    'feature' => 'GL_EXT_vertex_array',
    'glewImpl' => '__glewIndexPointerEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glIndexPointerListIBM' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLint '
      ],
      [
        'pointer',
        'const void** '
      ],
      [
        'ptrstride',
        'GLint '
      ]
    ],
    'binding_name' => 'glIndexPointerListIBM_c',
    'feature' => 'GL_IBM_vertex_array_lists',
    'glewImpl' => '__glewIndexPointerListIBM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glIndexd' => {
    'argdata' => [
      [
        'c',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glIndexdv' => {
    'argdata' => [
      [
        'c',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glIndexdv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glIndexf' => {
    'argdata' => [
      [
        'c',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glIndexfv' => {
    'argdata' => [
      [
        'c',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glIndexfv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glIndexi' => {
    'argdata' => [
      [
        'c',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glIndexiv' => {
    'argdata' => [
      [
        'c',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glIndexiv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glIndexs' => {
    'argdata' => [
      [
        'c',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glIndexsv' => {
    'argdata' => [
      [
        'c',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glIndexsv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glIndexub' => {
    'argdata' => [
      [
        'c',
        'GLubyte '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glIndexubv' => {
    'argdata' => [
      [
        'c',
        'const GLubyte *'
      ]
    ],
    'binding_name' => 'glIndexubv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glInitNames' => {
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glInsertComponentEXT' => {
    'argdata' => [
      [
        'res',
        'GLuint '
      ],
      [
        'src',
        'GLuint '
      ],
      [
        'num',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewInsertComponentEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glInsertEventMarkerEXT' => {
    'argdata' => [
      [
        'length',
        'GLsizei '
      ],
      [
        'marker',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glInsertEventMarkerEXT_c',
    'feature' => 'GL_EXT_debug_marker',
    'glewImpl' => '__glewInsertEventMarkerEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glInterleavedArrays' => {
    'argdata' => [
      [
        'format',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glInterleavedArrays_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glInterleavedTextureCoordSetsSGIS' => {
    'argdata' => [
      [
        'factor',
        'GLint '
      ]
    ],
    'feature' => 'GL_SGIS_multitexture',
    'glewImpl' => '__glewInterleavedTextureCoordSetsSGIS',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glInterpolatePathsNV' => {
    'argdata' => [
      [
        'resultPath',
        'GLuint '
      ],
      [
        'pathA',
        'GLuint '
      ],
      [
        'pathB',
        'GLuint '
      ],
      [
        'weight',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewInterpolatePathsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glInvalidateBufferData' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_invalidate_subdata',
    'glewImpl' => '__glewInvalidateBufferData',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glInvalidateBufferSubData' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'length',
        'GLsizeiptr '
      ]
    ],
    'feature' => 'GL_ARB_invalidate_subdata',
    'glewImpl' => '__glewInvalidateBufferSubData',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glInvalidateFramebuffer' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'numAttachments',
        'GLsizei '
      ],
      [
        'attachments',
        'const GLenum* '
      ]
    ],
    'binding_name' => 'glInvalidateFramebuffer_c',
    'feature' => 'GL_ARB_invalidate_subdata',
    'glewImpl' => '__glewInvalidateFramebuffer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glInvalidateNamedFramebufferData' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'numAttachments',
        'GLsizei '
      ],
      [
        'attachments',
        'const GLenum* '
      ]
    ],
    'binding_name' => 'glInvalidateNamedFramebufferData_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewInvalidateNamedFramebufferData',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glInvalidateNamedFramebufferSubData' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'numAttachments',
        'GLsizei '
      ],
      [
        'attachments',
        'const GLenum* '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glInvalidateNamedFramebufferSubData_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewInvalidateNamedFramebufferSubData',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glInvalidateSubFramebuffer' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'numAttachments',
        'GLsizei '
      ],
      [
        'attachments',
        'const GLenum* '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glInvalidateSubFramebuffer_c',
    'feature' => 'GL_ARB_invalidate_subdata',
    'glewImpl' => '__glewInvalidateSubFramebuffer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glInvalidateTexImage' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_invalidate_subdata',
    'glewImpl' => '__glewInvalidateTexImage',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glInvalidateTexSubImage' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_invalidate_subdata',
    'glewImpl' => '__glewInvalidateTexSubImage',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glIsAsyncMarkerSGIX' => {
    'argdata' => [
      [
        'marker',
        'GLuint '
      ]
    ],
    'feature' => 'GL_SGIX_async',
    'glewImpl' => '__glewIsAsyncMarkerSGIX',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsBuffer' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_1_5',
    'glewImpl' => '__glewIsBuffer',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsBufferARB' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_buffer_object',
    'glewImpl' => '__glewIsBufferARB',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsBufferResidentNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_shader_buffer_load',
    'glewImpl' => '__glewIsBufferResidentNV',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsCommandListNV' => {
    'argdata' => [
      [
        'list',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_command_list',
    'glewImpl' => '__glewIsCommandListNV',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsEnabled' => {
    'argdata' => [
      [
        'cap',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsEnabledIndexedEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_draw_buffers2',
    'glewImpl' => '__glewIsEnabledIndexedEXT',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsEnabledi' => {
    'argdata' => [
      [
        'cap',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewIsEnabledi',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsEnablediEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_draw_buffers_indexed',
    'glewImpl' => '__glewIsEnablediEXT',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsEnablediNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_viewport_array',
    'glewImpl' => '__glewIsEnablediNV',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsFenceAPPLE' => {
    'argdata' => [
      [
        'fence',
        'GLuint '
      ]
    ],
    'feature' => 'GL_APPLE_fence',
    'glewImpl' => '__glewIsFenceAPPLE',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsFenceNV' => {
    'argdata' => [
      [
        'fence',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_fence',
    'glewImpl' => '__glewIsFenceNV',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsFramebuffer' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_framebuffer_object',
    'glewImpl' => '__glewIsFramebuffer',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsFramebufferEXT' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_framebuffer_object',
    'glewImpl' => '__glewIsFramebufferEXT',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsImageHandleResidentARB' => {
    'argdata' => [
      [
        'handle',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_ARB_bindless_texture',
    'glewImpl' => '__glewIsImageHandleResidentARB',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsImageHandleResidentNV' => {
    'argdata' => [
      [
        'handle',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_NV_bindless_texture',
    'glewImpl' => '__glewIsImageHandleResidentNV',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsList' => {
    'argdata' => [
      [
        'list',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsMPEGPredictorSGIX' => {
    'argdata' => [
      [
        'predictor',
        'GLuint '
      ]
    ],
    'feature' => 'GL_SGIX_mpeg1',
    'glewImpl' => '__glewIsMPEGPredictorSGIX',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsMemoryObjectEXT' => {
    'argdata' => [
      [
        'memoryObject',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_memory_object',
    'glewImpl' => '__glewIsMemoryObjectEXT',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsNameAMD' => {
    'argdata' => [
      [
        'identifier',
        'GLenum '
      ],
      [
        'name',
        'GLuint '
      ]
    ],
    'feature' => 'GL_AMD_name_gen_delete',
    'glewImpl' => '__glewIsNameAMD',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsNamedBufferResidentNV' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_shader_buffer_load',
    'glewImpl' => '__glewIsNamedBufferResidentNV',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsNamedStringARB' => {
    'argdata' => [
      [
        'namelen',
        'GLint '
      ],
      [
        'name',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glIsNamedStringARB_c',
    'feature' => 'GL_ARB_shading_language_include',
    'glewImpl' => '__glewIsNamedStringARB',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsObjectBufferATI' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ATI_vertex_array_object',
    'glewImpl' => '__glewIsObjectBufferATI',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsOcclusionQueryNV' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_occlusion_query',
    'glewImpl' => '__glewIsOcclusionQueryNV',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsPathNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewIsPathNV',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsPointInFillPathNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'mask',
        'GLuint '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewIsPointInFillPathNV',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsPointInStrokePathNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewIsPointInStrokePathNV',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsProgram' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewIsProgram',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsProgramARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewIsProgramARB',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsProgramNV' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewIsProgramNV',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsProgramPipeline' => {
    'argdata' => [
      [
        'pipeline',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewIsProgramPipeline',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsQuery' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_1_5',
    'glewImpl' => '__glewIsQuery',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsQueryANGLE' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ANGLE_timer_query',
    'glewImpl' => '__glewIsQueryANGLE',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsQueryARB' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_occlusion_query',
    'glewImpl' => '__glewIsQueryARB',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsRenderbuffer' => {
    'argdata' => [
      [
        'renderbuffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_framebuffer_object',
    'glewImpl' => '__glewIsRenderbuffer',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsRenderbufferEXT' => {
    'argdata' => [
      [
        'renderbuffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_framebuffer_object',
    'glewImpl' => '__glewIsRenderbufferEXT',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsSampler' => {
    'argdata' => [
      [
        'sampler',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_sampler_objects',
    'glewImpl' => '__glewIsSampler',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsSemaphoreEXT' => {
    'argdata' => [
      [
        'semaphore',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_semaphore',
    'glewImpl' => '__glewIsSemaphoreEXT',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsShader' => {
    'argdata' => [
      [
        'shader',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewIsShader',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsStateNV' => {
    'argdata' => [
      [
        'state',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_command_list',
    'glewImpl' => '__glewIsStateNV',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsSupportedREGAL' => {
    'argdata' => [
      [
        'ext',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glIsSupportedREGAL_c',
    'feature' => 'GL_REGAL_extension_query',
    'glewImpl' => '__glewIsSupportedREGAL',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsSync' => {
    'argdata' => [
      [
        'myGLsync',
        'GLsync '
      ]
    ],
    'feature' => 'GL_ARB_sync',
    'glewImpl' => '__glewIsSync',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsSyncAPPLE' => {
    'argdata' => [
      [
        'myGLsync',
        'GLsync '
      ]
    ],
    'feature' => 'GL_APPLE_sync',
    'glewImpl' => '__glewIsSyncAPPLE',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsTexture' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsTextureEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_texture_object',
    'glewImpl' => '__glewIsTextureEXT',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsTextureHandleResidentARB' => {
    'argdata' => [
      [
        'handle',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_ARB_bindless_texture',
    'glewImpl' => '__glewIsTextureHandleResidentARB',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsTextureHandleResidentNV' => {
    'argdata' => [
      [
        'handle',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_NV_bindless_texture',
    'glewImpl' => '__glewIsTextureHandleResidentNV',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsTransformFeedback' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_transform_feedback2',
    'glewImpl' => '__glewIsTransformFeedback',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsTransformFeedbackNV' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_transform_feedback2',
    'glewImpl' => '__glewIsTransformFeedbackNV',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsVariantEnabledEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'cap',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewIsVariantEnabledEXT',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsVertexArray' => {
    'argdata' => [
      [
        'array',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_array_object',
    'glewImpl' => '__glewIsVertexArray',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsVertexArrayAPPLE' => {
    'argdata' => [
      [
        'array',
        'GLuint '
      ]
    ],
    'feature' => 'GL_APPLE_vertex_array_object',
    'glewImpl' => '__glewIsVertexArrayAPPLE',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsVertexArraySGIX' => {
    'argdata' => [
      [
        'array',
        'GLuint '
      ]
    ],
    'feature' => 'GL_SGIX_vertex_array_object',
    'glewImpl' => '__glewIsVertexArraySGIX',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glIsVertexAttribEnabledAPPLE' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ]
    ],
    'feature' => 'GL_APPLE_vertex_program_evaluators',
    'glewImpl' => '__glewIsVertexAttribEnabledAPPLE',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glLGPUCopyImageSubDataNVX' => {
    'argdata' => [
      [
        'sourceGpu',
        'GLuint '
      ],
      [
        'destinationGpuMask',
        'GLbitfield '
      ],
      [
        'srcName',
        'GLuint '
      ],
      [
        'srcTarget',
        'GLenum '
      ],
      [
        'srcLevel',
        'GLint '
      ],
      [
        'srcX',
        'GLint '
      ],
      [
        'srxY',
        'GLint '
      ],
      [
        'srcZ',
        'GLint '
      ],
      [
        'dstName',
        'GLuint '
      ],
      [
        'dstTarget',
        'GLenum '
      ],
      [
        'dstLevel',
        'GLint '
      ],
      [
        'dstX',
        'GLint '
      ],
      [
        'dstY',
        'GLint '
      ],
      [
        'dstZ',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NVX_linked_gpu_multicast',
    'glewImpl' => '__glewLGPUCopyImageSubDataNVX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLGPUInterlockNVX' => {
    'feature' => 'GL_NVX_linked_gpu_multicast',
    'glewImpl' => '__glewLGPUInterlockNVX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLGPUNamedBufferSubDataNVX' => {
    'argdata' => [
      [
        'gpuMask',
        'GLbitfield '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glLGPUNamedBufferSubDataNVX_c',
    'feature' => 'GL_NVX_linked_gpu_multicast',
    'glewImpl' => '__glewLGPUNamedBufferSubDataNVX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLabelObjectEXT' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'object',
        'GLuint '
      ],
      [
        'length',
        'GLsizei '
      ],
      [
        'label',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glLabelObjectEXT_c',
    'feature' => 'GL_EXT_debug_label',
    'glewImpl' => '__glewLabelObjectEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLightEnviEXT' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_fragment_lighting',
    'glewImpl' => '__glewLightEnviEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLightModelf' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLightModelfv' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glLightModelfv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLightModeli' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLightModeliv' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glLightModeliv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLightModelx' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfixed '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewLightModelx',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLightModelxv' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfixed* '
      ]
    ],
    'binding_name' => 'glLightModelxv_c',
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewLightModelxv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLightf' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLightfv' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glLightfv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLighti' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLightiv' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glLightiv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLightx' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfixed '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewLightx',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLightxv' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfixed* '
      ]
    ],
    'binding_name' => 'glLightxv_c',
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewLightxv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLineStipple' => {
    'argdata' => [
      [
        'factor',
        'GLint '
      ],
      [
        'pattern',
        'GLushort '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLineWidth' => {
    'argdata' => [
      [
        'width',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLineWidthx' => {
    'argdata' => [
      [
        'width',
        'GLfixed '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewLineWidthx',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLinkProgram' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewLinkProgram',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLinkProgramARB' => {
    'argdata' => [
      [
        'programObj',
        'GLhandleARB '
      ]
    ],
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewLinkProgramARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glListBase' => {
    'argdata' => [
      [
        'base',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glListDrawCommandsStatesClientNV' => {
    'argdata' => [
      [
        'list',
        'GLuint '
      ],
      [
        'segment',
        'GLuint '
      ],
      [
        'indirects',
        'const void** '
      ],
      [
        'sizes',
        'const GLsizei* '
      ],
      [
        'states',
        'const GLuint* '
      ],
      [
        'fbos',
        'const GLuint* '
      ],
      [
        'count',
        'GLuint '
      ]
    ],
    'binding_name' => 'glListDrawCommandsStatesClientNV_c',
    'feature' => 'GL_NV_command_list',
    'glewImpl' => '__glewListDrawCommandsStatesClientNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLoadIdentity' => {
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLoadIdentityDeformationMapSGIX' => {
    'argdata' => [
      [
        'mask',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_SGIX_polynomial_ffd',
    'glewImpl' => '__glewLoadIdentityDeformationMapSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLoadMatrixd' => {
    'argdata' => [
      [
        'm',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glLoadMatrixd_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLoadMatrixf' => {
    'argdata' => [
      [
        'm',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glLoadMatrixf_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLoadMatrixx' => {
    'argdata' => [
      [
        'm',
        'const GLfixed* '
      ]
    ],
    'binding_name' => 'glLoadMatrixx_c',
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewLoadMatrixx',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLoadName' => {
    'argdata' => [
      [
        'name',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLoadProgramNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'id',
        'GLuint '
      ],
      [
        'len',
        'GLsizei '
      ],
      [
        'program',
        'const GLubyte* '
      ]
    ],
    'binding_name' => 'glLoadProgramNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewLoadProgramNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLoadTransposeMatrixd' => {
    'argdata' => [
      [
        'm',
        'const GLdouble * '
      ]
    ],
    'binding_name' => 'glLoadTransposeMatrixd_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewLoadTransposeMatrixd',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLoadTransposeMatrixdARB' => {
    'argdata' => [
      [
        'm',
        'GLdouble * '
      ]
    ],
    'binding_name' => 'glLoadTransposeMatrixdARB_c',
    'feature' => 'GL_ARB_transpose_matrix',
    'glewImpl' => '__glewLoadTransposeMatrixdARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLoadTransposeMatrixf' => {
    'argdata' => [
      [
        'm',
        'const GLfloat * '
      ]
    ],
    'binding_name' => 'glLoadTransposeMatrixf_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewLoadTransposeMatrixf',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLoadTransposeMatrixfARB' => {
    'argdata' => [
      [
        'm',
        'GLfloat * '
      ]
    ],
    'binding_name' => 'glLoadTransposeMatrixfARB_c',
    'feature' => 'GL_ARB_transpose_matrix',
    'glewImpl' => '__glewLoadTransposeMatrixfARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLockArraysEXT' => {
    'argdata' => [
      [
        'first',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_compiled_vertex_array',
    'glewImpl' => '__glewLockArraysEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLogMessageCallbackREGAL' => {
    'argdata' => [
      [
        'callback',
        'GLLOGPROCREGAL '
      ]
    ],
    'feature' => 'GL_REGAL_log',
    'glewImpl' => '__glewLogMessageCallbackREGAL',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glLogicOp' => {
    'argdata' => [
      [
        'opcode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMPEGPredictorSGIX' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'void *'
      ]
    ],
    'binding_name' => 'glMPEGPredictorSGIX_c',
    'feature' => 'GL_SGIX_mpeg1',
    'glewImpl' => '__glewMPEGPredictorSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMPEGQuantTableubv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'values',
        'GLubyte* '
      ]
    ],
    'binding_name' => 'glMPEGQuantTableubv_c',
    'feature' => 'GL_SGIX_mpeg1',
    'glewImpl' => '__glewMPEGQuantTableubv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMakeBufferNonResidentNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_shader_buffer_load',
    'glewImpl' => '__glewMakeBufferNonResidentNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMakeBufferResidentNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'access',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_shader_buffer_load',
    'glewImpl' => '__glewMakeBufferResidentNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMakeImageHandleNonResidentARB' => {
    'argdata' => [
      [
        'handle',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_ARB_bindless_texture',
    'glewImpl' => '__glewMakeImageHandleNonResidentARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMakeImageHandleNonResidentNV' => {
    'argdata' => [
      [
        'handle',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_NV_bindless_texture',
    'glewImpl' => '__glewMakeImageHandleNonResidentNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMakeImageHandleResidentARB' => {
    'argdata' => [
      [
        'handle',
        'GLuint64 '
      ],
      [
        'access',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_bindless_texture',
    'glewImpl' => '__glewMakeImageHandleResidentARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMakeImageHandleResidentNV' => {
    'argdata' => [
      [
        'handle',
        'GLuint64 '
      ],
      [
        'access',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_bindless_texture',
    'glewImpl' => '__glewMakeImageHandleResidentNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMakeNamedBufferNonResidentNV' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_shader_buffer_load',
    'glewImpl' => '__glewMakeNamedBufferNonResidentNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMakeNamedBufferResidentNV' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'access',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_shader_buffer_load',
    'glewImpl' => '__glewMakeNamedBufferResidentNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMakeTextureHandleNonResidentARB' => {
    'argdata' => [
      [
        'handle',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_ARB_bindless_texture',
    'glewImpl' => '__glewMakeTextureHandleNonResidentARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMakeTextureHandleNonResidentNV' => {
    'argdata' => [
      [
        'handle',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_NV_bindless_texture',
    'glewImpl' => '__glewMakeTextureHandleNonResidentNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMakeTextureHandleResidentARB' => {
    'argdata' => [
      [
        'handle',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_ARB_bindless_texture',
    'glewImpl' => '__glewMakeTextureHandleResidentARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMakeTextureHandleResidentNV' => {
    'argdata' => [
      [
        'handle',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_NV_bindless_texture',
    'glewImpl' => '__glewMakeTextureHandleResidentNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMap1d' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'u1',
        'GLdouble '
      ],
      [
        'u2',
        'GLdouble '
      ],
      [
        'stride',
        'GLint '
      ],
      [
        'order',
        'GLint '
      ],
      [
        'points',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glMap1d_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMap1f' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'u1',
        'GLfloat '
      ],
      [
        'u2',
        'GLfloat '
      ],
      [
        'stride',
        'GLint '
      ],
      [
        'order',
        'GLint '
      ],
      [
        'points',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glMap1f_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMap2d' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'u1',
        'GLdouble '
      ],
      [
        'u2',
        'GLdouble '
      ],
      [
        'ustride',
        'GLint '
      ],
      [
        'uorder',
        'GLint '
      ],
      [
        'v1',
        'GLdouble '
      ],
      [
        'v2',
        'GLdouble '
      ],
      [
        'vstride',
        'GLint '
      ],
      [
        'vorder',
        'GLint '
      ],
      [
        'points',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glMap2d_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMap2f' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'u1',
        'GLfloat '
      ],
      [
        'u2',
        'GLfloat '
      ],
      [
        'ustride',
        'GLint '
      ],
      [
        'uorder',
        'GLint '
      ],
      [
        'v1',
        'GLfloat '
      ],
      [
        'v2',
        'GLfloat '
      ],
      [
        'vstride',
        'GLint '
      ],
      [
        'vorder',
        'GLint '
      ],
      [
        'points',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glMap2f_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMapBuffer' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'access',
        'GLenum '
      ]
    ],
    'binding_name' => 'glMapBuffer_c',
    'feature' => 'GL_VERSION_1_5',
    'glewImpl' => '__glewMapBuffer',
    'glewtype' => 'fun',
    'restype' => 'void*'
  },
  'glMapBufferARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'access',
        'GLenum '
      ]
    ],
    'binding_name' => 'glMapBufferARB_c',
    'feature' => 'GL_ARB_vertex_buffer_object',
    'glewImpl' => '__glewMapBufferARB',
    'glewtype' => 'fun',
    'restype' => 'void *'
  },
  'glMapBufferRange' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'length',
        'GLsizeiptr '
      ],
      [
        'access',
        'GLbitfield '
      ]
    ],
    'binding_name' => 'glMapBufferRange_c',
    'feature' => 'GL_ARB_map_buffer_range',
    'glewImpl' => '__glewMapBufferRange',
    'glewtype' => 'fun',
    'restype' => 'void *'
  },
  'glMapBufferRangeEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'length',
        'GLsizeiptr '
      ],
      [
        'access',
        'GLbitfield '
      ]
    ],
    'binding_name' => 'glMapBufferRangeEXT_c',
    'feature' => 'GL_EXT_map_buffer_range',
    'glewImpl' => '__glewMapBufferRangeEXT',
    'glewtype' => 'fun',
    'restype' => 'void *'
  },
  'glMapControlPointsNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'ustride',
        'GLsizei '
      ],
      [
        'vstride',
        'GLsizei '
      ],
      [
        'uorder',
        'GLint '
      ],
      [
        'vorder',
        'GLint '
      ],
      [
        'packed',
        'GLboolean '
      ],
      [
        'points',
        'const void *'
      ]
    ],
    'binding_name' => 'glMapControlPointsNV_c',
    'feature' => 'GL_NV_evaluators',
    'glewImpl' => '__glewMapControlPointsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMapGrid1d' => {
    'argdata' => [
      [
        'un',
        'GLint '
      ],
      [
        'u1',
        'GLdouble '
      ],
      [
        'u2',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMapGrid1f' => {
    'argdata' => [
      [
        'un',
        'GLint '
      ],
      [
        'u1',
        'GLfloat '
      ],
      [
        'u2',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMapGrid2d' => {
    'argdata' => [
      [
        'un',
        'GLint '
      ],
      [
        'u1',
        'GLdouble '
      ],
      [
        'u2',
        'GLdouble '
      ],
      [
        'vn',
        'GLint '
      ],
      [
        'v1',
        'GLdouble '
      ],
      [
        'v2',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMapGrid2f' => {
    'argdata' => [
      [
        'un',
        'GLint '
      ],
      [
        'u1',
        'GLfloat '
      ],
      [
        'u2',
        'GLfloat '
      ],
      [
        'vn',
        'GLint '
      ],
      [
        'v1',
        'GLfloat '
      ],
      [
        'v2',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMapNamedBuffer' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'access',
        'GLenum '
      ]
    ],
    'binding_name' => 'glMapNamedBuffer_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewMapNamedBuffer',
    'glewtype' => 'fun',
    'restype' => 'void *'
  },
  'glMapNamedBufferEXT' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'access',
        'GLenum '
      ]
    ],
    'binding_name' => 'glMapNamedBufferEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMapNamedBufferEXT',
    'glewtype' => 'fun',
    'restype' => 'void *'
  },
  'glMapNamedBufferRange' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'length',
        'GLsizeiptr '
      ],
      [
        'access',
        'GLbitfield '
      ]
    ],
    'binding_name' => 'glMapNamedBufferRange_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewMapNamedBufferRange',
    'glewtype' => 'fun',
    'restype' => 'void *'
  },
  'glMapNamedBufferRangeEXT' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'length',
        'GLsizeiptr '
      ],
      [
        'access',
        'GLbitfield '
      ]
    ],
    'binding_name' => 'glMapNamedBufferRangeEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMapNamedBufferRangeEXT',
    'glewtype' => 'fun',
    'restype' => 'void *'
  },
  'glMapObjectBufferATI' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ]
    ],
    'binding_name' => 'glMapObjectBufferATI_c',
    'feature' => 'GL_ATI_map_object_buffer',
    'glewImpl' => '__glewMapObjectBufferATI',
    'glewtype' => 'fun',
    'restype' => 'void *'
  },
  'glMapParameterfvNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glMapParameterfvNV_c',
    'feature' => 'GL_NV_evaluators',
    'glewImpl' => '__glewMapParameterfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMapParameterivNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glMapParameterivNV_c',
    'feature' => 'GL_NV_evaluators',
    'glewImpl' => '__glewMapParameterivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMapTexture2DINTEL' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'access',
        'GLbitfield '
      ],
      [
        'stride',
        'GLint* '
      ],
      [
        'layout',
        'GLenum *'
      ]
    ],
    'binding_name' => 'glMapTexture2DINTEL_c',
    'feature' => 'GL_LAYOUT_LINEAR_INTEL',
    'glewImpl' => '__glewMapTexture2DINTEL',
    'glewtype' => 'fun',
    'restype' => 'void *'
  },
  'glMapVertexAttrib1dAPPLE' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'size',
        'GLuint '
      ],
      [
        'u1',
        'GLdouble '
      ],
      [
        'u2',
        'GLdouble '
      ],
      [
        'stride',
        'GLint '
      ],
      [
        'order',
        'GLint '
      ],
      [
        'points',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glMapVertexAttrib1dAPPLE_c',
    'feature' => 'GL_APPLE_vertex_program_evaluators',
    'glewImpl' => '__glewMapVertexAttrib1dAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMapVertexAttrib1fAPPLE' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'size',
        'GLuint '
      ],
      [
        'u1',
        'GLfloat '
      ],
      [
        'u2',
        'GLfloat '
      ],
      [
        'stride',
        'GLint '
      ],
      [
        'order',
        'GLint '
      ],
      [
        'points',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glMapVertexAttrib1fAPPLE_c',
    'feature' => 'GL_APPLE_vertex_program_evaluators',
    'glewImpl' => '__glewMapVertexAttrib1fAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMapVertexAttrib2dAPPLE' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'size',
        'GLuint '
      ],
      [
        'u1',
        'GLdouble '
      ],
      [
        'u2',
        'GLdouble '
      ],
      [
        'ustride',
        'GLint '
      ],
      [
        'uorder',
        'GLint '
      ],
      [
        'v1',
        'GLdouble '
      ],
      [
        'v2',
        'GLdouble '
      ],
      [
        'vstride',
        'GLint '
      ],
      [
        'vorder',
        'GLint '
      ],
      [
        'points',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glMapVertexAttrib2dAPPLE_c',
    'feature' => 'GL_APPLE_vertex_program_evaluators',
    'glewImpl' => '__glewMapVertexAttrib2dAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMapVertexAttrib2fAPPLE' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'size',
        'GLuint '
      ],
      [
        'u1',
        'GLfloat '
      ],
      [
        'u2',
        'GLfloat '
      ],
      [
        'ustride',
        'GLint '
      ],
      [
        'uorder',
        'GLint '
      ],
      [
        'v1',
        'GLfloat '
      ],
      [
        'v2',
        'GLfloat '
      ],
      [
        'vstride',
        'GLint '
      ],
      [
        'vorder',
        'GLint '
      ],
      [
        'points',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glMapVertexAttrib2fAPPLE_c',
    'feature' => 'GL_APPLE_vertex_program_evaluators',
    'glewImpl' => '__glewMapVertexAttrib2fAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMaterialf' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMaterialfv' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glMaterialfv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMateriali' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMaterialiv' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glMaterialiv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMaterialx' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfixed '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewMaterialx',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMaterialxv' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfixed* '
      ]
    ],
    'binding_name' => 'glMaterialxv_c',
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewMaterialxv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixFrustumEXT' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'l',
        'GLdouble '
      ],
      [
        'r',
        'GLdouble '
      ],
      [
        'b',
        'GLdouble '
      ],
      [
        't',
        'GLdouble '
      ],
      [
        'n',
        'GLdouble '
      ],
      [
        'f',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMatrixFrustumEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixIndexPointerARB' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'void *'
      ]
    ],
    'binding_name' => 'glMatrixIndexPointerARB_c',
    'feature' => 'GL_ARB_matrix_palette',
    'glewImpl' => '__glewMatrixIndexPointerARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixIndexubvARB' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'indices',
        'GLubyte *'
      ]
    ],
    'binding_name' => 'glMatrixIndexubvARB_c',
    'feature' => 'GL_ARB_matrix_palette',
    'glewImpl' => '__glewMatrixIndexubvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixIndexuivARB' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'indices',
        'GLuint *'
      ]
    ],
    'binding_name' => 'glMatrixIndexuivARB_c',
    'feature' => 'GL_ARB_matrix_palette',
    'glewImpl' => '__glewMatrixIndexuivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixIndexusvARB' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'indices',
        'GLushort *'
      ]
    ],
    'binding_name' => 'glMatrixIndexusvARB_c',
    'feature' => 'GL_ARB_matrix_palette',
    'glewImpl' => '__glewMatrixIndexusvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixLoad3x2fNV' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'm',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glMatrixLoad3x2fNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewMatrixLoad3x2fNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixLoad3x3fNV' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'm',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glMatrixLoad3x3fNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewMatrixLoad3x3fNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixLoadIdentityEXT' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMatrixLoadIdentityEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixLoadTranspose3x3fNV' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'm',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glMatrixLoadTranspose3x3fNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewMatrixLoadTranspose3x3fNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixLoadTransposedEXT' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'm',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glMatrixLoadTransposedEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMatrixLoadTransposedEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixLoadTransposefEXT' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'm',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glMatrixLoadTransposefEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMatrixLoadTransposefEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixLoaddEXT' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'm',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glMatrixLoaddEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMatrixLoaddEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixLoadfEXT' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'm',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glMatrixLoadfEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMatrixLoadfEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixMode' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixMult3x2fNV' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'm',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glMatrixMult3x2fNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewMatrixMult3x2fNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixMult3x3fNV' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'm',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glMatrixMult3x3fNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewMatrixMult3x3fNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixMultTranspose3x3fNV' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'm',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glMatrixMultTranspose3x3fNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewMatrixMultTranspose3x3fNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixMultTransposedEXT' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'm',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glMatrixMultTransposedEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMatrixMultTransposedEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixMultTransposefEXT' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'm',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glMatrixMultTransposefEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMatrixMultTransposefEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixMultdEXT' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'm',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glMatrixMultdEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMatrixMultdEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixMultfEXT' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'm',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glMatrixMultfEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMatrixMultfEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixOrthoEXT' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'l',
        'GLdouble '
      ],
      [
        'r',
        'GLdouble '
      ],
      [
        'b',
        'GLdouble '
      ],
      [
        't',
        'GLdouble '
      ],
      [
        'n',
        'GLdouble '
      ],
      [
        'f',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMatrixOrthoEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixPopEXT' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMatrixPopEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixPushEXT' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMatrixPushEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixRotatedEXT' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'angle',
        'GLdouble '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMatrixRotatedEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixRotatefEXT' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'angle',
        'GLfloat '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMatrixRotatefEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixScaledEXT' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMatrixScaledEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixScalefEXT' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMatrixScalefEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixTranslatedEXT' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMatrixTranslatedEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMatrixTranslatefEXT' => {
    'argdata' => [
      [
        'matrixMode',
        'GLenum '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMatrixTranslatefEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMaxShaderCompilerThreadsARB' => {
    'argdata' => [
      [
        'count',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_parallel_shader_compile',
    'glewImpl' => '__glewMaxShaderCompilerThreadsARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMaxShaderCompilerThreadsKHR' => {
    'argdata' => [
      [
        'count',
        'GLuint '
      ]
    ],
    'feature' => 'GL_KHR_parallel_shader_compile',
    'glewImpl' => '__glewMaxShaderCompilerThreadsKHR',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMemoryBarrier' => {
    'argdata' => [
      [
        'barriers',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_ARB_shader_image_load_store',
    'glewImpl' => '__glewMemoryBarrier',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMemoryBarrierByRegion' => {
    'argdata' => [
      [
        'barriers',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_ARB_ES3_1_compatibility',
    'glewImpl' => '__glewMemoryBarrierByRegion',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMemoryBarrierEXT' => {
    'argdata' => [
      [
        'barriers',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_EXT_shader_image_load_store',
    'glewImpl' => '__glewMemoryBarrierEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMemoryObjectParameterivEXT' => {
    'argdata' => [
      [
        'memoryObject',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glMemoryObjectParameterivEXT_c',
    'feature' => 'GL_EXT_memory_object',
    'glewImpl' => '__glewMemoryObjectParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMeshBreadthSGIX' => {
    'argdata' => [
      [
        'breadth',
        'GLint '
      ]
    ],
    'feature' => 'GL_SGIX_quad_mesh',
    'glewImpl' => '__glewMeshBreadthSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMeshStrideSGIX' => {
    'argdata' => [
      [
        'stride',
        'GLint '
      ]
    ],
    'feature' => 'GL_SGIX_quad_mesh',
    'glewImpl' => '__glewMeshStrideSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMinSampleShading' => {
    'argdata' => [
      [
        'value',
        'GLclampf '
      ]
    ],
    'feature' => 'GL_VERSION_4_0',
    'glewImpl' => '__glewMinSampleShading',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMinSampleShadingARB' => {
    'argdata' => [
      [
        'value',
        'GLclampf '
      ]
    ],
    'feature' => 'GL_ARB_sample_shading',
    'glewImpl' => '__glewMinSampleShadingARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMinmax' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'sink',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewMinmax',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMinmaxEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'sink',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_EXT_histogram',
    'glewImpl' => '__glewMinmaxEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultMatrixd' => {
    'argdata' => [
      [
        'm',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glMultMatrixd_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultMatrixf' => {
    'argdata' => [
      [
        'm',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glMultMatrixf_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultMatrixx' => {
    'argdata' => [
      [
        'm',
        'const GLfixed* '
      ]
    ],
    'binding_name' => 'glMultMatrixx_c',
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewMultMatrixx',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultTransposeMatrixd' => {
    'argdata' => [
      [
        'm',
        'const GLdouble * '
      ]
    ],
    'binding_name' => 'glMultTransposeMatrixd_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultTransposeMatrixd',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultTransposeMatrixdARB' => {
    'argdata' => [
      [
        'm',
        'GLdouble * '
      ]
    ],
    'binding_name' => 'glMultTransposeMatrixdARB_c',
    'feature' => 'GL_ARB_transpose_matrix',
    'glewImpl' => '__glewMultTransposeMatrixdARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultTransposeMatrixf' => {
    'argdata' => [
      [
        'm',
        'const GLfloat * '
      ]
    ],
    'binding_name' => 'glMultTransposeMatrixf_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultTransposeMatrixf',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultTransposeMatrixfARB' => {
    'argdata' => [
      [
        'm',
        'GLfloat * '
      ]
    ],
    'binding_name' => 'glMultTransposeMatrixfARB_c',
    'feature' => 'GL_ARB_transpose_matrix',
    'glewImpl' => '__glewMultTransposeMatrixfARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawArrays' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'first',
        'const GLint *'
      ],
      [
        'count',
        'const GLsizei *'
      ],
      [
        'drawcount',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glMultiDrawArrays_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewMultiDrawArrays',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawArraysEXT' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'first',
        'const GLint* '
      ],
      [
        'count',
        'const GLsizei *'
      ],
      [
        'primcount',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glMultiDrawArraysEXT_c',
    'feature' => 'GL_EXT_multi_draw_arrays',
    'glewImpl' => '__glewMultiDrawArraysEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawArraysIndirect' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'indirect',
        'const void *'
      ],
      [
        'primcount',
        'GLsizei '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glMultiDrawArraysIndirect_c',
    'feature' => 'GL_ARB_multi_draw_indirect',
    'glewImpl' => '__glewMultiDrawArraysIndirect',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawArraysIndirectAMD' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'indirect',
        'const void *'
      ],
      [
        'primcount',
        'GLsizei '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glMultiDrawArraysIndirectAMD_c',
    'feature' => 'GL_AMD_multi_draw_indirect',
    'glewImpl' => '__glewMultiDrawArraysIndirectAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawArraysIndirectBindlessCountNV' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'indirect',
        'const void *'
      ],
      [
        'drawCount',
        'GLintptr '
      ],
      [
        'maxDrawCount',
        'GLsizei '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'vertexBufferCount',
        'GLint '
      ]
    ],
    'binding_name' => 'glMultiDrawArraysIndirectBindlessCountNV_c',
    'feature' => 'GL_NV_bindless_multi_draw_indirect_count',
    'glewImpl' => '__glewMultiDrawArraysIndirectBindlessCountNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawArraysIndirectBindlessNV' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'indirect',
        'const void *'
      ],
      [
        'drawCount',
        'GLsizei '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'vertexBufferCount',
        'GLint '
      ]
    ],
    'binding_name' => 'glMultiDrawArraysIndirectBindlessNV_c',
    'feature' => 'GL_NV_bindless_multi_draw_indirect',
    'glewImpl' => '__glewMultiDrawArraysIndirectBindlessNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawArraysIndirectCount' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'indirect',
        'const GLvoid *'
      ],
      [
        'drawcount',
        'GLintptr '
      ],
      [
        'maxdrawcount',
        'GLsizei '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glMultiDrawArraysIndirectCount_c',
    'feature' => 'GL_VERSION_4_6',
    'glewImpl' => '__glewMultiDrawArraysIndirectCount',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawArraysIndirectCountARB' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'indirect',
        'const void *'
      ],
      [
        'drawcount',
        'GLintptr '
      ],
      [
        'maxdrawcount',
        'GLsizei '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glMultiDrawArraysIndirectCountARB_c',
    'feature' => 'GL_ARB_indirect_parameters',
    'glewImpl' => '__glewMultiDrawArraysIndirectCountARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawArraysIndirectEXT' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'indirect',
        'const void *'
      ],
      [
        'drawcount',
        'GLsizei '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glMultiDrawArraysIndirectEXT_c',
    'feature' => 'GL_EXT_multi_draw_indirect',
    'glewImpl' => '__glewMultiDrawArraysIndirectEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawElementArrayAPPLE' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'first',
        'const GLint* '
      ],
      [
        'count',
        'const GLsizei *'
      ],
      [
        'primcount',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glMultiDrawElementArrayAPPLE_c',
    'feature' => 'GL_APPLE_element_array',
    'glewImpl' => '__glewMultiDrawElementArrayAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawElements' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'count',
        'const GLsizei *'
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'const void *const* '
      ],
      [
        'drawcount',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glMultiDrawElements_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewMultiDrawElements',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawElementsBaseVertex' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'count',
        'GLsizei* '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'void**'
      ],
      [
        'primcount',
        'GLsizei '
      ],
      [
        'basevertex',
        'GLint *'
      ]
    ],
    'binding_name' => 'glMultiDrawElementsBaseVertex_c',
    'feature' => 'GL_ARB_draw_elements_base_vertex',
    'glewImpl' => '__glewMultiDrawElementsBaseVertex',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawElementsBaseVertexEXT' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'count',
        'const GLsizei* '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'const void *const *'
      ],
      [
        'primcount',
        'GLsizei '
      ],
      [
        'basevertex',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glMultiDrawElementsBaseVertexEXT_c',
    'feature' => 'GL_EXT_draw_elements_base_vertex',
    'glewImpl' => '__glewMultiDrawElementsBaseVertexEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawElementsEXT' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'count',
        'GLsizei* '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'const void *const *'
      ],
      [
        'primcount',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glMultiDrawElementsEXT_c',
    'feature' => 'GL_EXT_multi_draw_arrays',
    'glewImpl' => '__glewMultiDrawElementsEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawElementsIndirect' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indirect',
        'const void *'
      ],
      [
        'primcount',
        'GLsizei '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glMultiDrawElementsIndirect_c',
    'feature' => 'GL_ARB_multi_draw_indirect',
    'glewImpl' => '__glewMultiDrawElementsIndirect',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawElementsIndirectAMD' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indirect',
        'const void *'
      ],
      [
        'primcount',
        'GLsizei '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glMultiDrawElementsIndirectAMD_c',
    'feature' => 'GL_AMD_multi_draw_indirect',
    'glewImpl' => '__glewMultiDrawElementsIndirectAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawElementsIndirectBindlessCountNV' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indirect',
        'const void *'
      ],
      [
        'drawCount',
        'GLintptr '
      ],
      [
        'maxDrawCount',
        'GLsizei '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'vertexBufferCount',
        'GLint '
      ]
    ],
    'binding_name' => 'glMultiDrawElementsIndirectBindlessCountNV_c',
    'feature' => 'GL_NV_bindless_multi_draw_indirect_count',
    'glewImpl' => '__glewMultiDrawElementsIndirectBindlessCountNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawElementsIndirectBindlessNV' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indirect',
        'const void *'
      ],
      [
        'drawCount',
        'GLsizei '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'vertexBufferCount',
        'GLint '
      ]
    ],
    'binding_name' => 'glMultiDrawElementsIndirectBindlessNV_c',
    'feature' => 'GL_NV_bindless_multi_draw_indirect',
    'glewImpl' => '__glewMultiDrawElementsIndirectBindlessNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawElementsIndirectCount' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indirect',
        'const GLvoid *'
      ],
      [
        'drawcount',
        'GLintptr '
      ],
      [
        'maxdrawcount',
        'GLsizei '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glMultiDrawElementsIndirectCount_c',
    'feature' => 'GL_VERSION_4_6',
    'glewImpl' => '__glewMultiDrawElementsIndirectCount',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawElementsIndirectCountARB' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indirect',
        'const void *'
      ],
      [
        'drawcount',
        'GLintptr '
      ],
      [
        'maxdrawcount',
        'GLsizei '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glMultiDrawElementsIndirectCountARB_c',
    'feature' => 'GL_ARB_indirect_parameters',
    'glewImpl' => '__glewMultiDrawElementsIndirectCountARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawElementsIndirectEXT' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indirect',
        'const void *'
      ],
      [
        'drawcount',
        'GLsizei '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glMultiDrawElementsIndirectEXT_c',
    'feature' => 'GL_EXT_multi_draw_indirect',
    'glewImpl' => '__glewMultiDrawElementsIndirectEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiDrawRangeElementArrayAPPLE' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'start',
        'GLuint '
      ],
      [
        'end',
        'GLuint '
      ],
      [
        'first',
        'const GLint* '
      ],
      [
        'count',
        'const GLsizei *'
      ],
      [
        'primcount',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glMultiDrawRangeElementArrayAPPLE_c',
    'feature' => 'GL_APPLE_element_array',
    'glewImpl' => '__glewMultiDrawRangeElementArrayAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiModeDrawArraysIBM' => {
    'argdata' => [
      [
        'mode',
        'const GLenum* '
      ],
      [
        'first',
        'const GLint *'
      ],
      [
        'count',
        'const GLsizei *'
      ],
      [
        'primcount',
        'GLsizei '
      ],
      [
        'modestride',
        'GLint '
      ]
    ],
    'binding_name' => 'glMultiModeDrawArraysIBM_c',
    'feature' => 'GL_IBM_multimode_draw_arrays',
    'glewImpl' => '__glewMultiModeDrawArraysIBM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiModeDrawElementsIBM' => {
    'argdata' => [
      [
        'mode',
        'const GLenum* '
      ],
      [
        'count',
        'const GLsizei *'
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'indices',
        'const void *const *'
      ],
      [
        'primcount',
        'GLsizei '
      ],
      [
        'modestride',
        'GLint '
      ]
    ],
    'binding_name' => 'glMultiModeDrawElementsIBM_c',
    'feature' => 'GL_IBM_multimode_draw_arrays',
    'glewImpl' => '__glewMultiModeDrawElementsIBM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexBufferEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexBufferEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord1d' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord1d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord1dARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord1dARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord1dv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord1dv_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord1dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord1dvARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord1dvARB_c',
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord1dvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord1f' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord1f',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord1fARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord1fARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord1fv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord1fv_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord1fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord1fvARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord1fvARB_c',
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord1fvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord1hNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLhalf '
      ]
    ],
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewMultiTexCoord1hNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord1hvNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glMultiTexCoord1hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewMultiTexCoord1hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord1i' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord1i',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord1iARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord1iARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord1iv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord1iv_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord1iv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord1ivARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord1ivARB_c',
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord1ivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord1s' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord1s',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord1sARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLshort '
      ]
    ],
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord1sARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord1sv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord1sv_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord1sv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord1svARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord1svARB_c',
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord1svARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord2d' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLdouble '
      ],
      [
        't',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord2d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord2dARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLdouble '
      ],
      [
        't',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord2dARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord2dv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord2dv_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord2dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord2dvARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord2dvARB_c',
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord2dvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord2f' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLfloat '
      ],
      [
        't',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord2f',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord2fARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLfloat '
      ],
      [
        't',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord2fARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord2fv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord2fv_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord2fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord2fvARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord2fvARB_c',
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord2fvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord2hNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLhalf '
      ],
      [
        't',
        'GLhalf '
      ]
    ],
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewMultiTexCoord2hNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord2hvNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glMultiTexCoord2hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewMultiTexCoord2hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord2i' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLint '
      ],
      [
        't',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord2i',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord2iARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLint '
      ],
      [
        't',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord2iARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord2iv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord2iv_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord2iv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord2ivARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord2ivARB_c',
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord2ivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord2s' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLshort '
      ],
      [
        't',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord2s',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord2sARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLshort '
      ],
      [
        't',
        'GLshort '
      ]
    ],
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord2sARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord2sv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord2sv_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord2sv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord2svARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord2svARB_c',
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord2svARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord3d' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLdouble '
      ],
      [
        't',
        'GLdouble '
      ],
      [
        'r',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord3d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord3dARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLdouble '
      ],
      [
        't',
        'GLdouble '
      ],
      [
        'r',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord3dARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord3dv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord3dv_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord3dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord3dvARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord3dvARB_c',
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord3dvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord3f' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLfloat '
      ],
      [
        't',
        'GLfloat '
      ],
      [
        'r',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord3f',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord3fARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLfloat '
      ],
      [
        't',
        'GLfloat '
      ],
      [
        'r',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord3fARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord3fv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord3fv_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord3fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord3fvARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord3fvARB_c',
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord3fvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord3hNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLhalf '
      ],
      [
        't',
        'GLhalf '
      ],
      [
        'r',
        'GLhalf '
      ]
    ],
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewMultiTexCoord3hNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord3hvNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glMultiTexCoord3hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewMultiTexCoord3hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord3i' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLint '
      ],
      [
        't',
        'GLint '
      ],
      [
        'r',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord3i',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord3iARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLint '
      ],
      [
        't',
        'GLint '
      ],
      [
        'r',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord3iARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord3iv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord3iv_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord3iv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord3ivARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord3ivARB_c',
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord3ivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord3s' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLshort '
      ],
      [
        't',
        'GLshort '
      ],
      [
        'r',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord3s',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord3sARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLshort '
      ],
      [
        't',
        'GLshort '
      ],
      [
        'r',
        'GLshort '
      ]
    ],
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord3sARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord3sv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord3sv_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord3sv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord3svARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord3svARB_c',
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord3svARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord4d' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLdouble '
      ],
      [
        't',
        'GLdouble '
      ],
      [
        'r',
        'GLdouble '
      ],
      [
        'q',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord4d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord4dARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLdouble '
      ],
      [
        't',
        'GLdouble '
      ],
      [
        'r',
        'GLdouble '
      ],
      [
        'q',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord4dARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord4dv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord4dv_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord4dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord4dvARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord4dvARB_c',
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord4dvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord4f' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLfloat '
      ],
      [
        't',
        'GLfloat '
      ],
      [
        'r',
        'GLfloat '
      ],
      [
        'q',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord4f',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord4fARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLfloat '
      ],
      [
        't',
        'GLfloat '
      ],
      [
        'r',
        'GLfloat '
      ],
      [
        'q',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord4fARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord4fv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord4fv_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord4fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord4fvARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord4fvARB_c',
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord4fvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord4hNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLhalf '
      ],
      [
        't',
        'GLhalf '
      ],
      [
        'r',
        'GLhalf '
      ],
      [
        'q',
        'GLhalf '
      ]
    ],
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewMultiTexCoord4hNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord4hvNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glMultiTexCoord4hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewMultiTexCoord4hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord4i' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLint '
      ],
      [
        't',
        'GLint '
      ],
      [
        'r',
        'GLint '
      ],
      [
        'q',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord4i',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord4iARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLint '
      ],
      [
        't',
        'GLint '
      ],
      [
        'r',
        'GLint '
      ],
      [
        'q',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord4iARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord4iv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord4iv_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord4iv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord4ivARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord4ivARB_c',
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord4ivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord4s' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLshort '
      ],
      [
        't',
        'GLshort '
      ],
      [
        'r',
        'GLshort '
      ],
      [
        'q',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord4s',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord4sARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLshort '
      ],
      [
        't',
        'GLshort '
      ],
      [
        'r',
        'GLshort '
      ],
      [
        'q',
        'GLshort '
      ]
    ],
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord4sARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord4sv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord4sv_c',
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewMultiTexCoord4sv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord4svARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glMultiTexCoord4svARB_c',
    'feature' => 'GL_ARB_multitexture',
    'glewImpl' => '__glewMultiTexCoord4svARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoord4x' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        's',
        'GLfixed '
      ],
      [
        't',
        'GLfixed '
      ],
      [
        'r',
        'GLfixed '
      ],
      [
        'q',
        'GLfixed '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewMultiTexCoord4x',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoordP1ui' => {
    'argdata' => [
      [
        'texture',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'coords',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewMultiTexCoordP1ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoordP1uiv' => {
    'argdata' => [
      [
        'texture',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'coords',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glMultiTexCoordP1uiv_c',
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewMultiTexCoordP1uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoordP2ui' => {
    'argdata' => [
      [
        'texture',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'coords',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewMultiTexCoordP2ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoordP2uiv' => {
    'argdata' => [
      [
        'texture',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'coords',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glMultiTexCoordP2uiv_c',
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewMultiTexCoordP2uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoordP3ui' => {
    'argdata' => [
      [
        'texture',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'coords',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewMultiTexCoordP3ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoordP3uiv' => {
    'argdata' => [
      [
        'texture',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'coords',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glMultiTexCoordP3uiv_c',
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewMultiTexCoordP3uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoordP4ui' => {
    'argdata' => [
      [
        'texture',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'coords',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewMultiTexCoordP4ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoordP4uiv' => {
    'argdata' => [
      [
        'texture',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'coords',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glMultiTexCoordP4uiv_c',
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewMultiTexCoordP4uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexCoordPointerEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glMultiTexCoordPointerEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexCoordPointerEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexEnvfEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexEnvfEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexEnvfvEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glMultiTexEnvfvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexEnvfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexEnviEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexEnviEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexEnvivEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glMultiTexEnvivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexEnvivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexGendEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'coord',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexGendEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexGendvEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'coord',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glMultiTexGendvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexGendvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexGenfEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'coord',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexGenfEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexGenfvEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'coord',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glMultiTexGenfvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexGenfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexGeniEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'coord',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexGeniEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexGenivEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'coord',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glMultiTexGenivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexGenivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexImage1DEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glMultiTexImage1DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexImage1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexImage2DEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glMultiTexImage2DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexImage2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexImage3DEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glMultiTexImage3DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexImage3DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexParameterIivEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glMultiTexParameterIivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexParameterIivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexParameterIuivEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glMultiTexParameterIuivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexParameterIuivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexParameterfEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexParameterfEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexParameterfvEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glMultiTexParameterfvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexParameterfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexParameteriEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexParameteriEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexParameterivEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glMultiTexParameterivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexRenderbufferEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'renderbuffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexRenderbufferEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexSubImage1DEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glMultiTexSubImage1DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexSubImage1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexSubImage2DEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glMultiTexSubImage2DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexSubImage2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultiTexSubImage3DEXT' => {
    'argdata' => [
      [
        'texunit',
        'GLenum '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glMultiTexSubImage3DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewMultiTexSubImage3DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMulticastBarrierNV' => {
    'feature' => 'GL_NV_gpu_multicast',
    'glewImpl' => '__glewMulticastBarrierNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMulticastBlitFramebufferNV' => {
    'argdata' => [
      [
        'srcGpu',
        'GLuint '
      ],
      [
        'dstGpu',
        'GLuint '
      ],
      [
        'srcX0',
        'GLint '
      ],
      [
        'srcY0',
        'GLint '
      ],
      [
        'srcX1',
        'GLint '
      ],
      [
        'srcY1',
        'GLint '
      ],
      [
        'dstX0',
        'GLint '
      ],
      [
        'dstY0',
        'GLint '
      ],
      [
        'dstX1',
        'GLint '
      ],
      [
        'dstY1',
        'GLint '
      ],
      [
        'mask',
        'GLbitfield '
      ],
      [
        'filter',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_gpu_multicast',
    'glewImpl' => '__glewMulticastBlitFramebufferNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMulticastBufferSubDataNV' => {
    'argdata' => [
      [
        'gpuMask',
        'GLbitfield '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glMulticastBufferSubDataNV_c',
    'feature' => 'GL_NV_gpu_multicast',
    'glewImpl' => '__glewMulticastBufferSubDataNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMulticastCopyBufferSubDataNV' => {
    'argdata' => [
      [
        'readGpu',
        'GLuint '
      ],
      [
        'writeGpuMask',
        'GLbitfield '
      ],
      [
        'readBuffer',
        'GLuint '
      ],
      [
        'writeBuffer',
        'GLuint '
      ],
      [
        'readOffset',
        'GLintptr '
      ],
      [
        'writeOffset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ]
    ],
    'feature' => 'GL_NV_gpu_multicast',
    'glewImpl' => '__glewMulticastCopyBufferSubDataNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMulticastCopyImageSubDataNV' => {
    'argdata' => [
      [
        'srcGpu',
        'GLuint '
      ],
      [
        'dstGpuMask',
        'GLbitfield '
      ],
      [
        'srcName',
        'GLuint '
      ],
      [
        'srcTarget',
        'GLenum '
      ],
      [
        'srcLevel',
        'GLint '
      ],
      [
        'srcX',
        'GLint '
      ],
      [
        'srcY',
        'GLint '
      ],
      [
        'srcZ',
        'GLint '
      ],
      [
        'dstName',
        'GLuint '
      ],
      [
        'dstTarget',
        'GLenum '
      ],
      [
        'dstLevel',
        'GLint '
      ],
      [
        'dstX',
        'GLint '
      ],
      [
        'dstY',
        'GLint '
      ],
      [
        'dstZ',
        'GLint '
      ],
      [
        'srcWidth',
        'GLsizei '
      ],
      [
        'srcHeight',
        'GLsizei '
      ],
      [
        'srcDepth',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NV_gpu_multicast',
    'glewImpl' => '__glewMulticastCopyImageSubDataNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMulticastFramebufferSampleLocationsfvNV' => {
    'argdata' => [
      [
        'gpu',
        'GLuint '
      ],
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'start',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glMulticastFramebufferSampleLocationsfvNV_c',
    'feature' => 'GL_NV_gpu_multicast',
    'glewImpl' => '__glewMulticastFramebufferSampleLocationsfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMulticastGetQueryObjecti64vNV' => {
    'argdata' => [
      [
        'gpu',
        'GLuint '
      ],
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint64* '
      ]
    ],
    'binding_name' => 'glMulticastGetQueryObjecti64vNV_c',
    'feature' => 'GL_NV_gpu_multicast',
    'glewImpl' => '__glewMulticastGetQueryObjecti64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMulticastGetQueryObjectivNV' => {
    'argdata' => [
      [
        'gpu',
        'GLuint '
      ],
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glMulticastGetQueryObjectivNV_c',
    'feature' => 'GL_NV_gpu_multicast',
    'glewImpl' => '__glewMulticastGetQueryObjectivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMulticastGetQueryObjectui64vNV' => {
    'argdata' => [
      [
        'gpu',
        'GLuint '
      ],
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint64* '
      ]
    ],
    'binding_name' => 'glMulticastGetQueryObjectui64vNV_c',
    'feature' => 'GL_NV_gpu_multicast',
    'glewImpl' => '__glewMulticastGetQueryObjectui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMulticastGetQueryObjectuivNV' => {
    'argdata' => [
      [
        'gpu',
        'GLuint '
      ],
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glMulticastGetQueryObjectuivNV_c',
    'feature' => 'GL_NV_gpu_multicast',
    'glewImpl' => '__glewMulticastGetQueryObjectuivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMulticastWaitSyncNV' => {
    'argdata' => [
      [
        'signalGpu',
        'GLuint '
      ],
      [
        'waitGpuMask',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_NV_gpu_multicast',
    'glewImpl' => '__glewMulticastWaitSyncNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glMultisampleSubRectPosSGIS' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ]
    ],
    'feature' => 'GL_SGIS_shared_multisample',
    'glewImpl' => '__glewMultisampleSubRectPosSGIS',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedBufferData' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'data',
        'const void *'
      ],
      [
        'usage',
        'GLenum '
      ]
    ],
    'binding_name' => 'glNamedBufferData_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewNamedBufferData',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedBufferDataEXT' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'data',
        'const void *'
      ],
      [
        'usage',
        'GLenum '
      ]
    ],
    'binding_name' => 'glNamedBufferDataEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedBufferDataEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedBufferStorage' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'data',
        'const void *'
      ],
      [
        'flags',
        'GLbitfield '
      ]
    ],
    'binding_name' => 'glNamedBufferStorage_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewNamedBufferStorage',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedBufferStorageEXT' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'data',
        'const void *'
      ],
      [
        'flags',
        'GLbitfield '
      ]
    ],
    'binding_name' => 'glNamedBufferStorageEXT_c',
    'feature' => 'GL_EXT_buffer_storage',
    'glewImpl' => '__glewNamedBufferStorageEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedBufferStorageExternalEXT' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'clientBuffer',
        'GLeglClientBufferEXT '
      ],
      [
        'flags',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_EXT_external_buffer',
    'glewImpl' => '__glewNamedBufferStorageExternalEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedBufferStorageMemEXT' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'memory',
        'GLuint '
      ],
      [
        'offset',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_EXT_memory_object',
    'glewImpl' => '__glewNamedBufferStorageMemEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedBufferSubData' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glNamedBufferSubData_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewNamedBufferSubData',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedBufferSubDataEXT' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ],
      [
        'data',
        'const void *'
      ]
    ],
    'binding_name' => 'glNamedBufferSubDataEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedBufferSubDataEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedCopyBufferSubDataEXT' => {
    'argdata' => [
      [
        'readBuffer',
        'GLuint '
      ],
      [
        'writeBuffer',
        'GLuint '
      ],
      [
        'readOffset',
        'GLintptr '
      ],
      [
        'writeOffset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedCopyBufferSubDataEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedFramebufferDrawBuffer' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewNamedFramebufferDrawBuffer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedFramebufferDrawBuffers' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'bufs',
        'const GLenum* '
      ]
    ],
    'binding_name' => 'glNamedFramebufferDrawBuffers_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewNamedFramebufferDrawBuffers',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedFramebufferParameteri' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewNamedFramebufferParameteri',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedFramebufferParameteriEXT' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_framebuffer_no_attachments',
    'glewImpl' => '__glewNamedFramebufferParameteriEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedFramebufferReadBuffer' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewNamedFramebufferReadBuffer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedFramebufferRenderbuffer' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'renderbuffertarget',
        'GLenum '
      ],
      [
        'renderbuffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewNamedFramebufferRenderbuffer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedFramebufferRenderbufferEXT' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'renderbuffertarget',
        'GLenum '
      ],
      [
        'renderbuffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedFramebufferRenderbufferEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedFramebufferSampleLocationsfvARB' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'start',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glNamedFramebufferSampleLocationsfvARB_c',
    'feature' => 'GL_ARB_sample_locations',
    'glewImpl' => '__glewNamedFramebufferSampleLocationsfvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedFramebufferSampleLocationsfvNV' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'start',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glNamedFramebufferSampleLocationsfvNV_c',
    'feature' => 'GL_NV_sample_locations',
    'glewImpl' => '__glewNamedFramebufferSampleLocationsfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedFramebufferSamplePositionsfvAMD' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'numsamples',
        'GLuint '
      ],
      [
        'pixelindex',
        'GLuint '
      ],
      [
        'values',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glNamedFramebufferSamplePositionsfvAMD_c',
    'feature' => 'GL_AMD_framebuffer_sample_positions',
    'glewImpl' => '__glewNamedFramebufferSamplePositionsfvAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedFramebufferTexture' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewNamedFramebufferTexture',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedFramebufferTexture1DEXT' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'textarget',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedFramebufferTexture1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedFramebufferTexture2DEXT' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'textarget',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedFramebufferTexture2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedFramebufferTexture3DEXT' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'textarget',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedFramebufferTexture3DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedFramebufferTextureEXT' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedFramebufferTextureEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedFramebufferTextureFaceEXT' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'face',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedFramebufferTextureFaceEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedFramebufferTextureLayer' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'layer',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewNamedFramebufferTextureLayer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedFramebufferTextureLayerEXT' => {
    'argdata' => [
      [
        'framebuffer',
        'GLuint '
      ],
      [
        'attachment',
        'GLenum '
      ],
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'layer',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedFramebufferTextureLayerEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedProgramLocalParameter4dEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ],
      [
        'w',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedProgramLocalParameter4dEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedProgramLocalParameter4dvEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glNamedProgramLocalParameter4dvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedProgramLocalParameter4dvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedProgramLocalParameter4fEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ],
      [
        'w',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedProgramLocalParameter4fEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedProgramLocalParameter4fvEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glNamedProgramLocalParameter4fvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedProgramLocalParameter4fvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedProgramLocalParameterI4iEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'z',
        'GLint '
      ],
      [
        'w',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedProgramLocalParameterI4iEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedProgramLocalParameterI4ivEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glNamedProgramLocalParameterI4ivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedProgramLocalParameterI4ivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedProgramLocalParameterI4uiEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLuint '
      ],
      [
        'y',
        'GLuint '
      ],
      [
        'z',
        'GLuint '
      ],
      [
        'w',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedProgramLocalParameterI4uiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedProgramLocalParameterI4uivEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glNamedProgramLocalParameterI4uivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedProgramLocalParameterI4uivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedProgramLocalParameters4fvEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glNamedProgramLocalParameters4fvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedProgramLocalParameters4fvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedProgramLocalParametersI4ivEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glNamedProgramLocalParametersI4ivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedProgramLocalParametersI4ivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedProgramLocalParametersI4uivEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'params',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glNamedProgramLocalParametersI4uivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedProgramLocalParametersI4uivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedProgramStringEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'len',
        'GLsizei '
      ],
      [
        'string',
        'const void *'
      ]
    ],
    'binding_name' => 'glNamedProgramStringEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedProgramStringEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedRenderbufferStorage' => {
    'argdata' => [
      [
        'renderbuffer',
        'GLuint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewNamedRenderbufferStorage',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedRenderbufferStorageEXT' => {
    'argdata' => [
      [
        'renderbuffer',
        'GLuint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedRenderbufferStorageEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedRenderbufferStorageMultisample' => {
    'argdata' => [
      [
        'renderbuffer',
        'GLuint '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewNamedRenderbufferStorageMultisample',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedRenderbufferStorageMultisampleCoverageEXT' => {
    'argdata' => [
      [
        'renderbuffer',
        'GLuint '
      ],
      [
        'coverageSamples',
        'GLsizei '
      ],
      [
        'colorSamples',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedRenderbufferStorageMultisampleCoverageEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedRenderbufferStorageMultisampleEXT' => {
    'argdata' => [
      [
        'renderbuffer',
        'GLuint '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewNamedRenderbufferStorageMultisampleEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNamedStringARB' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'namelen',
        'GLint '
      ],
      [
        'name',
        'const GLchar* '
      ],
      [
        'stringlen',
        'GLint '
      ],
      [
        'string',
        'const GLchar *'
      ]
    ],
    'binding_name' => 'glNamedStringARB_c',
    'feature' => 'GL_ARB_shading_language_include',
    'glewImpl' => '__glewNamedStringARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNewBufferRegion' => {
    'argdata' => [
      [
        'region',
        'GLenum '
      ]
    ],
    'feature' => 'GL_KTX_buffer_region',
    'glewImpl' => '__glewNewBufferRegion',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glNewList' => {
    'argdata' => [
      [
        'list',
        'GLuint '
      ],
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNewObjectBufferATI' => {
    'argdata' => [
      [
        'size',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ],
      [
        'usage',
        'GLenum '
      ]
    ],
    'binding_name' => 'glNewObjectBufferATI_c',
    'feature' => 'GL_ATI_vertex_array_object',
    'glewImpl' => '__glewNewObjectBufferATI',
    'glewtype' => 'fun',
    'restype' => 'GLuint'
  },
  'glNonlinLightfvSGIX' => {
    'argdata' => [
      [
        'light',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'terms',
        'GLint '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glNonlinLightfvSGIX_c',
    'feature' => 'GL_SGIX_nonlinear_lighting_pervertex',
    'glewImpl' => '__glewNonlinLightfvSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNonlinMaterialfvSGIX' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'terms',
        'GLint '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glNonlinMaterialfvSGIX_c',
    'feature' => 'GL_SGIX_nonlinear_lighting_pervertex',
    'glewImpl' => '__glewNonlinMaterialfvSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormal3b' => {
    'argdata' => [
      [
        'nx',
        'GLbyte '
      ],
      [
        'ny',
        'GLbyte '
      ],
      [
        'nz',
        'GLbyte '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormal3bv' => {
    'argdata' => [
      [
        'v',
        'const GLbyte *'
      ]
    ],
    'binding_name' => 'glNormal3bv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormal3d' => {
    'argdata' => [
      [
        'nx',
        'GLdouble '
      ],
      [
        'ny',
        'GLdouble '
      ],
      [
        'nz',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormal3dv' => {
    'argdata' => [
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glNormal3dv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormal3f' => {
    'argdata' => [
      [
        'nx',
        'GLfloat '
      ],
      [
        'ny',
        'GLfloat '
      ],
      [
        'nz',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormal3fVertex3fSUN' => {
    'argdata' => [
      [
        'nx',
        'GLfloat '
      ],
      [
        'ny',
        'GLfloat '
      ],
      [
        'nz',
        'GLfloat '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewNormal3fVertex3fSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormal3fVertex3fvSUN' => {
    'argdata' => [
      [
        'n',
        'const GLfloat* '
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glNormal3fVertex3fvSUN_c',
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewNormal3fVertex3fvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormal3fv' => {
    'argdata' => [
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glNormal3fv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormal3hNV' => {
    'argdata' => [
      [
        'nx',
        'GLhalf '
      ],
      [
        'ny',
        'GLhalf '
      ],
      [
        'nz',
        'GLhalf '
      ]
    ],
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewNormal3hNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormal3hvNV' => {
    'argdata' => [
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glNormal3hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewNormal3hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormal3i' => {
    'argdata' => [
      [
        'nx',
        'GLint '
      ],
      [
        'ny',
        'GLint '
      ],
      [
        'nz',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormal3iv' => {
    'argdata' => [
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glNormal3iv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormal3s' => {
    'argdata' => [
      [
        'nx',
        'GLshort '
      ],
      [
        'ny',
        'GLshort '
      ],
      [
        'nz',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormal3sv' => {
    'argdata' => [
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glNormal3sv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormal3x' => {
    'argdata' => [
      [
        'nx',
        'GLfixed '
      ],
      [
        'ny',
        'GLfixed '
      ],
      [
        'nz',
        'GLfixed '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewNormal3x',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormalFormatNV' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NV_vertex_buffer_unified_memory',
    'glewImpl' => '__glewNormalFormatNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormalP3ui' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'coords',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewNormalP3ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormalP3uiv' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'coords',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glNormalP3uiv_c',
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewNormalP3uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormalPointer' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glNormalPointer_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormalPointerEXT' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glNormalPointerEXT_c',
    'feature' => 'GL_EXT_vertex_array',
    'glewImpl' => '__glewNormalPointerEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormalPointerListIBM' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLint '
      ],
      [
        'pointer',
        'const void** '
      ],
      [
        'ptrstride',
        'GLint '
      ]
    ],
    'binding_name' => 'glNormalPointerListIBM_c',
    'feature' => 'GL_IBM_vertex_array_lists',
    'glewImpl' => '__glewNormalPointerListIBM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormalPointervINTEL' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'pointer',
        'const void** '
      ]
    ],
    'binding_name' => 'glNormalPointervINTEL_c',
    'feature' => 'GL_INTEL_parallel_arrays',
    'glewImpl' => '__glewNormalPointervINTEL',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormalStream3bATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'x',
        'GLbyte '
      ],
      [
        'y',
        'GLbyte '
      ],
      [
        'z',
        'GLbyte '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewNormalStream3bATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormalStream3bvATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'coords',
        'const GLbyte *'
      ]
    ],
    'binding_name' => 'glNormalStream3bvATI_c',
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewNormalStream3bvATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormalStream3dATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewNormalStream3dATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormalStream3dvATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'coords',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glNormalStream3dvATI_c',
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewNormalStream3dvATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormalStream3fATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewNormalStream3fATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormalStream3fvATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'coords',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glNormalStream3fvATI_c',
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewNormalStream3fvATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormalStream3iATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'z',
        'GLint '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewNormalStream3iATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormalStream3ivATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'coords',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glNormalStream3ivATI_c',
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewNormalStream3ivATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormalStream3sATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ],
      [
        'z',
        'GLshort '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewNormalStream3sATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glNormalStream3svATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'coords',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glNormalStream3svATI_c',
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewNormalStream3svATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glObjectLabel' => {
    'argdata' => [
      [
        'identifier',
        'GLenum '
      ],
      [
        'name',
        'GLuint '
      ],
      [
        'length',
        'GLsizei '
      ],
      [
        'label',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glObjectLabel_c',
    'feature' => 'GL_KHR_debug',
    'glewImpl' => '__glewObjectLabel',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glObjectPtrLabel' => {
    'argdata' => [
      [
        'ptr',
        'void* '
      ],
      [
        'length',
        'GLsizei '
      ],
      [
        'label',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glObjectPtrLabel_c',
    'feature' => 'GL_KHR_debug',
    'glewImpl' => '__glewObjectPtrLabel',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glObjectPurgeableAPPLE' => {
    'argdata' => [
      [
        'objectType',
        'GLenum '
      ],
      [
        'name',
        'GLuint '
      ],
      [
        'option',
        'GLenum '
      ]
    ],
    'feature' => 'GL_APPLE_object_purgeable',
    'glewImpl' => '__glewObjectPurgeableAPPLE',
    'glewtype' => 'fun',
    'restype' => 'GLenum'
  },
  'glObjectUnpurgeableAPPLE' => {
    'argdata' => [
      [
        'objectType',
        'GLenum '
      ],
      [
        'name',
        'GLuint '
      ],
      [
        'option',
        'GLenum '
      ]
    ],
    'feature' => 'GL_APPLE_object_purgeable',
    'glewImpl' => '__glewObjectUnpurgeableAPPLE',
    'glewtype' => 'fun',
    'restype' => 'GLenum'
  },
  'glOrtho' => {
    'argdata' => [
      [
        'left',
        'GLdouble '
      ],
      [
        'right',
        'GLdouble '
      ],
      [
        'bottom',
        'GLdouble '
      ],
      [
        'top',
        'GLdouble '
      ],
      [
        'zNear',
        'GLdouble '
      ],
      [
        'zFar',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glOrthof' => {
    'argdata' => [
      [
        'left',
        'GLfloat '
      ],
      [
        'right',
        'GLfloat '
      ],
      [
        'bottom',
        'GLfloat '
      ],
      [
        'top',
        'GLfloat '
      ],
      [
        'zNear',
        'GLfloat '
      ],
      [
        'zFar',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewOrthof',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glOrthox' => {
    'argdata' => [
      [
        'left',
        'GLfixed '
      ],
      [
        'right',
        'GLfixed '
      ],
      [
        'bottom',
        'GLfixed '
      ],
      [
        'top',
        'GLfixed '
      ],
      [
        'zNear',
        'GLfixed '
      ],
      [
        'zFar',
        'GLfixed '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewOrthox',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPNTrianglesfATI' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ATI_pn_triangles',
    'glewImpl' => '__glewPNTrianglesfATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPNTrianglesiATI' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_ATI_pn_triangles',
    'glewImpl' => '__glewPNTrianglesiATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPassTexCoordATI' => {
    'argdata' => [
      [
        'dst',
        'GLuint '
      ],
      [
        'coord',
        'GLuint '
      ],
      [
        'swizzle',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ATI_fragment_shader',
    'glewImpl' => '__glewPassTexCoordATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPassThrough' => {
    'argdata' => [
      [
        'token',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPatchParameterfv' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'values',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glPatchParameterfv_c',
    'feature' => 'GL_ARB_tessellation_shader',
    'glewImpl' => '__glewPatchParameterfv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPatchParameteri' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'value',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_tessellation_shader',
    'glewImpl' => '__glewPatchParameteri',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPathColorGenNV' => {
    'argdata' => [
      [
        'color',
        'GLenum '
      ],
      [
        'genMode',
        'GLenum '
      ],
      [
        'colorFormat',
        'GLenum '
      ],
      [
        'coeffs',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glPathColorGenNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPathColorGenNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPathCommandsNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'numCommands',
        'GLsizei '
      ],
      [
        'commands',
        'const GLubyte* '
      ],
      [
        'numCoords',
        'GLsizei '
      ],
      [
        'coordType',
        'GLenum '
      ],
      [
        'coords',
        'const void*'
      ]
    ],
    'binding_name' => 'glPathCommandsNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPathCommandsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPathCoordsNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'numCoords',
        'GLsizei '
      ],
      [
        'coordType',
        'GLenum '
      ],
      [
        'coords',
        'const void *'
      ]
    ],
    'binding_name' => 'glPathCoordsNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPathCoordsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPathCoverDepthFuncNV' => {
    'argdata' => [
      [
        'zfunc',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPathCoverDepthFuncNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPathDashArrayNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'dashCount',
        'GLsizei '
      ],
      [
        'dashArray',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glPathDashArrayNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPathDashArrayNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPathFogGenNV' => {
    'argdata' => [
      [
        'genMode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPathFogGenNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPathGlyphIndexArrayNV' => {
    'argdata' => [
      [
        'firstPathName',
        'GLuint '
      ],
      [
        'fontTarget',
        'GLenum '
      ],
      [
        'fontName',
        'const void *'
      ],
      [
        'fontStyle',
        'GLbitfield '
      ],
      [
        'firstGlyphIndex',
        'GLuint '
      ],
      [
        'numGlyphs',
        'GLsizei '
      ],
      [
        'pathParameterTemplate',
        'GLuint '
      ],
      [
        'emScale',
        'GLfloat '
      ]
    ],
    'binding_name' => 'glPathGlyphIndexArrayNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPathGlyphIndexArrayNV',
    'glewtype' => 'fun',
    'restype' => 'GLenum'
  },
  'glPathGlyphIndexRangeNV' => {
    'argdata' => [
      [
        'fontTarget',
        'GLenum '
      ],
      [
        'fontName',
        'const void *'
      ],
      [
        'fontStyle',
        'GLbitfield '
      ],
      [
        'pathParameterTemplate',
        'GLuint '
      ],
      [
        'emScale',
        'GLfloat '
      ],
      [
        'baseAndCount',
        'GLuint * '
      ]
    ],
    'binding_name' => 'glPathGlyphIndexRangeNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPathGlyphIndexRangeNV',
    'glewtype' => 'fun',
    'restype' => 'GLenum'
  },
  'glPathGlyphRangeNV' => {
    'argdata' => [
      [
        'firstPathName',
        'GLuint '
      ],
      [
        'fontTarget',
        'GLenum '
      ],
      [
        'fontName',
        'const void *'
      ],
      [
        'fontStyle',
        'GLbitfield '
      ],
      [
        'firstGlyph',
        'GLuint '
      ],
      [
        'numGlyphs',
        'GLsizei '
      ],
      [
        'handleMissingGlyphs',
        'GLenum '
      ],
      [
        'pathParameterTemplate',
        'GLuint '
      ],
      [
        'emScale',
        'GLfloat '
      ]
    ],
    'binding_name' => 'glPathGlyphRangeNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPathGlyphRangeNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPathGlyphsNV' => {
    'argdata' => [
      [
        'firstPathName',
        'GLuint '
      ],
      [
        'fontTarget',
        'GLenum '
      ],
      [
        'fontName',
        'const void *'
      ],
      [
        'fontStyle',
        'GLbitfield '
      ],
      [
        'numGlyphs',
        'GLsizei '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'charcodes',
        'const void*'
      ],
      [
        'handleMissingGlyphs',
        'GLenum '
      ],
      [
        'pathParameterTemplate',
        'GLuint '
      ],
      [
        'emScale',
        'GLfloat '
      ]
    ],
    'binding_name' => 'glPathGlyphsNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPathGlyphsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPathMemoryGlyphIndexArrayNV' => {
    'argdata' => [
      [
        'firstPathName',
        'GLuint '
      ],
      [
        'fontTarget',
        'GLenum '
      ],
      [
        'fontSize',
        'GLsizeiptr '
      ],
      [
        'fontData',
        'const void *'
      ],
      [
        'faceIndex',
        'GLsizei '
      ],
      [
        'firstGlyphIndex',
        'GLuint '
      ],
      [
        'numGlyphs',
        'GLsizei '
      ],
      [
        'pathParameterTemplate',
        'GLuint '
      ],
      [
        'emScale',
        'GLfloat '
      ]
    ],
    'binding_name' => 'glPathMemoryGlyphIndexArrayNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPathMemoryGlyphIndexArrayNV',
    'glewtype' => 'fun',
    'restype' => 'GLenum'
  },
  'glPathParameterfNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'value',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPathParameterfNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPathParameterfvNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glPathParameterfvNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPathParameterfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPathParameteriNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'value',
        'GLint '
      ]
    ],
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPathParameteriNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPathParameterivNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'value',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glPathParameterivNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPathParameterivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPathStencilDepthOffsetNV' => {
    'argdata' => [
      [
        'factor',
        'GLfloat '
      ],
      [
        'units',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPathStencilDepthOffsetNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPathStencilFuncNV' => {
    'argdata' => [
      [
        'func',
        'GLenum '
      ],
      [
        'ref',
        'GLint '
      ],
      [
        'mask',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPathStencilFuncNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPathStringNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'length',
        'GLsizei '
      ],
      [
        'pathString',
        'const void *'
      ]
    ],
    'binding_name' => 'glPathStringNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPathStringNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPathSubCommandsNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'commandStart',
        'GLsizei '
      ],
      [
        'commandsToDelete',
        'GLsizei '
      ],
      [
        'numCommands',
        'GLsizei '
      ],
      [
        'commands',
        'const GLubyte* '
      ],
      [
        'numCoords',
        'GLsizei '
      ],
      [
        'coordType',
        'GLenum '
      ],
      [
        'coords',
        'const void*'
      ]
    ],
    'binding_name' => 'glPathSubCommandsNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPathSubCommandsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPathSubCoordsNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'coordStart',
        'GLsizei '
      ],
      [
        'numCoords',
        'GLsizei '
      ],
      [
        'coordType',
        'GLenum '
      ],
      [
        'coords',
        'const void *'
      ]
    ],
    'binding_name' => 'glPathSubCoordsNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPathSubCoordsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPathTexGenNV' => {
    'argdata' => [
      [
        'texCoordSet',
        'GLenum '
      ],
      [
        'genMode',
        'GLenum '
      ],
      [
        'components',
        'GLint '
      ],
      [
        'coeffs',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glPathTexGenNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPathTexGenNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPauseTransformFeedback' => {
    'feature' => 'GL_ARB_transform_feedback2',
    'glewImpl' => '__glewPauseTransformFeedback',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPauseTransformFeedbackNV' => {
    'feature' => 'GL_NV_transform_feedback2',
    'glewImpl' => '__glewPauseTransformFeedbackNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPixelDataRangeNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'length',
        'GLsizei '
      ],
      [
        'pointer',
        'void *'
      ]
    ],
    'binding_name' => 'glPixelDataRangeNV_c',
    'feature' => 'GL_NV_pixel_data_range',
    'glewImpl' => '__glewPixelDataRangeNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPixelMapfv' => {
    'argdata' => [
      [
        'map',
        'GLenum '
      ],
      [
        'mapsize',
        'GLsizei '
      ],
      [
        'values',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glPixelMapfv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPixelMapuiv' => {
    'argdata' => [
      [
        'map',
        'GLenum '
      ],
      [
        'mapsize',
        'GLsizei '
      ],
      [
        'values',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glPixelMapuiv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPixelMapusv' => {
    'argdata' => [
      [
        'map',
        'GLenum '
      ],
      [
        'mapsize',
        'GLsizei '
      ],
      [
        'values',
        'const GLushort *'
      ]
    ],
    'binding_name' => 'glPixelMapusv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPixelStoref' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPixelStorei' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPixelTexGenSGIX' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_SGIX_pixel_texture',
    'glewImpl' => '__glewPixelTexGenSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPixelTransferf' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPixelTransferi' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPixelTransformParameterfEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'const GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_pixel_transform',
    'glewImpl' => '__glewPixelTransformParameterfEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPixelTransformParameterfSGI' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SGI_fft',
    'glewImpl' => '__glewPixelTransformParameterfSGI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPixelTransformParameterfvEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glPixelTransformParameterfvEXT_c',
    'feature' => 'GL_EXT_pixel_transform',
    'glewImpl' => '__glewPixelTransformParameterfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPixelTransformParameterfvSGI' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glPixelTransformParameterfvSGI_c',
    'feature' => 'GL_SGI_fft',
    'glewImpl' => '__glewPixelTransformParameterfvSGI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPixelTransformParameteriEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'const GLint '
      ]
    ],
    'feature' => 'GL_EXT_pixel_transform',
    'glewImpl' => '__glewPixelTransformParameteriEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPixelTransformParameteriSGI' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_SGI_fft',
    'glewImpl' => '__glewPixelTransformParameteriSGI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPixelTransformParameterivEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glPixelTransformParameterivEXT_c',
    'feature' => 'GL_EXT_pixel_transform',
    'glewImpl' => '__glewPixelTransformParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPixelTransformParameterivSGI' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glPixelTransformParameterivSGI_c',
    'feature' => 'GL_SGI_fft',
    'glewImpl' => '__glewPixelTransformParameterivSGI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPixelTransformSGI' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_SGI_fft',
    'glewImpl' => '__glewPixelTransformSGI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPixelZoom' => {
    'argdata' => [
      [
        'xfactor',
        'GLfloat '
      ],
      [
        'yfactor',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPointAlongPathNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'startSegment',
        'GLsizei '
      ],
      [
        'numSegments',
        'GLsizei '
      ],
      [
        'distance',
        'GLfloat '
      ],
      [
        'x',
        'GLfloat* '
      ],
      [
        'y',
        'GLfloat *'
      ],
      [
        'tangentX',
        'GLfloat *'
      ],
      [
        'tangentY',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glPointAlongPathNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewPointAlongPathNV',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glPointParameterf' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewPointParameterf',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPointParameterfARB' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_point_parameters',
    'glewImpl' => '__glewPointParameterfARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPointParameterfEXT' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_point_parameters',
    'glewImpl' => '__glewPointParameterfEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPointParameterfv' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glPointParameterfv_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewPointParameterfv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPointParameterfvARB' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glPointParameterfvARB_c',
    'feature' => 'GL_ARB_point_parameters',
    'glewImpl' => '__glewPointParameterfvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPointParameterfvEXT' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glPointParameterfvEXT_c',
    'feature' => 'GL_EXT_point_parameters',
    'glewImpl' => '__glewPointParameterfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPointParameteri' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewPointParameteri',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPointParameteriNV' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_NV_point_sprite',
    'glewImpl' => '__glewPointParameteriNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPointParameteriv' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glPointParameteriv_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewPointParameteriv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPointParameterivNV' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glPointParameterivNV_c',
    'feature' => 'GL_NV_point_sprite',
    'glewImpl' => '__glewPointParameterivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPointParameterx' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfixed '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_1_compatibility',
    'glewImpl' => '__glewPointParameterx',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPointParameterxv' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfixed* '
      ]
    ],
    'binding_name' => 'glPointParameterxv_c',
    'feature' => 'GL_REGAL_ES1_1_compatibility',
    'glewImpl' => '__glewPointParameterxv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPointSize' => {
    'argdata' => [
      [
        'size',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPointSizePointerOES' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glPointSizePointerOES_c',
    'feature' => 'GL_REGAL_ES1_1_compatibility',
    'glewImpl' => '__glewPointSizePointerOES',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPointSizex' => {
    'argdata' => [
      [
        'size',
        'GLfixed '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewPointSizex',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPollAsyncSGIX' => {
    'argdata' => [
      [
        'markerp',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glPollAsyncSGIX_c',
    'feature' => 'GL_SGIX_async',
    'glewImpl' => '__glewPollAsyncSGIX',
    'glewtype' => 'fun',
    'restype' => 'GLint'
  },
  'glPolygonMode' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPolygonModeNV' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_polygon_mode',
    'glewImpl' => '__glewPolygonModeNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPolygonOffset' => {
    'argdata' => [
      [
        'factor',
        'GLfloat '
      ],
      [
        'units',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPolygonOffsetClamp' => {
    'argdata' => [
      [
        'factor',
        'GLfloat '
      ],
      [
        'units',
        'GLfloat '
      ],
      [
        'clamp',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_polygon_offset_clamp',
    'glewImpl' => '__glewPolygonOffsetClamp',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPolygonOffsetClampEXT' => {
    'argdata' => [
      [
        'factor',
        'GLfloat '
      ],
      [
        'units',
        'GLfloat '
      ],
      [
        'clamp',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_polygon_offset_clamp',
    'glewImpl' => '__glewPolygonOffsetClampEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPolygonOffsetEXT' => {
    'argdata' => [
      [
        'factor',
        'GLfloat '
      ],
      [
        'bias',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_polygon_offset',
    'glewImpl' => '__glewPolygonOffsetEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPolygonOffsetx' => {
    'argdata' => [
      [
        'factor',
        'GLfixed '
      ],
      [
        'units',
        'GLfixed '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewPolygonOffsetx',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPolygonStipple' => {
    'argdata' => [
      [
        'mask',
        'const GLubyte *'
      ]
    ],
    'binding_name' => 'glPolygonStipple_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPopAttrib' => {
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPopClientAttrib' => {
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPopDebugGroup' => {
    'feature' => 'GL_KHR_debug',
    'glewImpl' => '__glewPopDebugGroup',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPopGroupMarkerEXT' => {
    'feature' => 'GL_EXT_debug_marker',
    'glewImpl' => '__glewPopGroupMarkerEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPopMatrix' => {
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPopName' => {
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPresentFrameDualFillNV' => {
    'argdata' => [
      [
        'video_slot',
        'GLuint '
      ],
      [
        'minPresentTime',
        'GLuint64EXT '
      ],
      [
        'beginPresentTimeId',
        'GLuint '
      ],
      [
        'presentDurationId',
        'GLuint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'target0',
        'GLenum '
      ],
      [
        'fill0',
        'GLuint '
      ],
      [
        'target1',
        'GLenum '
      ],
      [
        'fill1',
        'GLuint '
      ],
      [
        'target2',
        'GLenum '
      ],
      [
        'fill2',
        'GLuint '
      ],
      [
        'target3',
        'GLenum '
      ],
      [
        'fill3',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_present_video',
    'glewImpl' => '__glewPresentFrameDualFillNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPresentFrameKeyedNV' => {
    'argdata' => [
      [
        'video_slot',
        'GLuint '
      ],
      [
        'minPresentTime',
        'GLuint64EXT '
      ],
      [
        'beginPresentTimeId',
        'GLuint '
      ],
      [
        'presentDurationId',
        'GLuint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'target0',
        'GLenum '
      ],
      [
        'fill0',
        'GLuint '
      ],
      [
        'key0',
        'GLuint '
      ],
      [
        'target1',
        'GLenum '
      ],
      [
        'fill1',
        'GLuint '
      ],
      [
        'key1',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_present_video',
    'glewImpl' => '__glewPresentFrameKeyedNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPrimitiveBoundingBoxARB' => {
    'argdata' => [
      [
        'minX',
        'GLfloat '
      ],
      [
        'minY',
        'GLfloat '
      ],
      [
        'minZ',
        'GLfloat '
      ],
      [
        'minW',
        'GLfloat '
      ],
      [
        'maxX',
        'GLfloat '
      ],
      [
        'maxY',
        'GLfloat '
      ],
      [
        'maxZ',
        'GLfloat '
      ],
      [
        'maxW',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_ES3_2_compatibility',
    'glewImpl' => '__glewPrimitiveBoundingBoxARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPrimitiveRestartIndex' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_3_1',
    'glewImpl' => '__glewPrimitiveRestartIndex',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPrimitiveRestartIndexNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_primitive_restart',
    'glewImpl' => '__glewPrimitiveRestartIndexNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPrimitiveRestartNV' => {
    'feature' => 'GL_NV_primitive_restart',
    'glewImpl' => '__glewPrimitiveRestartNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPrioritizeTextures' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'textures',
        'const GLuint *'
      ],
      [
        'priorities',
        'const GLclampf *'
      ]
    ],
    'binding_name' => 'glPrioritizeTextures_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPrioritizeTexturesEXT' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'textures',
        'const GLuint* '
      ],
      [
        'priorities',
        'const GLclampf* '
      ]
    ],
    'binding_name' => 'glPrioritizeTexturesEXT_c',
    'feature' => 'GL_EXT_texture_object',
    'glewImpl' => '__glewPrioritizeTexturesEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPrioritizeVertexArraysSGIX' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'arrays',
        'const GLuint* '
      ],
      [
        'priorities',
        'const GLclampf* '
      ]
    ],
    'binding_name' => 'glPrioritizeVertexArraysSGIX_c',
    'feature' => 'GL_SGIX_vertex_array_object',
    'glewImpl' => '__glewPrioritizeVertexArraysSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramBinary' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'binaryFormat',
        'GLenum '
      ],
      [
        'binary',
        'const void *'
      ],
      [
        'length',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glProgramBinary_c',
    'feature' => 'GL_ARB_get_program_binary',
    'glewImpl' => '__glewProgramBinary',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramBufferParametersIivNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'params',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glProgramBufferParametersIivNV_c',
    'feature' => 'GL_NV_parameter_buffer_object',
    'glewImpl' => '__glewProgramBufferParametersIivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramBufferParametersIuivNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'params',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glProgramBufferParametersIuivNV_c',
    'feature' => 'GL_NV_parameter_buffer_object',
    'glewImpl' => '__glewProgramBufferParametersIuivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramBufferParametersfvNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'params',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glProgramBufferParametersfvNV_c',
    'feature' => 'GL_NV_parameter_buffer_object',
    'glewImpl' => '__glewProgramBufferParametersfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramEnvParameter4dARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ],
      [
        'w',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewProgramEnvParameter4dARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramEnvParameter4dvARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glProgramEnvParameter4dvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewProgramEnvParameter4dvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramEnvParameter4fARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ],
      [
        'w',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewProgramEnvParameter4fARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramEnvParameter4fvARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramEnvParameter4fvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewProgramEnvParameter4fvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramEnvParameterI4iNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'z',
        'GLint '
      ],
      [
        'w',
        'GLint '
      ]
    ],
    'feature' => 'GL_NV_gpu_program4',
    'glewImpl' => '__glewProgramEnvParameterI4iNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramEnvParameterI4ivNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glProgramEnvParameterI4ivNV_c',
    'feature' => 'GL_NV_gpu_program4',
    'glewImpl' => '__glewProgramEnvParameterI4ivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramEnvParameterI4uiNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLuint '
      ],
      [
        'y',
        'GLuint '
      ],
      [
        'z',
        'GLuint '
      ],
      [
        'w',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_gpu_program4',
    'glewImpl' => '__glewProgramEnvParameterI4uiNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramEnvParameterI4uivNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glProgramEnvParameterI4uivNV_c',
    'feature' => 'GL_NV_gpu_program4',
    'glewImpl' => '__glewProgramEnvParameterI4uivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramEnvParameters4fvEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramEnvParameters4fvEXT_c',
    'feature' => 'GL_EXT_gpu_program_parameters',
    'glewImpl' => '__glewProgramEnvParameters4fvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramEnvParametersI4ivNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'params',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glProgramEnvParametersI4ivNV_c',
    'feature' => 'GL_NV_gpu_program4',
    'glewImpl' => '__glewProgramEnvParametersI4ivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramEnvParametersI4uivNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'params',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glProgramEnvParametersI4uivNV_c',
    'feature' => 'GL_NV_gpu_program4',
    'glewImpl' => '__glewProgramEnvParametersI4uivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramLocalParameter4dARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ],
      [
        'w',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewProgramLocalParameter4dARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramLocalParameter4dvARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glProgramLocalParameter4dvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewProgramLocalParameter4dvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramLocalParameter4fARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ],
      [
        'w',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewProgramLocalParameter4fARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramLocalParameter4fvARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramLocalParameter4fvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewProgramLocalParameter4fvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramLocalParameterI4iNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'z',
        'GLint '
      ],
      [
        'w',
        'GLint '
      ]
    ],
    'feature' => 'GL_NV_gpu_program4',
    'glewImpl' => '__glewProgramLocalParameterI4iNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramLocalParameterI4ivNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glProgramLocalParameterI4ivNV_c',
    'feature' => 'GL_NV_gpu_program4',
    'glewImpl' => '__glewProgramLocalParameterI4ivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramLocalParameterI4uiNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLuint '
      ],
      [
        'y',
        'GLuint '
      ],
      [
        'z',
        'GLuint '
      ],
      [
        'w',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_gpu_program4',
    'glewImpl' => '__glewProgramLocalParameterI4uiNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramLocalParameterI4uivNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glProgramLocalParameterI4uivNV_c',
    'feature' => 'GL_NV_gpu_program4',
    'glewImpl' => '__glewProgramLocalParameterI4uivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramLocalParameters4fvEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramLocalParameters4fvEXT_c',
    'feature' => 'GL_EXT_gpu_program_parameters',
    'glewImpl' => '__glewProgramLocalParameters4fvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramLocalParametersI4ivNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'params',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glProgramLocalParametersI4ivNV_c',
    'feature' => 'GL_NV_gpu_program4',
    'glewImpl' => '__glewProgramLocalParametersI4ivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramLocalParametersI4uivNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'params',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glProgramLocalParametersI4uivNV_c',
    'feature' => 'GL_NV_gpu_program4',
    'glewImpl' => '__glewProgramLocalParametersI4uivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramNamedParameter4dNV' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'len',
        'GLsizei '
      ],
      [
        'name',
        'const GLubyte* '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ],
      [
        'w',
        'GLdouble '
      ]
    ],
    'binding_name' => 'glProgramNamedParameter4dNV_c',
    'feature' => 'GL_NV_fragment_program',
    'glewImpl' => '__glewProgramNamedParameter4dNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramNamedParameter4dvNV' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'len',
        'GLsizei '
      ],
      [
        'name',
        'const GLubyte* '
      ],
      [
        'v',
        'const GLdouble * '
      ]
    ],
    'binding_name' => 'glProgramNamedParameter4dvNV_c',
    'feature' => 'GL_NV_fragment_program',
    'glewImpl' => '__glewProgramNamedParameter4dvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramNamedParameter4fNV' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'len',
        'GLsizei '
      ],
      [
        'name',
        'const GLubyte* '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ],
      [
        'w',
        'GLfloat '
      ]
    ],
    'binding_name' => 'glProgramNamedParameter4fNV_c',
    'feature' => 'GL_NV_fragment_program',
    'glewImpl' => '__glewProgramNamedParameter4fNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramNamedParameter4fvNV' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'len',
        'GLsizei '
      ],
      [
        'name',
        'const GLubyte* '
      ],
      [
        'v',
        'const GLfloat * '
      ]
    ],
    'binding_name' => 'glProgramNamedParameter4fvNV_c',
    'feature' => 'GL_NV_fragment_program',
    'glewImpl' => '__glewProgramNamedParameter4fvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramParameter4dNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ],
      [
        'w',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewProgramParameter4dNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramParameter4dvNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glProgramParameter4dvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewProgramParameter4dvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramParameter4fNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ],
      [
        'w',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewProgramParameter4fNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramParameter4fvNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramParameter4fvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewProgramParameter4fvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramParameteri' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'value',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_get_program_binary',
    'glewImpl' => '__glewProgramParameteri',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramParameteriARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'value',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_geometry_shader4',
    'glewImpl' => '__glewProgramParameteriARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramParameteriEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'value',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_geometry_shader4',
    'glewImpl' => '__glewProgramParameteriEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramParameters4dvNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'num',
        'GLsizei '
      ],
      [
        'params',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glProgramParameters4dvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewProgramParameters4dvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramParameters4fvNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'num',
        'GLsizei '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramParameters4fvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewProgramParameters4fvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramPathFragmentInputGenNV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'genMode',
        'GLenum '
      ],
      [
        'components',
        'GLint '
      ],
      [
        'coeffs',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramPathFragmentInputGenNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewProgramPathFragmentInputGenNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramStringARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'len',
        'GLsizei '
      ],
      [
        'string',
        'const void *'
      ]
    ],
    'binding_name' => 'glProgramStringARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewProgramStringARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1d' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform1d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1dv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glProgramUniform1dv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform1dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1f' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform1f',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1fEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform1fEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1fv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniform1fv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform1fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1fvEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniform1fvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform1fvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1i' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform1i',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1i64ARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLint64 '
      ]
    ],
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewProgramUniform1i64ARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1i64NV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLint64EXT '
      ]
    ],
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewProgramUniform1i64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1i64vARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint64* '
      ]
    ],
    'binding_name' => 'glProgramUniform1i64vARB_c',
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewProgramUniform1i64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1i64vNV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint64EXT* '
      ]
    ],
    'binding_name' => 'glProgramUniform1i64vNV_c',
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewProgramUniform1i64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1iEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform1iEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1iv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glProgramUniform1iv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform1iv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1ivEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glProgramUniform1ivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform1ivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1ui' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform1ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1ui64ARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewProgramUniform1ui64ARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1ui64NV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLuint64EXT '
      ]
    ],
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewProgramUniform1ui64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1ui64vARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint64* '
      ]
    ],
    'binding_name' => 'glProgramUniform1ui64vARB_c',
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewProgramUniform1ui64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1ui64vNV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glProgramUniform1ui64vNV_c',
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewProgramUniform1ui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1uiEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform1uiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1uiv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glProgramUniform1uiv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform1uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform1uivEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glProgramUniform1uivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform1uivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2d' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform2d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2dv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glProgramUniform2dv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform2dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2f' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform2f',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2fEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLfloat '
      ],
      [
        'v1',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform2fEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2fv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniform2fv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform2fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2fvEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniform2fvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform2fvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2i' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform2i',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2i64ARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLint64 '
      ],
      [
        'y',
        'GLint64 '
      ]
    ],
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewProgramUniform2i64ARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2i64NV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLint64EXT '
      ],
      [
        'y',
        'GLint64EXT '
      ]
    ],
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewProgramUniform2i64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2i64vARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint64* '
      ]
    ],
    'binding_name' => 'glProgramUniform2i64vARB_c',
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewProgramUniform2i64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2i64vNV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint64EXT* '
      ]
    ],
    'binding_name' => 'glProgramUniform2i64vNV_c',
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewProgramUniform2i64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2iEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLint '
      ],
      [
        'v1',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform2iEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2iv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glProgramUniform2iv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform2iv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2ivEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glProgramUniform2ivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform2ivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2ui' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLuint '
      ],
      [
        'y',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform2ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2ui64ARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLuint64 '
      ],
      [
        'y',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewProgramUniform2ui64ARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2ui64NV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLuint64EXT '
      ],
      [
        'y',
        'GLuint64EXT '
      ]
    ],
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewProgramUniform2ui64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2ui64vARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint64* '
      ]
    ],
    'binding_name' => 'glProgramUniform2ui64vARB_c',
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewProgramUniform2ui64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2ui64vNV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glProgramUniform2ui64vNV_c',
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewProgramUniform2ui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2uiEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLuint '
      ],
      [
        'v1',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform2uiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2uiv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glProgramUniform2uiv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform2uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform2uivEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glProgramUniform2uivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform2uivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3d' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform3d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3dv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glProgramUniform3dv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform3dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3f' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform3f',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3fEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLfloat '
      ],
      [
        'v1',
        'GLfloat '
      ],
      [
        'v2',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform3fEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3fv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniform3fv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform3fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3fvEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniform3fvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform3fvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3i' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'z',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform3i',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3i64ARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLint64 '
      ],
      [
        'y',
        'GLint64 '
      ],
      [
        'z',
        'GLint64 '
      ]
    ],
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewProgramUniform3i64ARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3i64NV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLint64EXT '
      ],
      [
        'y',
        'GLint64EXT '
      ],
      [
        'z',
        'GLint64EXT '
      ]
    ],
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewProgramUniform3i64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3i64vARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint64* '
      ]
    ],
    'binding_name' => 'glProgramUniform3i64vARB_c',
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewProgramUniform3i64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3i64vNV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint64EXT* '
      ]
    ],
    'binding_name' => 'glProgramUniform3i64vNV_c',
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewProgramUniform3i64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3iEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLint '
      ],
      [
        'v1',
        'GLint '
      ],
      [
        'v2',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform3iEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3iv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glProgramUniform3iv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform3iv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3ivEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glProgramUniform3ivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform3ivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3ui' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLuint '
      ],
      [
        'y',
        'GLuint '
      ],
      [
        'z',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform3ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3ui64ARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLuint64 '
      ],
      [
        'y',
        'GLuint64 '
      ],
      [
        'z',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewProgramUniform3ui64ARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3ui64NV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLuint64EXT '
      ],
      [
        'y',
        'GLuint64EXT '
      ],
      [
        'z',
        'GLuint64EXT '
      ]
    ],
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewProgramUniform3ui64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3ui64vARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint64* '
      ]
    ],
    'binding_name' => 'glProgramUniform3ui64vARB_c',
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewProgramUniform3ui64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3ui64vNV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glProgramUniform3ui64vNV_c',
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewProgramUniform3ui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3uiEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLuint '
      ],
      [
        'v1',
        'GLuint '
      ],
      [
        'v2',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform3uiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3uiv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glProgramUniform3uiv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform3uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform3uivEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glProgramUniform3uivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform3uivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4d' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ],
      [
        'w',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform4d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4dv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glProgramUniform4dv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform4dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4f' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ],
      [
        'w',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform4f',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4fEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLfloat '
      ],
      [
        'v1',
        'GLfloat '
      ],
      [
        'v2',
        'GLfloat '
      ],
      [
        'v3',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform4fEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4fv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniform4fv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform4fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4fvEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniform4fvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform4fvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4i' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'z',
        'GLint '
      ],
      [
        'w',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform4i',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4i64ARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLint64 '
      ],
      [
        'y',
        'GLint64 '
      ],
      [
        'z',
        'GLint64 '
      ],
      [
        'w',
        'GLint64 '
      ]
    ],
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewProgramUniform4i64ARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4i64NV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLint64EXT '
      ],
      [
        'y',
        'GLint64EXT '
      ],
      [
        'z',
        'GLint64EXT '
      ],
      [
        'w',
        'GLint64EXT '
      ]
    ],
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewProgramUniform4i64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4i64vARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint64* '
      ]
    ],
    'binding_name' => 'glProgramUniform4i64vARB_c',
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewProgramUniform4i64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4i64vNV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint64EXT* '
      ]
    ],
    'binding_name' => 'glProgramUniform4i64vNV_c',
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewProgramUniform4i64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4iEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLint '
      ],
      [
        'v1',
        'GLint '
      ],
      [
        'v2',
        'GLint '
      ],
      [
        'v3',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform4iEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4iv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glProgramUniform4iv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform4iv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4ivEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glProgramUniform4ivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform4ivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4ui' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLuint '
      ],
      [
        'y',
        'GLuint '
      ],
      [
        'z',
        'GLuint '
      ],
      [
        'w',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform4ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4ui64ARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLuint64 '
      ],
      [
        'y',
        'GLuint64 '
      ],
      [
        'z',
        'GLuint64 '
      ],
      [
        'w',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewProgramUniform4ui64ARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4ui64NV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLuint64EXT '
      ],
      [
        'y',
        'GLuint64EXT '
      ],
      [
        'z',
        'GLuint64EXT '
      ],
      [
        'w',
        'GLuint64EXT '
      ]
    ],
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewProgramUniform4ui64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4ui64vARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint64* '
      ]
    ],
    'binding_name' => 'glProgramUniform4ui64vARB_c',
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewProgramUniform4ui64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4ui64vNV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glProgramUniform4ui64vNV_c',
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewProgramUniform4ui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4uiEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLuint '
      ],
      [
        'v1',
        'GLuint '
      ],
      [
        'v2',
        'GLuint '
      ],
      [
        'v3',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform4uiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4uiv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glProgramUniform4uiv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniform4uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniform4uivEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glProgramUniform4uivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniform4uivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformHandleui64ARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'value',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_ARB_bindless_texture',
    'glewImpl' => '__glewProgramUniformHandleui64ARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformHandleui64NV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'value',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_NV_bindless_texture',
    'glewImpl' => '__glewProgramUniformHandleui64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformHandleui64vARB' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'values',
        'const GLuint64* '
      ]
    ],
    'binding_name' => 'glProgramUniformHandleui64vARB_c',
    'feature' => 'GL_ARB_bindless_texture',
    'glewImpl' => '__glewProgramUniformHandleui64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformHandleui64vNV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'values',
        'const GLuint64* '
      ]
    ],
    'binding_name' => 'glProgramUniformHandleui64vNV_c',
    'feature' => 'GL_NV_bindless_texture',
    'glewImpl' => '__glewProgramUniformHandleui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix2dv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix2dv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniformMatrix2dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix2fv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix2fv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniformMatrix2fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix2fvEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix2fvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniformMatrix2fvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix2x3dv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix2x3dv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniformMatrix2x3dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix2x3fv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix2x3fv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniformMatrix2x3fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix2x3fvEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix2x3fvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniformMatrix2x3fvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix2x4dv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix2x4dv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniformMatrix2x4dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix2x4fv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix2x4fv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniformMatrix2x4fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix2x4fvEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix2x4fvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniformMatrix2x4fvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix3dv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix3dv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniformMatrix3dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix3fv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix3fv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniformMatrix3fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix3fvEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix3fvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniformMatrix3fvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix3x2dv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix3x2dv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniformMatrix3x2dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix3x2fv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix3x2fv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniformMatrix3x2fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix3x2fvEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix3x2fvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniformMatrix3x2fvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix3x4dv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix3x4dv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniformMatrix3x4dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix3x4fv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix3x4fv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniformMatrix3x4fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix3x4fvEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix3x4fvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniformMatrix3x4fvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix4dv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix4dv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniformMatrix4dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix4fv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix4fv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniformMatrix4fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix4fvEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix4fvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniformMatrix4fvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix4x2dv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix4x2dv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniformMatrix4x2dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix4x2fv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix4x2fv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniformMatrix4x2fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix4x2fvEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix4x2fvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniformMatrix4x2fvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix4x3dv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix4x3dv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniformMatrix4x3dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix4x3fv' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix4x3fv_c',
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewProgramUniformMatrix4x3fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformMatrix4x3fvEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glProgramUniformMatrix4x3fvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewProgramUniformMatrix4x3fvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformui64NV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'value',
        'GLuint64EXT '
      ]
    ],
    'feature' => 'GL_NV_shader_buffer_load',
    'glewImpl' => '__glewProgramUniformui64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramUniformui64vNV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glProgramUniformui64vNV_c',
    'feature' => 'GL_NV_shader_buffer_load',
    'glewImpl' => '__glewProgramUniformui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProgramVertexLimitNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'limit',
        'GLint '
      ]
    ],
    'feature' => 'GL_NV_geometry_program4',
    'glewImpl' => '__glewProgramVertexLimitNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProvokingVertex' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_provoking_vertex',
    'glewImpl' => '__glewProvokingVertex',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glProvokingVertexEXT' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_provoking_vertex',
    'glewImpl' => '__glewProvokingVertexEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPushAttrib' => {
    'argdata' => [
      [
        'mask',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPushClientAttrib' => {
    'argdata' => [
      [
        'mask',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPushClientAttribDefaultEXT' => {
    'argdata' => [
      [
        'mask',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewPushClientAttribDefaultEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPushDebugGroup' => {
    'argdata' => [
      [
        'source',
        'GLenum '
      ],
      [
        'id',
        'GLuint '
      ],
      [
        'length',
        'GLsizei '
      ],
      [
        'message',
        'const GLchar * '
      ]
    ],
    'binding_name' => 'glPushDebugGroup_c',
    'feature' => 'GL_KHR_debug',
    'glewImpl' => '__glewPushDebugGroup',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPushGroupMarkerEXT' => {
    'argdata' => [
      [
        'length',
        'GLsizei '
      ],
      [
        'marker',
        'const GLchar* '
      ]
    ],
    'binding_name' => 'glPushGroupMarkerEXT_c',
    'feature' => 'GL_EXT_debug_marker',
    'glewImpl' => '__glewPushGroupMarkerEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPushMatrix' => {
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glPushName' => {
    'argdata' => [
      [
        'name',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glQueryCounter' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_timer_query',
    'glewImpl' => '__glewQueryCounter',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glQueryCounterANGLE' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ANGLE_timer_query',
    'glewImpl' => '__glewQueryCounterANGLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glQueryObjectParameteruiAMD' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'id',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLuint '
      ]
    ],
    'feature' => 'GL_AMD_occlusion_query_event',
    'glewImpl' => '__glewQueryObjectParameteruiAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos2d' => {
    'argdata' => [
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos2dv' => {
    'argdata' => [
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glRasterPos2dv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos2f' => {
    'argdata' => [
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos2fv' => {
    'argdata' => [
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glRasterPos2fv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos2i' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos2iv' => {
    'argdata' => [
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glRasterPos2iv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos2s' => {
    'argdata' => [
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos2sv' => {
    'argdata' => [
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glRasterPos2sv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos3d' => {
    'argdata' => [
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos3dv' => {
    'argdata' => [
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glRasterPos3dv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos3f' => {
    'argdata' => [
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos3fv' => {
    'argdata' => [
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glRasterPos3fv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos3i' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'z',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos3iv' => {
    'argdata' => [
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glRasterPos3iv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos3s' => {
    'argdata' => [
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ],
      [
        'z',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos3sv' => {
    'argdata' => [
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glRasterPos3sv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos4d' => {
    'argdata' => [
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ],
      [
        'w',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos4dv' => {
    'argdata' => [
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glRasterPos4dv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos4f' => {
    'argdata' => [
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ],
      [
        'w',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos4fv' => {
    'argdata' => [
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glRasterPos4fv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos4i' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'z',
        'GLint '
      ],
      [
        'w',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos4iv' => {
    'argdata' => [
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glRasterPos4iv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos4s' => {
    'argdata' => [
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ],
      [
        'z',
        'GLshort '
      ],
      [
        'w',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterPos4sv' => {
    'argdata' => [
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glRasterPos4sv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRasterSamplesEXT' => {
    'argdata' => [
      [
        'samples',
        'GLuint '
      ],
      [
        'fixedsamplelocations',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_EXT_raster_multisample',
    'glewImpl' => '__glewRasterSamplesEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReadBuffer' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReadBufferIndexedEXT' => {
    'argdata' => [
      [
        'src',
        'GLenum '
      ],
      [
        'index',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_multiview_draw_buffers',
    'glewImpl' => '__glewReadBufferIndexedEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReadBufferRegion' => {
    'argdata' => [
      [
        'region',
        'GLuint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_KTX_buffer_region',
    'glewImpl' => '__glewReadBufferRegion',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReadPixels' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'void *'
      ]
    ],
    'binding_name' => 'glReadPixels_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReadVideoPixelsSUN' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'void* '
      ]
    ],
    'binding_name' => 'glReadVideoPixelsSUN_c',
    'feature' => 'GL_SUN_read_video_pixels',
    'glewImpl' => '__glewReadVideoPixelsSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReadnPixels' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'data',
        'void *'
      ]
    ],
    'binding_name' => 'glReadnPixels_c',
    'feature' => 'GL_KHR_robustness',
    'glewImpl' => '__glewReadnPixels',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReadnPixelsARB' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'data',
        'void* '
      ]
    ],
    'binding_name' => 'glReadnPixelsARB_c',
    'feature' => 'GL_ARB_robustness',
    'glewImpl' => '__glewReadnPixelsARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRectd' => {
    'argdata' => [
      [
        'x1',
        'GLdouble '
      ],
      [
        'y1',
        'GLdouble '
      ],
      [
        'x2',
        'GLdouble '
      ],
      [
        'y2',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRectdv' => {
    'argdata' => [
      [
        'v1',
        'const GLdouble *'
      ],
      [
        'v2',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glRectdv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRectf' => {
    'argdata' => [
      [
        'x1',
        'GLfloat '
      ],
      [
        'y1',
        'GLfloat '
      ],
      [
        'x2',
        'GLfloat '
      ],
      [
        'y2',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRectfv' => {
    'argdata' => [
      [
        'v1',
        'const GLfloat *'
      ],
      [
        'v2',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glRectfv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRecti' => {
    'argdata' => [
      [
        'x1',
        'GLint '
      ],
      [
        'y1',
        'GLint '
      ],
      [
        'x2',
        'GLint '
      ],
      [
        'y2',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRectiv' => {
    'argdata' => [
      [
        'v1',
        'const GLint *'
      ],
      [
        'v2',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glRectiv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRects' => {
    'argdata' => [
      [
        'x1',
        'GLshort '
      ],
      [
        'y1',
        'GLshort '
      ],
      [
        'x2',
        'GLshort '
      ],
      [
        'y2',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRectsv' => {
    'argdata' => [
      [
        'v1',
        'const GLshort *'
      ],
      [
        'v2',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glRectsv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReferencePlaneSGIX' => {
    'argdata' => [
      [
        'equation',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glReferencePlaneSGIX_c',
    'feature' => 'GL_SGIX_reference_plane',
    'glewImpl' => '__glewReferencePlaneSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReleaseKeyedMutexWin32EXT' => {
    'argdata' => [
      [
        'memory',
        'GLuint '
      ],
      [
        'key',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_EXT_win32_keyed_mutex',
    'glewImpl' => '__glewReleaseKeyedMutexWin32EXT',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glReleaseShaderCompiler' => {
    'feature' => 'GL_ARB_ES2_compatibility',
    'glewImpl' => '__glewReleaseShaderCompiler',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRenderGpuMaskNV' => {
    'argdata' => [
      [
        'mask',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_NV_gpu_multicast',
    'glewImpl' => '__glewRenderGpuMaskNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRenderMode' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'GLint'
  },
  'glRenderbufferStorage' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_framebuffer_object',
    'glewImpl' => '__glewRenderbufferStorage',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRenderbufferStorageEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_framebuffer_object',
    'glewImpl' => '__glewRenderbufferStorageEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRenderbufferStorageMultisample' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_framebuffer_object',
    'glewImpl' => '__glewRenderbufferStorageMultisample',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRenderbufferStorageMultisampleANGLE' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ANGLE_framebuffer_multisample',
    'glewImpl' => '__glewRenderbufferStorageMultisampleANGLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRenderbufferStorageMultisampleAPPLE' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_APPLE_framebuffer_multisample',
    'glewImpl' => '__glewRenderbufferStorageMultisampleAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRenderbufferStorageMultisampleCoverageNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'coverageSamples',
        'GLsizei '
      ],
      [
        'colorSamples',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NV_framebuffer_multisample_coverage',
    'glewImpl' => '__glewRenderbufferStorageMultisampleCoverageNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRenderbufferStorageMultisampleEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_framebuffer_multisample',
    'glewImpl' => '__glewRenderbufferStorageMultisampleEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRenderbufferStorageMultisampleNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NV_framebuffer_multisample',
    'glewImpl' => '__glewRenderbufferStorageMultisampleNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodePointerSUN' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glReplacementCodePointerSUN_c',
    'feature' => 'GL_SUN_triangle_list',
    'glewImpl' => '__glewReplacementCodePointerSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeubSUN' => {
    'argdata' => [
      [
        'code',
        'GLubyte '
      ]
    ],
    'feature' => 'GL_SUN_triangle_list',
    'glewImpl' => '__glewReplacementCodeubSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeubvSUN' => {
    'argdata' => [
      [
        'code',
        'const GLubyte* '
      ]
    ],
    'binding_name' => 'glReplacementCodeubvSUN_c',
    'feature' => 'GL_SUN_triangle_list',
    'glewImpl' => '__glewReplacementCodeubvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeuiColor3fVertex3fSUN' => {
    'argdata' => [
      [
        'rc',
        'GLuint '
      ],
      [
        'r',
        'GLfloat '
      ],
      [
        'g',
        'GLfloat '
      ],
      [
        'b',
        'GLfloat '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewReplacementCodeuiColor3fVertex3fSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeuiColor3fVertex3fvSUN' => {
    'argdata' => [
      [
        'rc',
        'const GLuint* '
      ],
      [
        'c',
        'const GLfloat *'
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glReplacementCodeuiColor3fVertex3fvSUN_c',
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewReplacementCodeuiColor3fVertex3fvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeuiColor4fNormal3fVertex3fSUN' => {
    'argdata' => [
      [
        'rc',
        'GLuint '
      ],
      [
        'r',
        'GLfloat '
      ],
      [
        'g',
        'GLfloat '
      ],
      [
        'b',
        'GLfloat '
      ],
      [
        'a',
        'GLfloat '
      ],
      [
        'nx',
        'GLfloat '
      ],
      [
        'ny',
        'GLfloat '
      ],
      [
        'nz',
        'GLfloat '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewReplacementCodeuiColor4fNormal3fVertex3fSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeuiColor4fNormal3fVertex3fvSUN' => {
    'argdata' => [
      [
        'rc',
        'const GLuint* '
      ],
      [
        'c',
        'const GLfloat *'
      ],
      [
        'n',
        'const GLfloat *'
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glReplacementCodeuiColor4fNormal3fVertex3fvSUN_c',
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewReplacementCodeuiColor4fNormal3fVertex3fvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeuiColor4ubVertex3fSUN' => {
    'argdata' => [
      [
        'rc',
        'GLuint '
      ],
      [
        'r',
        'GLubyte '
      ],
      [
        'g',
        'GLubyte '
      ],
      [
        'b',
        'GLubyte '
      ],
      [
        'a',
        'GLubyte '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewReplacementCodeuiColor4ubVertex3fSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeuiColor4ubVertex3fvSUN' => {
    'argdata' => [
      [
        'rc',
        'const GLuint* '
      ],
      [
        'c',
        'const GLubyte *'
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glReplacementCodeuiColor4ubVertex3fvSUN_c',
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewReplacementCodeuiColor4ubVertex3fvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeuiNormal3fVertex3fSUN' => {
    'argdata' => [
      [
        'rc',
        'GLuint '
      ],
      [
        'nx',
        'GLfloat '
      ],
      [
        'ny',
        'GLfloat '
      ],
      [
        'nz',
        'GLfloat '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewReplacementCodeuiNormal3fVertex3fSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeuiNormal3fVertex3fvSUN' => {
    'argdata' => [
      [
        'rc',
        'const GLuint* '
      ],
      [
        'n',
        'const GLfloat *'
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glReplacementCodeuiNormal3fVertex3fvSUN_c',
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewReplacementCodeuiNormal3fVertex3fvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeuiSUN' => {
    'argdata' => [
      [
        'code',
        'GLuint '
      ]
    ],
    'feature' => 'GL_SUN_triangle_list',
    'glewImpl' => '__glewReplacementCodeuiSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN' => {
    'argdata' => [
      [
        'rc',
        'GLuint '
      ],
      [
        's',
        'GLfloat '
      ],
      [
        't',
        'GLfloat '
      ],
      [
        'r',
        'GLfloat '
      ],
      [
        'g',
        'GLfloat '
      ],
      [
        'b',
        'GLfloat '
      ],
      [
        'a',
        'GLfloat '
      ],
      [
        'nx',
        'GLfloat '
      ],
      [
        'ny',
        'GLfloat '
      ],
      [
        'nz',
        'GLfloat '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN' => {
    'argdata' => [
      [
        'rc',
        'const GLuint* '
      ],
      [
        'tc',
        'const GLfloat *'
      ],
      [
        'c',
        'const GLfloat *'
      ],
      [
        'n',
        'const GLfloat *'
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_c',
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN' => {
    'argdata' => [
      [
        'rc',
        'GLuint '
      ],
      [
        's',
        'GLfloat '
      ],
      [
        't',
        'GLfloat '
      ],
      [
        'nx',
        'GLfloat '
      ],
      [
        'ny',
        'GLfloat '
      ],
      [
        'nz',
        'GLfloat '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewReplacementCodeuiTexCoord2fNormal3fVertex3fSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN' => {
    'argdata' => [
      [
        'rc',
        'const GLuint* '
      ],
      [
        'tc',
        'const GLfloat *'
      ],
      [
        'n',
        'const GLfloat *'
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_c',
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeuiTexCoord2fVertex3fSUN' => {
    'argdata' => [
      [
        'rc',
        'GLuint '
      ],
      [
        's',
        'GLfloat '
      ],
      [
        't',
        'GLfloat '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewReplacementCodeuiTexCoord2fVertex3fSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeuiTexCoord2fVertex3fvSUN' => {
    'argdata' => [
      [
        'rc',
        'const GLuint* '
      ],
      [
        'tc',
        'const GLfloat *'
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glReplacementCodeuiTexCoord2fVertex3fvSUN_c',
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewReplacementCodeuiTexCoord2fVertex3fvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeuiVertex3fSUN' => {
    'argdata' => [
      [
        'rc',
        'GLuint '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewReplacementCodeuiVertex3fSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeuiVertex3fvSUN' => {
    'argdata' => [
      [
        'rc',
        'const GLuint* '
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glReplacementCodeuiVertex3fvSUN_c',
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewReplacementCodeuiVertex3fvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeuivSUN' => {
    'argdata' => [
      [
        'code',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glReplacementCodeuivSUN_c',
    'feature' => 'GL_SUN_triangle_list',
    'glewImpl' => '__glewReplacementCodeuivSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeusSUN' => {
    'argdata' => [
      [
        'code',
        'GLushort '
      ]
    ],
    'feature' => 'GL_SUN_triangle_list',
    'glewImpl' => '__glewReplacementCodeusSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glReplacementCodeusvSUN' => {
    'argdata' => [
      [
        'code',
        'const GLushort* '
      ]
    ],
    'binding_name' => 'glReplacementCodeusvSUN_c',
    'feature' => 'GL_SUN_triangle_list',
    'glewImpl' => '__glewReplacementCodeusvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRequestResidentProgramsNV' => {
    'argdata' => [
      [
        'n',
        'GLsizei '
      ],
      [
        'ids',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glRequestResidentProgramsNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewRequestResidentProgramsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glResetHistogram' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewResetHistogram',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glResetHistogramEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_histogram',
    'glewImpl' => '__glewResetHistogramEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glResetMinmax' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewResetMinmax',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glResetMinmaxEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_histogram',
    'glewImpl' => '__glewResetMinmaxEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glResizeBuffersMESA' => {
    'feature' => 'GL_MESA_resize_buffers',
    'glewImpl' => '__glewResizeBuffersMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glResolveMultisampleFramebufferAPPLE' => {
    'feature' => 'GL_APPLE_framebuffer_multisample',
    'glewImpl' => '__glewResolveMultisampleFramebufferAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glResumeTransformFeedback' => {
    'feature' => 'GL_ARB_transform_feedback2',
    'glewImpl' => '__glewResumeTransformFeedback',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glResumeTransformFeedbackNV' => {
    'feature' => 'GL_NV_transform_feedback2',
    'glewImpl' => '__glewResumeTransformFeedbackNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRotated' => {
    'argdata' => [
      [
        'angle',
        'GLdouble '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRotatef' => {
    'argdata' => [
      [
        'angle',
        'GLfloat '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glRotatex' => {
    'argdata' => [
      [
        'angle',
        'GLfixed '
      ],
      [
        'x',
        'GLfixed '
      ],
      [
        'y',
        'GLfixed '
      ],
      [
        'z',
        'GLfixed '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewRotatex',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSampleCoverage' => {
    'argdata' => [
      [
        'value',
        'GLclampf '
      ],
      [
        'invert',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_VERSION_1_3',
    'glewImpl' => '__glewSampleCoverage',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSampleCoverageARB' => {
    'argdata' => [
      [
        'value',
        'GLclampf '
      ],
      [
        'invert',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_ARB_multisample',
    'glewImpl' => '__glewSampleCoverageARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSampleCoveragex' => {
    'argdata' => [
      [
        'value',
        'GLclampx '
      ],
      [
        'invert',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewSampleCoveragex',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSampleMapATI' => {
    'argdata' => [
      [
        'dst',
        'GLuint '
      ],
      [
        'interp',
        'GLuint '
      ],
      [
        'swizzle',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ATI_fragment_shader',
    'glewImpl' => '__glewSampleMapATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSampleMaskEXT' => {
    'argdata' => [
      [
        'value',
        'GLclampf '
      ],
      [
        'invert',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_EXT_multisample',
    'glewImpl' => '__glewSampleMaskEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSampleMaskIndexedNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'mask',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_NV_explicit_multisample',
    'glewImpl' => '__glewSampleMaskIndexedNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSampleMaskSGIS' => {
    'argdata' => [
      [
        'value',
        'GLclampf '
      ],
      [
        'invert',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_SGIS_multisample',
    'glewImpl' => '__glewSampleMaskSGIS',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSampleMaski' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'mask',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_ARB_texture_multisample',
    'glewImpl' => '__glewSampleMaski',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSamplePatternEXT' => {
    'argdata' => [
      [
        'pattern',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_multisample',
    'glewImpl' => '__glewSamplePatternEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSamplePatternSGIS' => {
    'argdata' => [
      [
        'pattern',
        'GLenum '
      ]
    ],
    'feature' => 'GL_SGIS_multisample',
    'glewImpl' => '__glewSamplePatternSGIS',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSamplerParameterIiv' => {
    'argdata' => [
      [
        'sampler',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glSamplerParameterIiv_c',
    'feature' => 'GL_ARB_sampler_objects',
    'glewImpl' => '__glewSamplerParameterIiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSamplerParameterIuiv' => {
    'argdata' => [
      [
        'sampler',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glSamplerParameterIuiv_c',
    'feature' => 'GL_ARB_sampler_objects',
    'glewImpl' => '__glewSamplerParameterIuiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSamplerParameterf' => {
    'argdata' => [
      [
        'sampler',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_sampler_objects',
    'glewImpl' => '__glewSamplerParameterf',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSamplerParameterfv' => {
    'argdata' => [
      [
        'sampler',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glSamplerParameterfv_c',
    'feature' => 'GL_ARB_sampler_objects',
    'glewImpl' => '__glewSamplerParameterfv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSamplerParameteri' => {
    'argdata' => [
      [
        'sampler',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_sampler_objects',
    'glewImpl' => '__glewSamplerParameteri',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSamplerParameteriv' => {
    'argdata' => [
      [
        'sampler',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glSamplerParameteriv_c',
    'feature' => 'GL_ARB_sampler_objects',
    'glewImpl' => '__glewSamplerParameteriv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glScaled' => {
    'argdata' => [
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glScalef' => {
    'argdata' => [
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glScalex' => {
    'argdata' => [
      [
        'x',
        'GLfixed '
      ],
      [
        'y',
        'GLfixed '
      ],
      [
        'z',
        'GLfixed '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewScalex',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glScissor' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glScissorArrayv' => {
    'argdata' => [
      [
        'first',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'v',
        'const GLint * '
      ]
    ],
    'binding_name' => 'glScissorArrayv_c',
    'feature' => 'GL_ARB_viewport_array',
    'glewImpl' => '__glewScissorArrayv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glScissorArrayvNV' => {
    'argdata' => [
      [
        'first',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'v',
        'const GLint * '
      ]
    ],
    'binding_name' => 'glScissorArrayvNV_c',
    'feature' => 'GL_NV_viewport_array',
    'glewImpl' => '__glewScissorArrayvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glScissorIndexed' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'left',
        'GLint '
      ],
      [
        'bottom',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_viewport_array',
    'glewImpl' => '__glewScissorIndexed',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glScissorIndexedNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'left',
        'GLint '
      ],
      [
        'bottom',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NV_viewport_array',
    'glewImpl' => '__glewScissorIndexedNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glScissorIndexedv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLint * '
      ]
    ],
    'binding_name' => 'glScissorIndexedv_c',
    'feature' => 'GL_ARB_viewport_array',
    'glewImpl' => '__glewScissorIndexedv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glScissorIndexedvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLint * '
      ]
    ],
    'binding_name' => 'glScissorIndexedvNV_c',
    'feature' => 'GL_NV_viewport_array',
    'glewImpl' => '__glewScissorIndexedvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3b' => {
    'argdata' => [
      [
        'red',
        'GLbyte '
      ],
      [
        'green',
        'GLbyte '
      ],
      [
        'blue',
        'GLbyte '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewSecondaryColor3b',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3bEXT' => {
    'argdata' => [
      [
        'red',
        'GLbyte '
      ],
      [
        'green',
        'GLbyte '
      ],
      [
        'blue',
        'GLbyte '
      ]
    ],
    'feature' => 'GL_EXT_secondary_color',
    'glewImpl' => '__glewSecondaryColor3bEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3bv' => {
    'argdata' => [
      [
        'v',
        'const GLbyte *'
      ]
    ],
    'binding_name' => 'glSecondaryColor3bv_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewSecondaryColor3bv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3bvEXT' => {
    'argdata' => [
      [
        'v',
        'const GLbyte *'
      ]
    ],
    'binding_name' => 'glSecondaryColor3bvEXT_c',
    'feature' => 'GL_EXT_secondary_color',
    'glewImpl' => '__glewSecondaryColor3bvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3d' => {
    'argdata' => [
      [
        'red',
        'GLdouble '
      ],
      [
        'green',
        'GLdouble '
      ],
      [
        'blue',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewSecondaryColor3d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3dEXT' => {
    'argdata' => [
      [
        'red',
        'GLdouble '
      ],
      [
        'green',
        'GLdouble '
      ],
      [
        'blue',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_EXT_secondary_color',
    'glewImpl' => '__glewSecondaryColor3dEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3dv' => {
    'argdata' => [
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glSecondaryColor3dv_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewSecondaryColor3dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3dvEXT' => {
    'argdata' => [
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glSecondaryColor3dvEXT_c',
    'feature' => 'GL_EXT_secondary_color',
    'glewImpl' => '__glewSecondaryColor3dvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3f' => {
    'argdata' => [
      [
        'red',
        'GLfloat '
      ],
      [
        'green',
        'GLfloat '
      ],
      [
        'blue',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewSecondaryColor3f',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3fEXT' => {
    'argdata' => [
      [
        'red',
        'GLfloat '
      ],
      [
        'green',
        'GLfloat '
      ],
      [
        'blue',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_secondary_color',
    'glewImpl' => '__glewSecondaryColor3fEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3fv' => {
    'argdata' => [
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glSecondaryColor3fv_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewSecondaryColor3fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3fvEXT' => {
    'argdata' => [
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glSecondaryColor3fvEXT_c',
    'feature' => 'GL_EXT_secondary_color',
    'glewImpl' => '__glewSecondaryColor3fvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3hNV' => {
    'argdata' => [
      [
        'red',
        'GLhalf '
      ],
      [
        'green',
        'GLhalf '
      ],
      [
        'blue',
        'GLhalf '
      ]
    ],
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewSecondaryColor3hNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3hvNV' => {
    'argdata' => [
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glSecondaryColor3hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewSecondaryColor3hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3i' => {
    'argdata' => [
      [
        'red',
        'GLint '
      ],
      [
        'green',
        'GLint '
      ],
      [
        'blue',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewSecondaryColor3i',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3iEXT' => {
    'argdata' => [
      [
        'red',
        'GLint '
      ],
      [
        'green',
        'GLint '
      ],
      [
        'blue',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_secondary_color',
    'glewImpl' => '__glewSecondaryColor3iEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3iv' => {
    'argdata' => [
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glSecondaryColor3iv_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewSecondaryColor3iv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3ivEXT' => {
    'argdata' => [
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glSecondaryColor3ivEXT_c',
    'feature' => 'GL_EXT_secondary_color',
    'glewImpl' => '__glewSecondaryColor3ivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3s' => {
    'argdata' => [
      [
        'red',
        'GLshort '
      ],
      [
        'green',
        'GLshort '
      ],
      [
        'blue',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewSecondaryColor3s',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3sEXT' => {
    'argdata' => [
      [
        'red',
        'GLshort '
      ],
      [
        'green',
        'GLshort '
      ],
      [
        'blue',
        'GLshort '
      ]
    ],
    'feature' => 'GL_EXT_secondary_color',
    'glewImpl' => '__glewSecondaryColor3sEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3sv' => {
    'argdata' => [
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glSecondaryColor3sv_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewSecondaryColor3sv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3svEXT' => {
    'argdata' => [
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glSecondaryColor3svEXT_c',
    'feature' => 'GL_EXT_secondary_color',
    'glewImpl' => '__glewSecondaryColor3svEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3ub' => {
    'argdata' => [
      [
        'red',
        'GLubyte '
      ],
      [
        'green',
        'GLubyte '
      ],
      [
        'blue',
        'GLubyte '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewSecondaryColor3ub',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3ubEXT' => {
    'argdata' => [
      [
        'red',
        'GLubyte '
      ],
      [
        'green',
        'GLubyte '
      ],
      [
        'blue',
        'GLubyte '
      ]
    ],
    'feature' => 'GL_EXT_secondary_color',
    'glewImpl' => '__glewSecondaryColor3ubEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3ubv' => {
    'argdata' => [
      [
        'v',
        'const GLubyte *'
      ]
    ],
    'binding_name' => 'glSecondaryColor3ubv_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewSecondaryColor3ubv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3ubvEXT' => {
    'argdata' => [
      [
        'v',
        'const GLubyte *'
      ]
    ],
    'binding_name' => 'glSecondaryColor3ubvEXT_c',
    'feature' => 'GL_EXT_secondary_color',
    'glewImpl' => '__glewSecondaryColor3ubvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3ui' => {
    'argdata' => [
      [
        'red',
        'GLuint '
      ],
      [
        'green',
        'GLuint '
      ],
      [
        'blue',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewSecondaryColor3ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3uiEXT' => {
    'argdata' => [
      [
        'red',
        'GLuint '
      ],
      [
        'green',
        'GLuint '
      ],
      [
        'blue',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_secondary_color',
    'glewImpl' => '__glewSecondaryColor3uiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3uiv' => {
    'argdata' => [
      [
        'v',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glSecondaryColor3uiv_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewSecondaryColor3uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3uivEXT' => {
    'argdata' => [
      [
        'v',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glSecondaryColor3uivEXT_c',
    'feature' => 'GL_EXT_secondary_color',
    'glewImpl' => '__glewSecondaryColor3uivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3us' => {
    'argdata' => [
      [
        'red',
        'GLushort '
      ],
      [
        'green',
        'GLushort '
      ],
      [
        'blue',
        'GLushort '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewSecondaryColor3us',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3usEXT' => {
    'argdata' => [
      [
        'red',
        'GLushort '
      ],
      [
        'green',
        'GLushort '
      ],
      [
        'blue',
        'GLushort '
      ]
    ],
    'feature' => 'GL_EXT_secondary_color',
    'glewImpl' => '__glewSecondaryColor3usEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3usv' => {
    'argdata' => [
      [
        'v',
        'const GLushort *'
      ]
    ],
    'binding_name' => 'glSecondaryColor3usv_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewSecondaryColor3usv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColor3usvEXT' => {
    'argdata' => [
      [
        'v',
        'const GLushort *'
      ]
    ],
    'binding_name' => 'glSecondaryColor3usvEXT_c',
    'feature' => 'GL_EXT_secondary_color',
    'glewImpl' => '__glewSecondaryColor3usvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColorFormatNV' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NV_vertex_buffer_unified_memory',
    'glewImpl' => '__glewSecondaryColorFormatNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColorP3ui' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'color',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewSecondaryColorP3ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColorP3uiv' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'color',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glSecondaryColorP3uiv_c',
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewSecondaryColorP3uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColorPointer' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glSecondaryColorPointer_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewSecondaryColorPointer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColorPointerEXT' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glSecondaryColorPointerEXT_c',
    'feature' => 'GL_EXT_secondary_color',
    'glewImpl' => '__glewSecondaryColorPointerEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSecondaryColorPointerListIBM' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLint '
      ],
      [
        'pointer',
        'const void** '
      ],
      [
        'ptrstride',
        'GLint '
      ]
    ],
    'binding_name' => 'glSecondaryColorPointerListIBM_c',
    'feature' => 'GL_IBM_vertex_array_lists',
    'glewImpl' => '__glewSecondaryColorPointerListIBM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSelectBuffer' => {
    'argdata' => [
      [
        'size',
        'GLsizei '
      ],
      [
        'buffer',
        'GLuint *'
      ]
    ],
    'binding_name' => 'glSelectBuffer_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSelectPerfMonitorCountersAMD' => {
    'argdata' => [
      [
        'monitor',
        'GLuint '
      ],
      [
        'enable',
        'GLboolean '
      ],
      [
        'group',
        'GLuint '
      ],
      [
        'numCounters',
        'GLint '
      ],
      [
        'counterList',
        'GLuint* '
      ]
    ],
    'binding_name' => 'glSelectPerfMonitorCountersAMD_c',
    'feature' => 'GL_AMD_performance_monitor',
    'glewImpl' => '__glewSelectPerfMonitorCountersAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSelectTextureCoordSetSGIS' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_SGIS_multitexture',
    'glewImpl' => '__glewSelectTextureCoordSetSGIS',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSelectTextureSGIS' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_SGIS_multitexture',
    'glewImpl' => '__glewSelectTextureSGIS',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSelectTextureTransformSGIS' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_SGIS_multitexture',
    'glewImpl' => '__glewSelectTextureTransformSGIS',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSemaphoreParameterui64vEXT' => {
    'argdata' => [
      [
        'semaphore',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLuint64* '
      ]
    ],
    'binding_name' => 'glSemaphoreParameterui64vEXT_c',
    'feature' => 'GL_EXT_semaphore',
    'glewImpl' => '__glewSemaphoreParameterui64vEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSeparableFilter2D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'row',
        'const void *'
      ],
      [
        'column',
        'const void *'
      ]
    ],
    'binding_name' => 'glSeparableFilter2D_c',
    'feature' => 'GL_ARB_imaging',
    'glewImpl' => '__glewSeparableFilter2D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSeparableFilter2DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'row',
        'const void *'
      ],
      [
        'column',
        'const void *'
      ]
    ],
    'binding_name' => 'glSeparableFilter2DEXT_c',
    'feature' => 'GL_EXT_convolution',
    'glewImpl' => '__glewSeparableFilter2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSetFenceAPPLE' => {
    'argdata' => [
      [
        'fence',
        'GLuint '
      ]
    ],
    'feature' => 'GL_APPLE_fence',
    'glewImpl' => '__glewSetFenceAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSetFenceNV' => {
    'argdata' => [
      [
        'fence',
        'GLuint '
      ],
      [
        'condition',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_fence',
    'glewImpl' => '__glewSetFenceNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSetFragmentShaderConstantATI' => {
    'argdata' => [
      [
        'dst',
        'GLuint '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glSetFragmentShaderConstantATI_c',
    'feature' => 'GL_ATI_fragment_shader',
    'glewImpl' => '__glewSetFragmentShaderConstantATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSetInvariantEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'addr',
        'void *'
      ]
    ],
    'binding_name' => 'glSetInvariantEXT_c',
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewSetInvariantEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSetLocalConstantEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'addr',
        'void *'
      ]
    ],
    'binding_name' => 'glSetLocalConstantEXT_c',
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewSetLocalConstantEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSetMultisamplefvAMD' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'val',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glSetMultisamplefvAMD_c',
    'feature' => 'GL_AMD_sample_positions',
    'glewImpl' => '__glewSetMultisamplefvAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glShadeModel' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glShaderBinary' => {
    'argdata' => [
      [
        'count',
        'GLsizei '
      ],
      [
        'shaders',
        'const GLuint* '
      ],
      [
        'binaryformat',
        'GLenum '
      ],
      [
        'binary',
        'const void*'
      ],
      [
        'length',
        'GLsizei '
      ]
    ],
    'binding_name' => 'glShaderBinary_c',
    'feature' => 'GL_ARB_ES2_compatibility',
    'glewImpl' => '__glewShaderBinary',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glShaderOp1EXT' => {
    'argdata' => [
      [
        'op',
        'GLenum '
      ],
      [
        'res',
        'GLuint '
      ],
      [
        'arg1',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewShaderOp1EXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glShaderOp2EXT' => {
    'argdata' => [
      [
        'op',
        'GLenum '
      ],
      [
        'res',
        'GLuint '
      ],
      [
        'arg1',
        'GLuint '
      ],
      [
        'arg2',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewShaderOp2EXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glShaderOp3EXT' => {
    'argdata' => [
      [
        'op',
        'GLenum '
      ],
      [
        'res',
        'GLuint '
      ],
      [
        'arg1',
        'GLuint '
      ],
      [
        'arg2',
        'GLuint '
      ],
      [
        'arg3',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewShaderOp3EXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glShaderSource' => {
    'argdata' => [
      [
        'shader',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'string',
        'const GLchar *const* '
      ],
      [
        'length',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glShaderSource_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewShaderSource',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glShaderSourceARB' => {
    'argdata' => [
      [
        'shaderObj',
        'GLhandleARB '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'string',
        'const GLcharARB ** '
      ],
      [
        'length',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glShaderSourceARB_c',
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewShaderSourceARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glShaderStorageBlockBinding' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'storageBlockIndex',
        'GLuint '
      ],
      [
        'storageBlockBinding',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_shader_storage_buffer_object',
    'glewImpl' => '__glewShaderStorageBlockBinding',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSharpenTexFuncSGIS' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'points',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glSharpenTexFuncSGIS_c',
    'feature' => 'GL_SGIS_sharpen_texture',
    'glewImpl' => '__glewSharpenTexFuncSGIS',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSignalSemaphoreEXT' => {
    'argdata' => [
      [
        'semaphore',
        'GLuint '
      ],
      [
        'numBufferBarriers',
        'GLuint '
      ],
      [
        'buffers',
        'const GLuint* '
      ],
      [
        'numTextureBarriers',
        'GLuint '
      ],
      [
        'textures',
        'const GLuint *'
      ],
      [
        'dstLayouts',
        'const GLenum *'
      ]
    ],
    'binding_name' => 'glSignalSemaphoreEXT_c',
    'feature' => 'GL_EXT_semaphore',
    'glewImpl' => '__glewSignalSemaphoreEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSignalVkFenceNV' => {
    'argdata' => [
      [
        'vkFence',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_NV_draw_vulkan_image',
    'glewImpl' => '__glewSignalVkFenceNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSignalVkSemaphoreNV' => {
    'argdata' => [
      [
        'vkSemaphore',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_NV_draw_vulkan_image',
    'glewImpl' => '__glewSignalVkSemaphoreNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSpecializeShader' => {
    'argdata' => [
      [
        'shader',
        'GLuint '
      ],
      [
        'pEntryPoint',
        'const GLchar *'
      ],
      [
        'numSpecializationConstants',
        'GLuint '
      ],
      [
        'pConstantIndex',
        'const GLuint *'
      ],
      [
        'pConstantValue',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glSpecializeShader_c',
    'feature' => 'GL_VERSION_4_6',
    'glewImpl' => '__glewSpecializeShader',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSpecializeShaderARB' => {
    'argdata' => [
      [
        'shader',
        'GLuint '
      ],
      [
        'pEntryPoint',
        'const GLchar* '
      ],
      [
        'numSpecializationConstants',
        'GLuint '
      ],
      [
        'pConstantIndex',
        'const GLuint* '
      ],
      [
        'pConstantValue',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glSpecializeShaderARB_c',
    'feature' => 'GL_ARB_gl_spirv',
    'glewImpl' => '__glewSpecializeShaderARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSpriteParameterfSGIX' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SGIX_sprite',
    'glewImpl' => '__glewSpriteParameterfSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSpriteParameterfvSGIX' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glSpriteParameterfvSGIX_c',
    'feature' => 'GL_SGIX_sprite',
    'glewImpl' => '__glewSpriteParameterfvSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSpriteParameteriSGIX' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_SGIX_sprite',
    'glewImpl' => '__glewSpriteParameteriSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSpriteParameterivSGIX' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'GLint* '
      ]
    ],
    'binding_name' => 'glSpriteParameterivSGIX_c',
    'feature' => 'GL_SGIX_sprite',
    'glewImpl' => '__glewSpriteParameterivSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStartTilingQCOM' => {
    'argdata' => [
      [
        'x',
        'GLuint '
      ],
      [
        'y',
        'GLuint '
      ],
      [
        'width',
        'GLuint '
      ],
      [
        'height',
        'GLuint '
      ],
      [
        'preserveMask',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_QCOM_tiled_rendering',
    'glewImpl' => '__glewStartTilingQCOM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStateCaptureNV' => {
    'argdata' => [
      [
        'state',
        'GLuint '
      ],
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_command_list',
    'glewImpl' => '__glewStateCaptureNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStencilFillPathInstancedNV' => {
    'argdata' => [
      [
        'numPaths',
        'GLsizei '
      ],
      [
        'pathNameType',
        'GLenum '
      ],
      [
        'paths',
        'const void *'
      ],
      [
        'pathBase',
        'GLuint '
      ],
      [
        'fillMode',
        'GLenum '
      ],
      [
        'mask',
        'GLuint '
      ],
      [
        'transformType',
        'GLenum '
      ],
      [
        'transformValues',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glStencilFillPathInstancedNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewStencilFillPathInstancedNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStencilFillPathNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'fillMode',
        'GLenum '
      ],
      [
        'mask',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewStencilFillPathNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStencilFunc' => {
    'argdata' => [
      [
        'func',
        'GLenum '
      ],
      [
        'ref',
        'GLint '
      ],
      [
        'mask',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStencilFuncSeparate' => {
    'argdata' => [
      [
        'frontfunc',
        'GLenum '
      ],
      [
        'backfunc',
        'GLenum '
      ],
      [
        'ref',
        'GLint '
      ],
      [
        'mask',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewStencilFuncSeparate',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStencilFuncSeparateATI' => {
    'argdata' => [
      [
        'frontfunc',
        'GLenum '
      ],
      [
        'backfunc',
        'GLenum '
      ],
      [
        'ref',
        'GLint '
      ],
      [
        'mask',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ATI_separate_stencil',
    'glewImpl' => '__glewStencilFuncSeparateATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStencilMask' => {
    'argdata' => [
      [
        'mask',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStencilMaskSeparate' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'mask',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewStencilMaskSeparate',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStencilOp' => {
    'argdata' => [
      [
        'fail',
        'GLenum '
      ],
      [
        'zfail',
        'GLenum '
      ],
      [
        'zpass',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStencilOpSeparate' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'sfail',
        'GLenum '
      ],
      [
        'dpfail',
        'GLenum '
      ],
      [
        'dppass',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewStencilOpSeparate',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStencilOpSeparateATI' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'sfail',
        'GLenum '
      ],
      [
        'dpfail',
        'GLenum '
      ],
      [
        'dppass',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ATI_separate_stencil',
    'glewImpl' => '__glewStencilOpSeparateATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStencilOpValueAMD' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'value',
        'GLuint '
      ]
    ],
    'feature' => 'GL_AMD_stencil_operation_extended',
    'glewImpl' => '__glewStencilOpValueAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStencilStrokePathInstancedNV' => {
    'argdata' => [
      [
        'numPaths',
        'GLsizei '
      ],
      [
        'pathNameType',
        'GLenum '
      ],
      [
        'paths',
        'const void *'
      ],
      [
        'pathBase',
        'GLuint '
      ],
      [
        'reference',
        'GLint '
      ],
      [
        'mask',
        'GLuint '
      ],
      [
        'transformType',
        'GLenum '
      ],
      [
        'transformValues',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glStencilStrokePathInstancedNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewStencilStrokePathInstancedNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStencilStrokePathNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'reference',
        'GLint '
      ],
      [
        'mask',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewStencilStrokePathNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStencilThenCoverFillPathInstancedNV' => {
    'argdata' => [
      [
        'numPaths',
        'GLsizei '
      ],
      [
        'pathNameType',
        'GLenum '
      ],
      [
        'paths',
        'const void *'
      ],
      [
        'pathBase',
        'GLuint '
      ],
      [
        'fillMode',
        'GLenum '
      ],
      [
        'mask',
        'GLuint '
      ],
      [
        'coverMode',
        'GLenum '
      ],
      [
        'transformType',
        'GLenum '
      ],
      [
        'transformValues',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glStencilThenCoverFillPathInstancedNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewStencilThenCoverFillPathInstancedNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStencilThenCoverFillPathNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'fillMode',
        'GLenum '
      ],
      [
        'mask',
        'GLuint '
      ],
      [
        'coverMode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewStencilThenCoverFillPathNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStencilThenCoverStrokePathInstancedNV' => {
    'argdata' => [
      [
        'numPaths',
        'GLsizei '
      ],
      [
        'pathNameType',
        'GLenum '
      ],
      [
        'paths',
        'const void *'
      ],
      [
        'pathBase',
        'GLuint '
      ],
      [
        'reference',
        'GLint '
      ],
      [
        'mask',
        'GLuint '
      ],
      [
        'coverMode',
        'GLenum '
      ],
      [
        'transformType',
        'GLenum '
      ],
      [
        'transformValues',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glStencilThenCoverStrokePathInstancedNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewStencilThenCoverStrokePathInstancedNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStencilThenCoverStrokePathNV' => {
    'argdata' => [
      [
        'path',
        'GLuint '
      ],
      [
        'reference',
        'GLint '
      ],
      [
        'mask',
        'GLuint '
      ],
      [
        'coverMode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewStencilThenCoverStrokePathNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStereoParameterfNV' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_NV_3dvision_settings',
    'glewImpl' => '__glewStereoParameterfNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStereoParameteriNV' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_NV_3dvision_settings',
    'glewImpl' => '__glewStereoParameteriNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glStringMarkerGREMEDY' => {
    'argdata' => [
      [
        'len',
        'GLsizei '
      ],
      [
        'string',
        'const void *'
      ]
    ],
    'binding_name' => 'glStringMarkerGREMEDY_c',
    'feature' => 'GL_GREMEDY_string_marker',
    'glewImpl' => '__glewStringMarkerGREMEDY',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSubpixelPrecisionBiasNV' => {
    'argdata' => [
      [
        'xbits',
        'GLuint '
      ],
      [
        'ybits',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_conservative_raster',
    'glewImpl' => '__glewSubpixelPrecisionBiasNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSwapMPEGPredictorsSGIX' => {
    'argdata' => [
      [
        'target0',
        'GLenum '
      ],
      [
        'target1',
        'GLenum '
      ]
    ],
    'feature' => 'GL_SGIX_mpeg1',
    'glewImpl' => '__glewSwapMPEGPredictorsSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSwizzleEXT' => {
    'argdata' => [
      [
        'res',
        'GLuint '
      ],
      [
        'in',
        'GLuint '
      ],
      [
        'outX',
        'GLenum '
      ],
      [
        'outY',
        'GLenum '
      ],
      [
        'outZ',
        'GLenum '
      ],
      [
        'outW',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewSwizzleEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glSyncTextureINTEL' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ]
    ],
    'feature' => 'GL_LAYOUT_LINEAR_INTEL',
    'glewImpl' => '__glewSyncTextureINTEL',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTagSampleBufferSGIX' => {
    'feature' => 'GL_SGIX_tag_sample_buffer',
    'glewImpl' => '__glewTagSampleBufferSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTangentPointerEXT' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'void *'
      ]
    ],
    'binding_name' => 'glTangentPointerEXT_c',
    'feature' => 'GL_EXT_coordinate_frame',
    'glewImpl' => '__glewTangentPointerEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTbufferMask3DFX' => {
    'argdata' => [
      [
        'mask',
        'GLuint '
      ]
    ],
    'feature' => 'GL_3DFX_tbuffer',
    'glewImpl' => '__glewTbufferMask3DFX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTessellationFactorAMD' => {
    'argdata' => [
      [
        'factor',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_AMD_vertex_shader_tessellator',
    'glewImpl' => '__glewTessellationFactorAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTessellationModeAMD' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_AMD_vertex_shader_tessellator',
    'glewImpl' => '__glewTessellationModeAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTestFenceAPPLE' => {
    'argdata' => [
      [
        'fence',
        'GLuint '
      ]
    ],
    'feature' => 'GL_APPLE_fence',
    'glewImpl' => '__glewTestFenceAPPLE',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glTestFenceNV' => {
    'argdata' => [
      [
        'fence',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_fence',
    'glewImpl' => '__glewTestFenceNV',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glTestObjectAPPLE' => {
    'argdata' => [
      [
        'object',
        'GLenum '
      ],
      [
        'name',
        'GLuint '
      ]
    ],
    'feature' => 'GL_APPLE_fence',
    'glewImpl' => '__glewTestObjectAPPLE',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glTexBuffer' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalFormat',
        'GLenum '
      ],
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_3_1',
    'glewImpl' => '__glewTexBuffer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexBufferARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_texture_buffer_object',
    'glewImpl' => '__glewTexBufferARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexBufferEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_texture_buffer_object',
    'glewImpl' => '__glewTexBufferEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexBufferRange' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ]
    ],
    'feature' => 'GL_ARB_texture_buffer_range',
    'glewImpl' => '__glewTexBufferRange',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexBumpParameterfvATI' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glTexBumpParameterfvATI_c',
    'feature' => 'GL_ATI_envmap_bumpmap',
    'glewImpl' => '__glewTexBumpParameterfvATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexBumpParameterivATI' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint *'
      ]
    ],
    'binding_name' => 'glTexBumpParameterivATI_c',
    'feature' => 'GL_ATI_envmap_bumpmap',
    'glewImpl' => '__glewTexBumpParameterivATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord1d' => {
    'argdata' => [
      [
        's',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord1dv' => {
    'argdata' => [
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glTexCoord1dv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord1f' => {
    'argdata' => [
      [
        's',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord1fv' => {
    'argdata' => [
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glTexCoord1fv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord1hNV' => {
    'argdata' => [
      [
        's',
        'GLhalf '
      ]
    ],
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewTexCoord1hNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord1hvNV' => {
    'argdata' => [
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glTexCoord1hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewTexCoord1hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord1i' => {
    'argdata' => [
      [
        's',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord1iv' => {
    'argdata' => [
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glTexCoord1iv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord1s' => {
    'argdata' => [
      [
        's',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord1sv' => {
    'argdata' => [
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glTexCoord1sv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord2d' => {
    'argdata' => [
      [
        's',
        'GLdouble '
      ],
      [
        't',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord2dv' => {
    'argdata' => [
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glTexCoord2dv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord2f' => {
    'argdata' => [
      [
        's',
        'GLfloat '
      ],
      [
        't',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord2fColor3fVertex3fSUN' => {
    'argdata' => [
      [
        's',
        'GLfloat '
      ],
      [
        't',
        'GLfloat '
      ],
      [
        'r',
        'GLfloat '
      ],
      [
        'g',
        'GLfloat '
      ],
      [
        'b',
        'GLfloat '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewTexCoord2fColor3fVertex3fSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord2fColor3fVertex3fvSUN' => {
    'argdata' => [
      [
        'tc',
        'const GLfloat* '
      ],
      [
        'c',
        'const GLfloat *'
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glTexCoord2fColor3fVertex3fvSUN_c',
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewTexCoord2fColor3fVertex3fvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord2fColor4fNormal3fVertex3fSUN' => {
    'argdata' => [
      [
        's',
        'GLfloat '
      ],
      [
        't',
        'GLfloat '
      ],
      [
        'r',
        'GLfloat '
      ],
      [
        'g',
        'GLfloat '
      ],
      [
        'b',
        'GLfloat '
      ],
      [
        'a',
        'GLfloat '
      ],
      [
        'nx',
        'GLfloat '
      ],
      [
        'ny',
        'GLfloat '
      ],
      [
        'nz',
        'GLfloat '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewTexCoord2fColor4fNormal3fVertex3fSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord2fColor4fNormal3fVertex3fvSUN' => {
    'argdata' => [
      [
        'tc',
        'const GLfloat* '
      ],
      [
        'c',
        'const GLfloat *'
      ],
      [
        'n',
        'const GLfloat *'
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glTexCoord2fColor4fNormal3fVertex3fvSUN_c',
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewTexCoord2fColor4fNormal3fVertex3fvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord2fColor4ubVertex3fSUN' => {
    'argdata' => [
      [
        's',
        'GLfloat '
      ],
      [
        't',
        'GLfloat '
      ],
      [
        'r',
        'GLubyte '
      ],
      [
        'g',
        'GLubyte '
      ],
      [
        'b',
        'GLubyte '
      ],
      [
        'a',
        'GLubyte '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewTexCoord2fColor4ubVertex3fSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord2fColor4ubVertex3fvSUN' => {
    'argdata' => [
      [
        'tc',
        'const GLfloat* '
      ],
      [
        'c',
        'const GLubyte *'
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glTexCoord2fColor4ubVertex3fvSUN_c',
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewTexCoord2fColor4ubVertex3fvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord2fNormal3fVertex3fSUN' => {
    'argdata' => [
      [
        's',
        'GLfloat '
      ],
      [
        't',
        'GLfloat '
      ],
      [
        'nx',
        'GLfloat '
      ],
      [
        'ny',
        'GLfloat '
      ],
      [
        'nz',
        'GLfloat '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewTexCoord2fNormal3fVertex3fSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord2fNormal3fVertex3fvSUN' => {
    'argdata' => [
      [
        'tc',
        'const GLfloat* '
      ],
      [
        'n',
        'const GLfloat *'
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glTexCoord2fNormal3fVertex3fvSUN_c',
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewTexCoord2fNormal3fVertex3fvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord2fVertex3fSUN' => {
    'argdata' => [
      [
        's',
        'GLfloat '
      ],
      [
        't',
        'GLfloat '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewTexCoord2fVertex3fSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord2fVertex3fvSUN' => {
    'argdata' => [
      [
        'tc',
        'const GLfloat* '
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glTexCoord2fVertex3fvSUN_c',
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewTexCoord2fVertex3fvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord2fv' => {
    'argdata' => [
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glTexCoord2fv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord2hNV' => {
    'argdata' => [
      [
        's',
        'GLhalf '
      ],
      [
        't',
        'GLhalf '
      ]
    ],
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewTexCoord2hNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord2hvNV' => {
    'argdata' => [
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glTexCoord2hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewTexCoord2hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord2i' => {
    'argdata' => [
      [
        's',
        'GLint '
      ],
      [
        't',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord2iv' => {
    'argdata' => [
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glTexCoord2iv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord2s' => {
    'argdata' => [
      [
        's',
        'GLshort '
      ],
      [
        't',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord2sv' => {
    'argdata' => [
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glTexCoord2sv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord3d' => {
    'argdata' => [
      [
        's',
        'GLdouble '
      ],
      [
        't',
        'GLdouble '
      ],
      [
        'r',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord3dv' => {
    'argdata' => [
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glTexCoord3dv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord3f' => {
    'argdata' => [
      [
        's',
        'GLfloat '
      ],
      [
        't',
        'GLfloat '
      ],
      [
        'r',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord3fv' => {
    'argdata' => [
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glTexCoord3fv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord3hNV' => {
    'argdata' => [
      [
        's',
        'GLhalf '
      ],
      [
        't',
        'GLhalf '
      ],
      [
        'r',
        'GLhalf '
      ]
    ],
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewTexCoord3hNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord3hvNV' => {
    'argdata' => [
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glTexCoord3hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewTexCoord3hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord3i' => {
    'argdata' => [
      [
        's',
        'GLint '
      ],
      [
        't',
        'GLint '
      ],
      [
        'r',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord3iv' => {
    'argdata' => [
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glTexCoord3iv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord3s' => {
    'argdata' => [
      [
        's',
        'GLshort '
      ],
      [
        't',
        'GLshort '
      ],
      [
        'r',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord3sv' => {
    'argdata' => [
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glTexCoord3sv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord4d' => {
    'argdata' => [
      [
        's',
        'GLdouble '
      ],
      [
        't',
        'GLdouble '
      ],
      [
        'r',
        'GLdouble '
      ],
      [
        'q',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord4dv' => {
    'argdata' => [
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glTexCoord4dv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord4f' => {
    'argdata' => [
      [
        's',
        'GLfloat '
      ],
      [
        't',
        'GLfloat '
      ],
      [
        'r',
        'GLfloat '
      ],
      [
        'q',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord4fColor4fNormal3fVertex4fSUN' => {
    'argdata' => [
      [
        's',
        'GLfloat '
      ],
      [
        't',
        'GLfloat '
      ],
      [
        'p',
        'GLfloat '
      ],
      [
        'q',
        'GLfloat '
      ],
      [
        'r',
        'GLfloat '
      ],
      [
        'g',
        'GLfloat '
      ],
      [
        'b',
        'GLfloat '
      ],
      [
        'a',
        'GLfloat '
      ],
      [
        'nx',
        'GLfloat '
      ],
      [
        'ny',
        'GLfloat '
      ],
      [
        'nz',
        'GLfloat '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ],
      [
        'w',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewTexCoord4fColor4fNormal3fVertex4fSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord4fColor4fNormal3fVertex4fvSUN' => {
    'argdata' => [
      [
        'tc',
        'const GLfloat* '
      ],
      [
        'c',
        'const GLfloat *'
      ],
      [
        'n',
        'const GLfloat *'
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glTexCoord4fColor4fNormal3fVertex4fvSUN_c',
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewTexCoord4fColor4fNormal3fVertex4fvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord4fVertex4fSUN' => {
    'argdata' => [
      [
        's',
        'GLfloat '
      ],
      [
        't',
        'GLfloat '
      ],
      [
        'p',
        'GLfloat '
      ],
      [
        'q',
        'GLfloat '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ],
      [
        'w',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewTexCoord4fVertex4fSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord4fVertex4fvSUN' => {
    'argdata' => [
      [
        'tc',
        'const GLfloat* '
      ],
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glTexCoord4fVertex4fvSUN_c',
    'feature' => 'GL_SUN_vertex',
    'glewImpl' => '__glewTexCoord4fVertex4fvSUN',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord4fv' => {
    'argdata' => [
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glTexCoord4fv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord4hNV' => {
    'argdata' => [
      [
        's',
        'GLhalf '
      ],
      [
        't',
        'GLhalf '
      ],
      [
        'r',
        'GLhalf '
      ],
      [
        'q',
        'GLhalf '
      ]
    ],
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewTexCoord4hNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord4hvNV' => {
    'argdata' => [
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glTexCoord4hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewTexCoord4hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord4i' => {
    'argdata' => [
      [
        's',
        'GLint '
      ],
      [
        't',
        'GLint '
      ],
      [
        'r',
        'GLint '
      ],
      [
        'q',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord4iv' => {
    'argdata' => [
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glTexCoord4iv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord4s' => {
    'argdata' => [
      [
        's',
        'GLshort '
      ],
      [
        't',
        'GLshort '
      ],
      [
        'r',
        'GLshort '
      ],
      [
        'q',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoord4sv' => {
    'argdata' => [
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glTexCoord4sv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoordFormatNV' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NV_vertex_buffer_unified_memory',
    'glewImpl' => '__glewTexCoordFormatNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoordP1ui' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'coords',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewTexCoordP1ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoordP1uiv' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'coords',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glTexCoordP1uiv_c',
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewTexCoordP1uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoordP2ui' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'coords',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewTexCoordP2ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoordP2uiv' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'coords',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glTexCoordP2uiv_c',
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewTexCoordP2uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoordP3ui' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'coords',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewTexCoordP3ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoordP3uiv' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'coords',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glTexCoordP3uiv_c',
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewTexCoordP3uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoordP4ui' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'coords',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewTexCoordP4ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoordP4uiv' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'coords',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glTexCoordP4uiv_c',
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewTexCoordP4uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoordPointer' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glTexCoordPointer_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoordPointerEXT' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glTexCoordPointerEXT_c',
    'feature' => 'GL_EXT_vertex_array',
    'glewImpl' => '__glewTexCoordPointerEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoordPointerListIBM' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLint '
      ],
      [
        'pointer',
        'const void** '
      ],
      [
        'ptrstride',
        'GLint '
      ]
    ],
    'binding_name' => 'glTexCoordPointerListIBM_c',
    'feature' => 'GL_IBM_vertex_array_lists',
    'glewImpl' => '__glewTexCoordPointerListIBM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexCoordPointervINTEL' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pointer',
        'const void** '
      ]
    ],
    'binding_name' => 'glTexCoordPointervINTEL_c',
    'feature' => 'GL_INTEL_parallel_arrays',
    'glewImpl' => '__glewTexCoordPointervINTEL',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexEnvf' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexEnvfv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glTexEnvfv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexEnvi' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexEnviv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glTexEnviv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexEnvx' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfixed '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewTexEnvx',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexEnvxv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfixed* '
      ]
    ],
    'binding_name' => 'glTexEnvxv_c',
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewTexEnvxv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexFilterFuncSGIS' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'filter',
        'GLenum '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'weights',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glTexFilterFuncSGIS_c',
    'feature' => 'GL_SGIS_texture_filter4',
    'glewImpl' => '__glewTexFilterFuncSGIS',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexGend' => {
    'argdata' => [
      [
        'coord',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexGendv' => {
    'argdata' => [
      [
        'coord',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glTexGendv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexGenf' => {
    'argdata' => [
      [
        'coord',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexGenfv' => {
    'argdata' => [
      [
        'coord',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glTexGenfv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexGeni' => {
    'argdata' => [
      [
        'coord',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexGeniv' => {
    'argdata' => [
      [
        'coord',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glTexGeniv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexImage1D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTexImage1D_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexImage2D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTexImage2D_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexImage2DMultisample' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'fixedsamplelocations',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_ARB_texture_multisample',
    'glewImpl' => '__glewTexImage2DMultisample',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexImage2DMultisampleCoverageNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'coverageSamples',
        'GLsizei '
      ],
      [
        'colorSamples',
        'GLsizei '
      ],
      [
        'internalFormat',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'fixedSampleLocations',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_NV_texture_multisample',
    'glewImpl' => '__glewTexImage2DMultisampleCoverageNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexImage3D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalFormat',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTexImage3D_c',
    'feature' => 'GL_VERSION_1_2',
    'glewImpl' => '__glewTexImage3D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexImage3DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTexImage3DEXT_c',
    'feature' => 'GL_EXT_texture3D',
    'glewImpl' => '__glewTexImage3DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexImage3DMultisample' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'fixedsamplelocations',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_ARB_texture_multisample',
    'glewImpl' => '__glewTexImage3DMultisample',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexImage3DMultisampleCoverageNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'coverageSamples',
        'GLsizei '
      ],
      [
        'colorSamples',
        'GLsizei '
      ],
      [
        'internalFormat',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'fixedSampleLocations',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_NV_texture_multisample',
    'glewImpl' => '__glewTexImage3DMultisampleCoverageNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexImage3DNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalFormat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTexImage3DNV_c',
    'feature' => 'GL_NV_texture_array',
    'glewImpl' => '__glewTexImage3DNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexImage4DSGIS' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'extent',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTexImage4DSGIS_c',
    'feature' => 'GL_SGIS_texture4D',
    'glewImpl' => '__glewTexImage4DSGIS',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexPageCommitmentARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'commit',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_ARB_sparse_texture',
    'glewImpl' => '__glewTexPageCommitmentARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexPageCommitmentEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'commit',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_EXT_sparse_texture',
    'glewImpl' => '__glewTexPageCommitmentEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexParameterIiv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glTexParameterIiv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewTexParameterIiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexParameterIivEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glTexParameterIivEXT_c',
    'feature' => 'GL_EXT_texture_integer',
    'glewImpl' => '__glewTexParameterIivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexParameterIuiv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glTexParameterIuiv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewTexParameterIuiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexParameterIuivEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glTexParameterIuivEXT_c',
    'feature' => 'GL_EXT_texture_integer',
    'glewImpl' => '__glewTexParameterIuivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexParameterf' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexParameterfv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glTexParameterfv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexParameteri' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexParameteriv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glTexParameteriv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexParameterx' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfixed '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewTexParameterx',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexParameterxv' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfixed* '
      ]
    ],
    'binding_name' => 'glTexParameterxv_c',
    'feature' => 'GL_REGAL_ES1_1_compatibility',
    'glewImpl' => '__glewTexParameterxv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexRenderbufferNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'renderbuffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_explicit_multisample',
    'glewImpl' => '__glewTexRenderbufferNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexScissorFuncINTEL' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'lfunc',
        'GLenum '
      ],
      [
        'hfunc',
        'GLenum '
      ]
    ],
    'feature' => 'GL_INTEL_texture_scissor',
    'glewImpl' => '__glewTexScissorFuncINTEL',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexScissorINTEL' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'tlow',
        'GLclampf '
      ],
      [
        'thigh',
        'GLclampf '
      ]
    ],
    'feature' => 'GL_INTEL_texture_scissor',
    'glewImpl' => '__glewTexScissorINTEL',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexStorage1D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'levels',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_texture_storage',
    'glewImpl' => '__glewTexStorage1D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexStorage1DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'levels',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_texture_storage',
    'glewImpl' => '__glewTexStorage1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexStorage2D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'levels',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_texture_storage',
    'glewImpl' => '__glewTexStorage2D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexStorage2DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'levels',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_texture_storage',
    'glewImpl' => '__glewTexStorage2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexStorage2DMultisample' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'fixedsamplelocations',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_ARB_texture_storage_multisample',
    'glewImpl' => '__glewTexStorage2DMultisample',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexStorage3D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'levels',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_texture_storage',
    'glewImpl' => '__glewTexStorage3D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexStorage3DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'levels',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_texture_storage',
    'glewImpl' => '__glewTexStorage3DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexStorage3DMultisample' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'fixedsamplelocations',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_ARB_texture_storage_multisample',
    'glewImpl' => '__glewTexStorage3DMultisample',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexStorageMem1DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'levels',
        'GLsizei '
      ],
      [
        'internalFormat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'memory',
        'GLuint '
      ],
      [
        'offset',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_EXT_memory_object',
    'glewImpl' => '__glewTexStorageMem1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexStorageMem2DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'levels',
        'GLsizei '
      ],
      [
        'internalFormat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'memory',
        'GLuint '
      ],
      [
        'offset',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_EXT_memory_object',
    'glewImpl' => '__glewTexStorageMem2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexStorageMem2DMultisampleEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'internalFormat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'fixedSampleLocations',
        'GLboolean '
      ],
      [
        'memory',
        'GLuint '
      ],
      [
        'offset',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_EXT_memory_object',
    'glewImpl' => '__glewTexStorageMem2DMultisampleEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexStorageMem3DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'levels',
        'GLsizei '
      ],
      [
        'internalFormat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'memory',
        'GLuint '
      ],
      [
        'offset',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_EXT_memory_object',
    'glewImpl' => '__glewTexStorageMem3DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexStorageMem3DMultisampleEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'internalFormat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'fixedSampleLocations',
        'GLboolean '
      ],
      [
        'memory',
        'GLuint '
      ],
      [
        'offset',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_EXT_memory_object',
    'glewImpl' => '__glewTexStorageMem3DMultisampleEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexStorageSparseAMD' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'internalFormat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'layers',
        'GLsizei '
      ],
      [
        'flags',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_AMD_sparse_texture',
    'glewImpl' => '__glewTexStorageSparseAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexSubImage1D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTexSubImage1D_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexSubImage1DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTexSubImage1DEXT_c',
    'feature' => 'GL_EXT_subtexture',
    'glewImpl' => '__glewTexSubImage1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexSubImage2D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTexSubImage2D_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexSubImage2DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTexSubImage2DEXT_c',
    'feature' => 'GL_EXT_subtexture',
    'glewImpl' => '__glewTexSubImage2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexSubImage3D' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTexSubImage3D_c',
    'feature' => 'GL_VERSION_1_2',
    'glewImpl' => '__glewTexSubImage3D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexSubImage3DEXT' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTexSubImage3DEXT_c',
    'feature' => 'GL_EXT_subtexture',
    'glewImpl' => '__glewTexSubImage3DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexSubImage3DNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTexSubImage3DNV_c',
    'feature' => 'GL_NV_texture_array',
    'glewImpl' => '__glewTexSubImage3DNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexSubImage4DSGIS' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'woffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'extent',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTexSubImage4DSGIS_c',
    'feature' => 'GL_SGIS_texture4D',
    'glewImpl' => '__glewTexSubImage4DSGIS',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureBarrier' => {
    'feature' => 'GL_ARB_texture_barrier',
    'glewImpl' => '__glewTextureBarrier',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureBarrierNV' => {
    'feature' => 'GL_NV_texture_barrier',
    'glewImpl' => '__glewTextureBarrierNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureBuffer' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewTextureBuffer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureBufferEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewTextureBufferEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureBufferRange' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewTextureBufferRange',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureBufferRangeEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ]
    ],
    'feature' => 'GL_ARB_texture_buffer_range',
    'glewImpl' => '__glewTextureBufferRangeEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureFogSGIX' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ]
    ],
    'feature' => 'GL_SGIX_fog_texture',
    'glewImpl' => '__glewTextureFogSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureImage1DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTextureImage1DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewTextureImage1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureImage2DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTextureImage2DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewTextureImage2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureImage2DMultisampleCoverageNV' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'coverageSamples',
        'GLsizei '
      ],
      [
        'colorSamples',
        'GLsizei '
      ],
      [
        'internalFormat',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'fixedSampleLocations',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_NV_texture_multisample',
    'glewImpl' => '__glewTextureImage2DMultisampleCoverageNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureImage2DMultisampleNV' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'internalFormat',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'fixedSampleLocations',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_NV_texture_multisample',
    'glewImpl' => '__glewTextureImage2DMultisampleNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureImage3DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'internalformat',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'border',
        'GLint '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTextureImage3DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewTextureImage3DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureImage3DMultisampleCoverageNV' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'coverageSamples',
        'GLsizei '
      ],
      [
        'colorSamples',
        'GLsizei '
      ],
      [
        'internalFormat',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'fixedSampleLocations',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_NV_texture_multisample',
    'glewImpl' => '__glewTextureImage3DMultisampleCoverageNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureImage3DMultisampleNV' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'internalFormat',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'fixedSampleLocations',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_NV_texture_multisample',
    'glewImpl' => '__glewTextureImage3DMultisampleNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureLightEXT' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_light_texture',
    'glewImpl' => '__glewTextureLightEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureMaterialEXT' => {
    'argdata' => [
      [
        'face',
        'GLenum '
      ],
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_light_texture',
    'glewImpl' => '__glewTextureMaterialEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureNormalEXT' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_texture_perturb_normal',
    'glewImpl' => '__glewTextureNormalEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTexturePageCommitmentEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'commit',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_EXT_sparse_texture',
    'glewImpl' => '__glewTexturePageCommitmentEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureParameterIiv' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glTextureParameterIiv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewTextureParameterIiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureParameterIivEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glTextureParameterIivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewTextureParameterIivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureParameterIuiv' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glTextureParameterIuiv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewTextureParameterIuiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureParameterIuivEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glTextureParameterIuivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewTextureParameterIuivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureParameterf' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewTextureParameterf',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureParameterfEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewTextureParameterfEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureParameterfv' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glTextureParameterfv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewTextureParameterfv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureParameterfvEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glTextureParameterfvEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewTextureParameterfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureParameteri' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewTextureParameteri',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureParameteriEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewTextureParameteriEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureParameteriv' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glTextureParameteriv_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewTextureParameteriv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureParameterivEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glTextureParameterivEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewTextureParameterivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureRangeAPPLE' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'length',
        'GLsizei '
      ],
      [
        'pointer',
        'void *'
      ]
    ],
    'binding_name' => 'glTextureRangeAPPLE_c',
    'feature' => 'GL_APPLE_texture_range',
    'glewImpl' => '__glewTextureRangeAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureRenderbufferEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'renderbuffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewTextureRenderbufferEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureStorage1D' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'levels',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewTextureStorage1D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureStorage1DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'levels',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_texture_storage',
    'glewImpl' => '__glewTextureStorage1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureStorage2D' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'levels',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewTextureStorage2D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureStorage2DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'levels',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_texture_storage',
    'glewImpl' => '__glewTextureStorage2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureStorage2DMultisample' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'fixedsamplelocations',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewTextureStorage2DMultisample',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureStorage2DMultisampleEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'fixedsamplelocations',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_ARB_texture_storage_multisample',
    'glewImpl' => '__glewTextureStorage2DMultisampleEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureStorage3D' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'levels',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewTextureStorage3D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureStorage3DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'levels',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_EXT_texture_storage',
    'glewImpl' => '__glewTextureStorage3DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureStorage3DMultisample' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'fixedsamplelocations',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewTextureStorage3DMultisample',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureStorage3DMultisampleEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'fixedsamplelocations',
        'GLboolean '
      ]
    ],
    'feature' => 'GL_ARB_texture_storage_multisample',
    'glewImpl' => '__glewTextureStorage3DMultisampleEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureStorageMem1DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'levels',
        'GLsizei '
      ],
      [
        'internalFormat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'memory',
        'GLuint '
      ],
      [
        'offset',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_EXT_memory_object',
    'glewImpl' => '__glewTextureStorageMem1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureStorageMem2DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'levels',
        'GLsizei '
      ],
      [
        'internalFormat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'memory',
        'GLuint '
      ],
      [
        'offset',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_EXT_memory_object',
    'glewImpl' => '__glewTextureStorageMem2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureStorageMem2DMultisampleEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'internalFormat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'fixedSampleLocations',
        'GLboolean '
      ],
      [
        'memory',
        'GLuint '
      ],
      [
        'offset',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_EXT_memory_object',
    'glewImpl' => '__glewTextureStorageMem2DMultisampleEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureStorageMem3DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'levels',
        'GLsizei '
      ],
      [
        'internalFormat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'memory',
        'GLuint '
      ],
      [
        'offset',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_EXT_memory_object',
    'glewImpl' => '__glewTextureStorageMem3DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureStorageMem3DMultisampleEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'samples',
        'GLsizei '
      ],
      [
        'internalFormat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'fixedSampleLocations',
        'GLboolean '
      ],
      [
        'memory',
        'GLuint '
      ],
      [
        'offset',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_EXT_memory_object',
    'glewImpl' => '__glewTextureStorageMem3DMultisampleEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureStorageSparseAMD' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'internalFormat',
        'GLenum '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'layers',
        'GLsizei '
      ],
      [
        'flags',
        'GLbitfield '
      ]
    ],
    'feature' => 'GL_AMD_sparse_texture',
    'glewImpl' => '__glewTextureStorageSparseAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureSubImage1D' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTextureSubImage1D_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewTextureSubImage1D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureSubImage1DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTextureSubImage1DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewTextureSubImage1DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureSubImage2D' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTextureSubImage2D_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewTextureSubImage2D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureSubImage2DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTextureSubImage2DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewTextureSubImage2DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureSubImage3D' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTextureSubImage3D_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewTextureSubImage3D',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureSubImage3DEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'level',
        'GLint '
      ],
      [
        'xoffset',
        'GLint '
      ],
      [
        'yoffset',
        'GLint '
      ],
      [
        'zoffset',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ],
      [
        'depth',
        'GLsizei '
      ],
      [
        'format',
        'GLenum '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pixels',
        'const void *'
      ]
    ],
    'binding_name' => 'glTextureSubImage3DEXT_c',
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewTextureSubImage3DEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureView' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'origtexture',
        'GLuint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'minlevel',
        'GLuint '
      ],
      [
        'numlevels',
        'GLuint '
      ],
      [
        'minlayer',
        'GLuint '
      ],
      [
        'numlayers',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_texture_view',
    'glewImpl' => '__glewTextureView',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTextureViewEXT' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'origtexture',
        'GLuint '
      ],
      [
        'internalformat',
        'GLenum '
      ],
      [
        'minlevel',
        'GLuint '
      ],
      [
        'numlevels',
        'GLuint '
      ],
      [
        'minlayer',
        'GLuint '
      ],
      [
        'numlayers',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_texture_view',
    'glewImpl' => '__glewTextureViewEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTrackMatrixNV' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ],
      [
        'address',
        'GLuint '
      ],
      [
        'matrix',
        'GLenum '
      ],
      [
        'transform',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewTrackMatrixNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTransformFeedbackAttribsNV' => {
    'argdata' => [
      [
        'count',
        'GLuint '
      ],
      [
        'attribs',
        'const GLint *'
      ],
      [
        'bufferMode',
        'GLenum '
      ]
    ],
    'binding_name' => 'glTransformFeedbackAttribsNV_c',
    'feature' => 'GL_NV_transform_feedback',
    'glewImpl' => '__glewTransformFeedbackAttribsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTransformFeedbackBufferBase' => {
    'argdata' => [
      [
        'xfb',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewTransformFeedbackBufferBase',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTransformFeedbackBufferRange' => {
    'argdata' => [
      [
        'xfb',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'size',
        'GLsizeiptr '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewTransformFeedbackBufferRange',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTransformFeedbackVaryings' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'varyings',
        'const GLchar *const* '
      ],
      [
        'bufferMode',
        'GLenum '
      ]
    ],
    'binding_name' => 'glTransformFeedbackVaryings_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewTransformFeedbackVaryings',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTransformFeedbackVaryingsEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'varyings',
        'const GLchar * const* '
      ],
      [
        'bufferMode',
        'GLenum '
      ]
    ],
    'binding_name' => 'glTransformFeedbackVaryingsEXT_c',
    'feature' => 'GL_EXT_transform_feedback',
    'glewImpl' => '__glewTransformFeedbackVaryingsEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTransformFeedbackVaryingsNV' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'locations',
        'const GLint *'
      ],
      [
        'bufferMode',
        'GLenum '
      ]
    ],
    'binding_name' => 'glTransformFeedbackVaryingsNV_c',
    'feature' => 'GL_NV_transform_feedback',
    'glewImpl' => '__glewTransformFeedbackVaryingsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTransformPathNV' => {
    'argdata' => [
      [
        'resultPath',
        'GLuint '
      ],
      [
        'srcPath',
        'GLuint '
      ],
      [
        'transformType',
        'GLenum '
      ],
      [
        'transformValues',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glTransformPathNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewTransformPathNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTranslated' => {
    'argdata' => [
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTranslatef' => {
    'argdata' => [
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glTranslatex' => {
    'argdata' => [
      [
        'x',
        'GLfixed '
      ],
      [
        'y',
        'GLfixed '
      ],
      [
        'z',
        'GLfixed '
      ]
    ],
    'feature' => 'GL_REGAL_ES1_0_compatibility',
    'glewImpl' => '__glewTranslatex',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1d' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_gpu_shader_fp64',
    'glewImpl' => '__glewUniform1d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1dv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glUniform1dv_c',
    'feature' => 'GL_ARB_gpu_shader_fp64',
    'glewImpl' => '__glewUniform1dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1f' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewUniform1f',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1fARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewUniform1fARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1fv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glUniform1fv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewUniform1fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1fvARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glUniform1fvARB_c',
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewUniform1fvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1i' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewUniform1i',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1i64ARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLint64 '
      ]
    ],
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewUniform1i64ARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1i64NV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLint64EXT '
      ]
    ],
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewUniform1i64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1i64vARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint64* '
      ]
    ],
    'binding_name' => 'glUniform1i64vARB_c',
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewUniform1i64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1i64vNV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint64EXT* '
      ]
    ],
    'binding_name' => 'glUniform1i64vNV_c',
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewUniform1i64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1iARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewUniform1iARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1iv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glUniform1iv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewUniform1iv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1ivARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glUniform1ivARB_c',
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewUniform1ivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1ui' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewUniform1ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1ui64ARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewUniform1ui64ARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1ui64NV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLuint64EXT '
      ]
    ],
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewUniform1ui64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1ui64vARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint64* '
      ]
    ],
    'binding_name' => 'glUniform1ui64vARB_c',
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewUniform1ui64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1ui64vNV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glUniform1ui64vNV_c',
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewUniform1ui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1uiEXT' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewUniform1uiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1uiv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glUniform1uiv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewUniform1uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform1uivEXT' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glUniform1uivEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewUniform1uivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2d' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_gpu_shader_fp64',
    'glewImpl' => '__glewUniform2d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2dv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glUniform2dv_c',
    'feature' => 'GL_ARB_gpu_shader_fp64',
    'glewImpl' => '__glewUniform2dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2f' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLfloat '
      ],
      [
        'v1',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewUniform2f',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2fARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLfloat '
      ],
      [
        'v1',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewUniform2fARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2fv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glUniform2fv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewUniform2fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2fvARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glUniform2fvARB_c',
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewUniform2fvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2i' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLint '
      ],
      [
        'v1',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewUniform2i',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2i64ARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLint64 '
      ],
      [
        'y',
        'GLint64 '
      ]
    ],
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewUniform2i64ARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2i64NV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLint64EXT '
      ],
      [
        'y',
        'GLint64EXT '
      ]
    ],
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewUniform2i64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2i64vARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint64* '
      ]
    ],
    'binding_name' => 'glUniform2i64vARB_c',
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewUniform2i64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2i64vNV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint64EXT* '
      ]
    ],
    'binding_name' => 'glUniform2i64vNV_c',
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewUniform2i64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2iARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLint '
      ],
      [
        'v1',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewUniform2iARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2iv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glUniform2iv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewUniform2iv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2ivARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glUniform2ivARB_c',
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewUniform2ivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2ui' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLuint '
      ],
      [
        'v1',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewUniform2ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2ui64ARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLuint64 '
      ],
      [
        'y',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewUniform2ui64ARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2ui64NV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLuint64EXT '
      ],
      [
        'y',
        'GLuint64EXT '
      ]
    ],
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewUniform2ui64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2ui64vARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint64* '
      ]
    ],
    'binding_name' => 'glUniform2ui64vARB_c',
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewUniform2ui64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2ui64vNV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glUniform2ui64vNV_c',
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewUniform2ui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2uiEXT' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLuint '
      ],
      [
        'v1',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewUniform2uiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2uiv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glUniform2uiv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewUniform2uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform2uivEXT' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glUniform2uivEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewUniform2uivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3d' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_gpu_shader_fp64',
    'glewImpl' => '__glewUniform3d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3dv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glUniform3dv_c',
    'feature' => 'GL_ARB_gpu_shader_fp64',
    'glewImpl' => '__glewUniform3dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3f' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLfloat '
      ],
      [
        'v1',
        'GLfloat '
      ],
      [
        'v2',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewUniform3f',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3fARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLfloat '
      ],
      [
        'v1',
        'GLfloat '
      ],
      [
        'v2',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewUniform3fARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3fv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glUniform3fv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewUniform3fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3fvARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glUniform3fvARB_c',
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewUniform3fvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3i' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLint '
      ],
      [
        'v1',
        'GLint '
      ],
      [
        'v2',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewUniform3i',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3i64ARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLint64 '
      ],
      [
        'y',
        'GLint64 '
      ],
      [
        'z',
        'GLint64 '
      ]
    ],
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewUniform3i64ARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3i64NV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLint64EXT '
      ],
      [
        'y',
        'GLint64EXT '
      ],
      [
        'z',
        'GLint64EXT '
      ]
    ],
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewUniform3i64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3i64vARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint64* '
      ]
    ],
    'binding_name' => 'glUniform3i64vARB_c',
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewUniform3i64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3i64vNV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint64EXT* '
      ]
    ],
    'binding_name' => 'glUniform3i64vNV_c',
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewUniform3i64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3iARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLint '
      ],
      [
        'v1',
        'GLint '
      ],
      [
        'v2',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewUniform3iARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3iv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glUniform3iv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewUniform3iv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3ivARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glUniform3ivARB_c',
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewUniform3ivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3ui' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLuint '
      ],
      [
        'v1',
        'GLuint '
      ],
      [
        'v2',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewUniform3ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3ui64ARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLuint64 '
      ],
      [
        'y',
        'GLuint64 '
      ],
      [
        'z',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewUniform3ui64ARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3ui64NV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLuint64EXT '
      ],
      [
        'y',
        'GLuint64EXT '
      ],
      [
        'z',
        'GLuint64EXT '
      ]
    ],
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewUniform3ui64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3ui64vARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint64* '
      ]
    ],
    'binding_name' => 'glUniform3ui64vARB_c',
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewUniform3ui64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3ui64vNV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glUniform3ui64vNV_c',
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewUniform3ui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3uiEXT' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLuint '
      ],
      [
        'v1',
        'GLuint '
      ],
      [
        'v2',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewUniform3uiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3uiv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glUniform3uiv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewUniform3uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform3uivEXT' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glUniform3uivEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewUniform3uivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4d' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ],
      [
        'w',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_gpu_shader_fp64',
    'glewImpl' => '__glewUniform4d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4dv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glUniform4dv_c',
    'feature' => 'GL_ARB_gpu_shader_fp64',
    'glewImpl' => '__glewUniform4dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4f' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLfloat '
      ],
      [
        'v1',
        'GLfloat '
      ],
      [
        'v2',
        'GLfloat '
      ],
      [
        'v3',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewUniform4f',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4fARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLfloat '
      ],
      [
        'v1',
        'GLfloat '
      ],
      [
        'v2',
        'GLfloat '
      ],
      [
        'v3',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewUniform4fARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4fv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glUniform4fv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewUniform4fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4fvARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glUniform4fvARB_c',
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewUniform4fvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4i' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLint '
      ],
      [
        'v1',
        'GLint '
      ],
      [
        'v2',
        'GLint '
      ],
      [
        'v3',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewUniform4i',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4i64ARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLint64 '
      ],
      [
        'y',
        'GLint64 '
      ],
      [
        'z',
        'GLint64 '
      ],
      [
        'w',
        'GLint64 '
      ]
    ],
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewUniform4i64ARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4i64NV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLint64EXT '
      ],
      [
        'y',
        'GLint64EXT '
      ],
      [
        'z',
        'GLint64EXT '
      ],
      [
        'w',
        'GLint64EXT '
      ]
    ],
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewUniform4i64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4i64vARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint64* '
      ]
    ],
    'binding_name' => 'glUniform4i64vARB_c',
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewUniform4i64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4i64vNV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint64EXT* '
      ]
    ],
    'binding_name' => 'glUniform4i64vNV_c',
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewUniform4i64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4iARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLint '
      ],
      [
        'v1',
        'GLint '
      ],
      [
        'v2',
        'GLint '
      ],
      [
        'v3',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewUniform4iARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4iv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glUniform4iv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewUniform4iv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4ivARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glUniform4ivARB_c',
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewUniform4ivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4ui' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLuint '
      ],
      [
        'v1',
        'GLuint '
      ],
      [
        'v2',
        'GLuint '
      ],
      [
        'v3',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewUniform4ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4ui64ARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLuint64 '
      ],
      [
        'y',
        'GLuint64 '
      ],
      [
        'z',
        'GLuint64 '
      ],
      [
        'w',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewUniform4ui64ARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4ui64NV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'x',
        'GLuint64EXT '
      ],
      [
        'y',
        'GLuint64EXT '
      ],
      [
        'z',
        'GLuint64EXT '
      ],
      [
        'w',
        'GLuint64EXT '
      ]
    ],
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewUniform4ui64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4ui64vARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint64* '
      ]
    ],
    'binding_name' => 'glUniform4ui64vARB_c',
    'feature' => 'GL_ARB_gpu_shader_int64',
    'glewImpl' => '__glewUniform4ui64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4ui64vNV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glUniform4ui64vNV_c',
    'feature' => 'GL_NV_gpu_shader5',
    'glewImpl' => '__glewUniform4ui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4uiEXT' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'v0',
        'GLuint '
      ],
      [
        'v1',
        'GLuint '
      ],
      [
        'v2',
        'GLuint '
      ],
      [
        'v3',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewUniform4uiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4uiv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glUniform4uiv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewUniform4uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniform4uivEXT' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glUniform4uivEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewUniform4uivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformBlockBinding' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'uniformBlockIndex',
        'GLuint '
      ],
      [
        'uniformBlockBinding',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_uniform_buffer_object',
    'glewImpl' => '__glewUniformBlockBinding',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformBufferEXT' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ],
      [
        'location',
        'GLint '
      ],
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_bindable_uniform',
    'glewImpl' => '__glewUniformBufferEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformHandleui64ARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'value',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_ARB_bindless_texture',
    'glewImpl' => '__glewUniformHandleui64ARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformHandleui64NV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'value',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_NV_bindless_texture',
    'glewImpl' => '__glewUniformHandleui64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformHandleui64vARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint64* '
      ]
    ],
    'binding_name' => 'glUniformHandleui64vARB_c',
    'feature' => 'GL_ARB_bindless_texture',
    'glewImpl' => '__glewUniformHandleui64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformHandleui64vNV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint64* '
      ]
    ],
    'binding_name' => 'glUniformHandleui64vNV_c',
    'feature' => 'GL_NV_bindless_texture',
    'glewImpl' => '__glewUniformHandleui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix2dv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glUniformMatrix2dv_c',
    'feature' => 'GL_ARB_gpu_shader_fp64',
    'glewImpl' => '__glewUniformMatrix2dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix2fv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glUniformMatrix2fv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewUniformMatrix2fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix2fvARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glUniformMatrix2fvARB_c',
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewUniformMatrix2fvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix2x3dv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glUniformMatrix2x3dv_c',
    'feature' => 'GL_ARB_gpu_shader_fp64',
    'glewImpl' => '__glewUniformMatrix2x3dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix2x3fv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glUniformMatrix2x3fv_c',
    'feature' => 'GL_VERSION_2_1',
    'glewImpl' => '__glewUniformMatrix2x3fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix2x3fvNV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glUniformMatrix2x3fvNV_c',
    'feature' => 'GL_NV_non_square_matrices',
    'glewImpl' => '__glewUniformMatrix2x3fvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix2x4dv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glUniformMatrix2x4dv_c',
    'feature' => 'GL_ARB_gpu_shader_fp64',
    'glewImpl' => '__glewUniformMatrix2x4dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix2x4fv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glUniformMatrix2x4fv_c',
    'feature' => 'GL_VERSION_2_1',
    'glewImpl' => '__glewUniformMatrix2x4fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix2x4fvNV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glUniformMatrix2x4fvNV_c',
    'feature' => 'GL_NV_non_square_matrices',
    'glewImpl' => '__glewUniformMatrix2x4fvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix3dv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glUniformMatrix3dv_c',
    'feature' => 'GL_ARB_gpu_shader_fp64',
    'glewImpl' => '__glewUniformMatrix3dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix3fv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glUniformMatrix3fv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewUniformMatrix3fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix3fvARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glUniformMatrix3fvARB_c',
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewUniformMatrix3fvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix3x2dv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glUniformMatrix3x2dv_c',
    'feature' => 'GL_ARB_gpu_shader_fp64',
    'glewImpl' => '__glewUniformMatrix3x2dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix3x2fv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glUniformMatrix3x2fv_c',
    'feature' => 'GL_VERSION_2_1',
    'glewImpl' => '__glewUniformMatrix3x2fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix3x2fvNV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glUniformMatrix3x2fvNV_c',
    'feature' => 'GL_NV_non_square_matrices',
    'glewImpl' => '__glewUniformMatrix3x2fvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix3x4dv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glUniformMatrix3x4dv_c',
    'feature' => 'GL_ARB_gpu_shader_fp64',
    'glewImpl' => '__glewUniformMatrix3x4dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix3x4fv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glUniformMatrix3x4fv_c',
    'feature' => 'GL_VERSION_2_1',
    'glewImpl' => '__glewUniformMatrix3x4fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix3x4fvNV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glUniformMatrix3x4fvNV_c',
    'feature' => 'GL_NV_non_square_matrices',
    'glewImpl' => '__glewUniformMatrix3x4fvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix4dv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glUniformMatrix4dv_c',
    'feature' => 'GL_ARB_gpu_shader_fp64',
    'glewImpl' => '__glewUniformMatrix4dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix4fv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glUniformMatrix4fv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewUniformMatrix4fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix4fvARB' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glUniformMatrix4fvARB_c',
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewUniformMatrix4fvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix4x2dv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glUniformMatrix4x2dv_c',
    'feature' => 'GL_ARB_gpu_shader_fp64',
    'glewImpl' => '__glewUniformMatrix4x2dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix4x2fv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glUniformMatrix4x2fv_c',
    'feature' => 'GL_VERSION_2_1',
    'glewImpl' => '__glewUniformMatrix4x2fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix4x2fvNV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glUniformMatrix4x2fvNV_c',
    'feature' => 'GL_NV_non_square_matrices',
    'glewImpl' => '__glewUniformMatrix4x2fvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix4x3dv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glUniformMatrix4x3dv_c',
    'feature' => 'GL_ARB_gpu_shader_fp64',
    'glewImpl' => '__glewUniformMatrix4x3dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix4x3fv' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glUniformMatrix4x3fv_c',
    'feature' => 'GL_VERSION_2_1',
    'glewImpl' => '__glewUniformMatrix4x3fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformMatrix4x3fvNV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'transpose',
        'GLboolean '
      ],
      [
        'value',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glUniformMatrix4x3fvNV_c',
    'feature' => 'GL_NV_non_square_matrices',
    'glewImpl' => '__glewUniformMatrix4x3fvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformSubroutinesuiv' => {
    'argdata' => [
      [
        'shadertype',
        'GLenum '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'indices',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glUniformSubroutinesuiv_c',
    'feature' => 'GL_ARB_shader_subroutine',
    'glewImpl' => '__glewUniformSubroutinesuiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformui64NV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'value',
        'GLuint64EXT '
      ]
    ],
    'feature' => 'GL_NV_shader_buffer_load',
    'glewImpl' => '__glewUniformui64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUniformui64vNV' => {
    'argdata' => [
      [
        'location',
        'GLint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'value',
        'const GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glUniformui64vNV_c',
    'feature' => 'GL_NV_shader_buffer_load',
    'glewImpl' => '__glewUniformui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUnlockArraysEXT' => {
    'feature' => 'GL_EXT_compiled_vertex_array',
    'glewImpl' => '__glewUnlockArraysEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUnmapBuffer' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_VERSION_1_5',
    'glewImpl' => '__glewUnmapBuffer',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glUnmapBufferARB' => {
    'argdata' => [
      [
        'target',
        'GLenum '
      ]
    ],
    'feature' => 'GL_ARB_vertex_buffer_object',
    'glewImpl' => '__glewUnmapBufferARB',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glUnmapNamedBuffer' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewUnmapNamedBuffer',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glUnmapNamedBufferEXT' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewUnmapNamedBufferEXT',
    'glewtype' => 'fun',
    'restype' => 'GLboolean'
  },
  'glUnmapObjectBufferATI' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ATI_map_object_buffer',
    'glewImpl' => '__glewUnmapObjectBufferATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUnmapTexture2DINTEL' => {
    'argdata' => [
      [
        'texture',
        'GLuint '
      ],
      [
        'level',
        'GLint '
      ]
    ],
    'feature' => 'GL_LAYOUT_LINEAR_INTEL',
    'glewImpl' => '__glewUnmapTexture2DINTEL',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUpdateObjectBufferATI' => {
    'argdata' => [
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLuint '
      ],
      [
        'size',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ],
      [
        'preserve',
        'GLenum '
      ]
    ],
    'binding_name' => 'glUpdateObjectBufferATI_c',
    'feature' => 'GL_ATI_vertex_array_object',
    'glewImpl' => '__glewUpdateObjectBufferATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUseProgram' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewUseProgram',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUseProgramObjectARB' => {
    'argdata' => [
      [
        'programObj',
        'GLhandleARB '
      ]
    ],
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewUseProgramObjectARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUseProgramStages' => {
    'argdata' => [
      [
        'pipeline',
        'GLuint '
      ],
      [
        'stages',
        'GLbitfield '
      ],
      [
        'program',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewUseProgramStages',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glUseShaderProgramEXT' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'program',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_separate_shader_objects',
    'glewImpl' => '__glewUseShaderProgramEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVDPAUFiniNV' => {
    'feature' => 'GL_NV_vdpau_interop',
    'glewImpl' => '__glewVDPAUFiniNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVDPAUGetSurfaceivNV' => {
    'argdata' => [
      [
        'surface',
        'GLvdpauSurfaceNV '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'bufSize',
        'GLsizei '
      ],
      [
        'length',
        'GLsizei* '
      ],
      [
        'values',
        'GLint *'
      ]
    ],
    'binding_name' => 'glVDPAUGetSurfaceivNV_c',
    'feature' => 'GL_NV_vdpau_interop',
    'glewImpl' => '__glewVDPAUGetSurfaceivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVDPAUInitNV' => {
    'argdata' => [
      [
        'vdpDevice',
        'const void* '
      ],
      [
        'getProcAddress',
        'const void*'
      ]
    ],
    'binding_name' => 'glVDPAUInitNV_c',
    'feature' => 'GL_NV_vdpau_interop',
    'glewImpl' => '__glewVDPAUInitNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVDPAUIsSurfaceNV' => {
    'argdata' => [
      [
        'surface',
        'GLvdpauSurfaceNV '
      ]
    ],
    'feature' => 'GL_NV_vdpau_interop',
    'glewImpl' => '__glewVDPAUIsSurfaceNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVDPAUMapSurfacesNV' => {
    'argdata' => [
      [
        'numSurfaces',
        'GLsizei '
      ],
      [
        'surfaces',
        'const GLvdpauSurfaceNV* '
      ]
    ],
    'binding_name' => 'glVDPAUMapSurfacesNV_c',
    'feature' => 'GL_NV_vdpau_interop',
    'glewImpl' => '__glewVDPAUMapSurfacesNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVDPAURegisterOutputSurfaceNV' => {
    'argdata' => [
      [
        'vdpSurface',
        'const void* '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'numTextureNames',
        'GLsizei '
      ],
      [
        'textureNames',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glVDPAURegisterOutputSurfaceNV_c',
    'feature' => 'GL_NV_vdpau_interop',
    'glewImpl' => '__glewVDPAURegisterOutputSurfaceNV',
    'glewtype' => 'fun',
    'restype' => 'GLvdpauSurfaceNV'
  },
  'glVDPAURegisterVideoSurfaceNV' => {
    'argdata' => [
      [
        'vdpSurface',
        'const void* '
      ],
      [
        'target',
        'GLenum '
      ],
      [
        'numTextureNames',
        'GLsizei '
      ],
      [
        'textureNames',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glVDPAURegisterVideoSurfaceNV_c',
    'feature' => 'GL_NV_vdpau_interop',
    'glewImpl' => '__glewVDPAURegisterVideoSurfaceNV',
    'glewtype' => 'fun',
    'restype' => 'GLvdpauSurfaceNV'
  },
  'glVDPAUSurfaceAccessNV' => {
    'argdata' => [
      [
        'surface',
        'GLvdpauSurfaceNV '
      ],
      [
        'access',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_vdpau_interop',
    'glewImpl' => '__glewVDPAUSurfaceAccessNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVDPAUUnmapSurfacesNV' => {
    'argdata' => [
      [
        'numSurface',
        'GLsizei '
      ],
      [
        'surfaces',
        'const GLvdpauSurfaceNV* '
      ]
    ],
    'binding_name' => 'glVDPAUUnmapSurfacesNV_c',
    'feature' => 'GL_NV_vdpau_interop',
    'glewImpl' => '__glewVDPAUUnmapSurfacesNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVDPAUUnregisterSurfaceNV' => {
    'argdata' => [
      [
        'surface',
        'GLvdpauSurfaceNV '
      ]
    ],
    'feature' => 'GL_NV_vdpau_interop',
    'glewImpl' => '__glewVDPAUUnregisterSurfaceNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glValidateProgram' => {
    'argdata' => [
      [
        'program',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewValidateProgram',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glValidateProgramARB' => {
    'argdata' => [
      [
        'programObj',
        'GLhandleARB '
      ]
    ],
    'feature' => 'GL_ARB_shader_objects',
    'glewImpl' => '__glewValidateProgramARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glValidateProgramPipeline' => {
    'argdata' => [
      [
        'pipeline',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_separate_shader_objects',
    'glewImpl' => '__glewValidateProgramPipeline',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVariantArrayObjectATI' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ATI_vertex_array_object',
    'glewImpl' => '__glewVariantArrayObjectATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVariantPointerEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLuint '
      ],
      [
        'addr',
        'void *'
      ]
    ],
    'binding_name' => 'glVariantPointerEXT_c',
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewVariantPointerEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVariantbvEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'addr',
        'GLbyte *'
      ]
    ],
    'binding_name' => 'glVariantbvEXT_c',
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewVariantbvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVariantdvEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'addr',
        'GLdouble *'
      ]
    ],
    'binding_name' => 'glVariantdvEXT_c',
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewVariantdvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVariantfvEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'addr',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glVariantfvEXT_c',
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewVariantfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVariantivEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'addr',
        'GLint *'
      ]
    ],
    'binding_name' => 'glVariantivEXT_c',
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewVariantivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVariantsvEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'addr',
        'GLshort *'
      ]
    ],
    'binding_name' => 'glVariantsvEXT_c',
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewVariantsvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVariantubvEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'addr',
        'GLubyte *'
      ]
    ],
    'binding_name' => 'glVariantubvEXT_c',
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewVariantubvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVariantuivEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'addr',
        'GLuint *'
      ]
    ],
    'binding_name' => 'glVariantuivEXT_c',
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewVariantuivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVariantusvEXT' => {
    'argdata' => [
      [
        'id',
        'GLuint '
      ],
      [
        'addr',
        'GLushort *'
      ]
    ],
    'binding_name' => 'glVariantusvEXT_c',
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewVariantusvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVectorOperationSGIX' => {
    'argdata' => [
      [
        'operation',
        'GLenum '
      ]
    ],
    'feature' => 'GL_SGIX_vector_ops',
    'glewImpl' => '__glewVectorOperationSGIX',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex2d' => {
    'argdata' => [
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex2dv' => {
    'argdata' => [
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glVertex2dv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex2f' => {
    'argdata' => [
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex2fv' => {
    'argdata' => [
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glVertex2fv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex2hNV' => {
    'argdata' => [
      [
        'x',
        'GLhalf '
      ],
      [
        'y',
        'GLhalf '
      ]
    ],
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewVertex2hNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex2hvNV' => {
    'argdata' => [
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glVertex2hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewVertex2hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex2i' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex2iv' => {
    'argdata' => [
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glVertex2iv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex2s' => {
    'argdata' => [
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex2sv' => {
    'argdata' => [
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glVertex2sv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex3d' => {
    'argdata' => [
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex3dv' => {
    'argdata' => [
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glVertex3dv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex3f' => {
    'argdata' => [
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex3fv' => {
    'argdata' => [
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glVertex3fv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex3hNV' => {
    'argdata' => [
      [
        'x',
        'GLhalf '
      ],
      [
        'y',
        'GLhalf '
      ],
      [
        'z',
        'GLhalf '
      ]
    ],
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewVertex3hNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex3hvNV' => {
    'argdata' => [
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glVertex3hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewVertex3hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex3i' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'z',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex3iv' => {
    'argdata' => [
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glVertex3iv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex3s' => {
    'argdata' => [
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ],
      [
        'z',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex3sv' => {
    'argdata' => [
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glVertex3sv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex4d' => {
    'argdata' => [
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ],
      [
        'w',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex4dv' => {
    'argdata' => [
      [
        'v',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glVertex4dv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex4f' => {
    'argdata' => [
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ],
      [
        'w',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex4fv' => {
    'argdata' => [
      [
        'v',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glVertex4fv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex4hNV' => {
    'argdata' => [
      [
        'x',
        'GLhalf '
      ],
      [
        'y',
        'GLhalf '
      ],
      [
        'z',
        'GLhalf '
      ],
      [
        'w',
        'GLhalf '
      ]
    ],
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewVertex4hNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex4hvNV' => {
    'argdata' => [
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glVertex4hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewVertex4hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex4i' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'z',
        'GLint '
      ],
      [
        'w',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex4iv' => {
    'argdata' => [
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glVertex4iv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex4s' => {
    'argdata' => [
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ],
      [
        'z',
        'GLshort '
      ],
      [
        'w',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertex4sv' => {
    'argdata' => [
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glVertex4sv_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayAttribBinding' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'attribindex',
        'GLuint '
      ],
      [
        'bindingindex',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewVertexArrayAttribBinding',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayAttribFormat' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'attribindex',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'normalized',
        'GLboolean '
      ],
      [
        'relativeoffset',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewVertexArrayAttribFormat',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayAttribIFormat' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'attribindex',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'relativeoffset',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewVertexArrayAttribIFormat',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayAttribLFormat' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'attribindex',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'relativeoffset',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewVertexArrayAttribLFormat',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayBindVertexBufferEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'bindingindex',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_vertex_attrib_binding',
    'glewImpl' => '__glewVertexArrayBindVertexBufferEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayBindingDivisor' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'bindingindex',
        'GLuint '
      ],
      [
        'divisor',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewVertexArrayBindingDivisor',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayColorOffsetEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'offset',
        'GLintptr '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewVertexArrayColorOffsetEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayEdgeFlagOffsetEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'offset',
        'GLintptr '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewVertexArrayEdgeFlagOffsetEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayElementBuffer' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewVertexArrayElementBuffer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayFogCoordOffsetEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'offset',
        'GLintptr '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewVertexArrayFogCoordOffsetEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayIndexOffsetEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'offset',
        'GLintptr '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewVertexArrayIndexOffsetEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayMultiTexCoordOffsetEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'texunit',
        'GLenum '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'offset',
        'GLintptr '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewVertexArrayMultiTexCoordOffsetEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayNormalOffsetEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'offset',
        'GLintptr '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewVertexArrayNormalOffsetEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayParameteriAPPLE' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_APPLE_vertex_array_range',
    'glewImpl' => '__glewVertexArrayParameteriAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayRangeAPPLE' => {
    'argdata' => [
      [
        'length',
        'GLsizei '
      ],
      [
        'pointer',
        'void *'
      ]
    ],
    'binding_name' => 'glVertexArrayRangeAPPLE_c',
    'feature' => 'GL_APPLE_vertex_array_range',
    'glewImpl' => '__glewVertexArrayRangeAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayRangeNV' => {
    'argdata' => [
      [
        'length',
        'GLsizei '
      ],
      [
        'pointer',
        'void *'
      ]
    ],
    'binding_name' => 'glVertexArrayRangeNV_c',
    'feature' => 'GL_NV_vertex_array_range',
    'glewImpl' => '__glewVertexArrayRangeNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArraySecondaryColorOffsetEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'offset',
        'GLintptr '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewVertexArraySecondaryColorOffsetEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayTexCoordOffsetEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'offset',
        'GLintptr '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewVertexArrayTexCoordOffsetEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayVertexAttribBindingEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'attribindex',
        'GLuint '
      ],
      [
        'bindingindex',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_attrib_binding',
    'glewImpl' => '__glewVertexArrayVertexAttribBindingEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayVertexAttribDivisorEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'divisor',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewVertexArrayVertexAttribDivisorEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayVertexAttribFormatEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'attribindex',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'normalized',
        'GLboolean '
      ],
      [
        'relativeoffset',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_attrib_binding',
    'glewImpl' => '__glewVertexArrayVertexAttribFormatEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayVertexAttribIFormatEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'attribindex',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'relativeoffset',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_attrib_binding',
    'glewImpl' => '__glewVertexArrayVertexAttribIFormatEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayVertexAttribIOffsetEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'offset',
        'GLintptr '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewVertexArrayVertexAttribIOffsetEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayVertexAttribLFormatEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'attribindex',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'relativeoffset',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_attrib_binding',
    'glewImpl' => '__glewVertexArrayVertexAttribLFormatEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayVertexAttribLOffsetEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'offset',
        'GLintptr '
      ]
    ],
    'feature' => 'GL_EXT_vertex_attrib_64bit',
    'glewImpl' => '__glewVertexArrayVertexAttribLOffsetEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayVertexAttribOffsetEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'index',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'normalized',
        'GLboolean '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'offset',
        'GLintptr '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewVertexArrayVertexAttribOffsetEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayVertexBindingDivisorEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'bindingindex',
        'GLuint '
      ],
      [
        'divisor',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_attrib_binding',
    'glewImpl' => '__glewVertexArrayVertexBindingDivisorEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayVertexBuffer' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'bindingindex',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLintptr '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewVertexArrayVertexBuffer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayVertexBuffers' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'first',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'buffers',
        'const GLuint* '
      ],
      [
        'offsets',
        'const GLintptr *'
      ],
      [
        'strides',
        'const GLsizei *'
      ]
    ],
    'binding_name' => 'glVertexArrayVertexBuffers_c',
    'feature' => 'GL_ARB_direct_state_access',
    'glewImpl' => '__glewVertexArrayVertexBuffers',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexArrayVertexOffsetEXT' => {
    'argdata' => [
      [
        'vaobj',
        'GLuint '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'offset',
        'GLintptr '
      ]
    ],
    'feature' => 'GL_EXT_direct_state_access',
    'glewImpl' => '__glewVertexArrayVertexOffsetEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib1d' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib1d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib1dARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib1dARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib1dNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib1dNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib1dv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttrib1dv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib1dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib1dvARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttrib1dvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib1dvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib1dvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttrib1dvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib1dvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib1f' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib1f',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib1fARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib1fARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib1fNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib1fNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib1fv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glVertexAttrib1fv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib1fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib1fvARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glVertexAttrib1fvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib1fvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib1fvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glVertexAttrib1fvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib1fvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib1hNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLhalf '
      ]
    ],
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewVertexAttrib1hNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib1hvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glVertexAttrib1hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewVertexAttrib1hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib1s' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib1s',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib1sARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLshort '
      ]
    ],
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib1sARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib1sNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLshort '
      ]
    ],
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib1sNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib1sv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glVertexAttrib1sv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib1sv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib1svARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glVertexAttrib1svARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib1svARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib1svNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glVertexAttrib1svNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib1svNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib2d' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib2d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib2dARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib2dARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib2dNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib2dNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib2dv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttrib2dv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib2dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib2dvARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttrib2dvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib2dvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib2dvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttrib2dvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib2dvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib2f' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib2f',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib2fARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib2fARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib2fNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib2fNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib2fv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glVertexAttrib2fv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib2fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib2fvARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glVertexAttrib2fvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib2fvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib2fvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glVertexAttrib2fvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib2fvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib2hNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLhalf '
      ],
      [
        'y',
        'GLhalf '
      ]
    ],
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewVertexAttrib2hNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib2hvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glVertexAttrib2hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewVertexAttrib2hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib2s' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib2s',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib2sARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ]
    ],
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib2sARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib2sNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ]
    ],
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib2sNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib2sv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glVertexAttrib2sv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib2sv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib2svARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glVertexAttrib2svARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib2svARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib2svNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glVertexAttrib2svNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib2svNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib3d' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib3d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib3dARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib3dARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib3dNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib3dNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib3dv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttrib3dv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib3dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib3dvARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttrib3dvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib3dvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib3dvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttrib3dvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib3dvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib3f' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib3f',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib3fARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib3fARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib3fNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib3fNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib3fv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glVertexAttrib3fv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib3fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib3fvARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glVertexAttrib3fvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib3fvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib3fvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glVertexAttrib3fvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib3fvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib3hNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLhalf '
      ],
      [
        'y',
        'GLhalf '
      ],
      [
        'z',
        'GLhalf '
      ]
    ],
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewVertexAttrib3hNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib3hvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glVertexAttrib3hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewVertexAttrib3hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib3s' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ],
      [
        'z',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib3s',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib3sARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ],
      [
        'z',
        'GLshort '
      ]
    ],
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib3sARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib3sNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ],
      [
        'z',
        'GLshort '
      ]
    ],
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib3sNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib3sv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glVertexAttrib3sv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib3sv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib3svARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glVertexAttrib3svARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib3svARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib3svNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glVertexAttrib3svNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib3svNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4Nbv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLbyte* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4Nbv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib4Nbv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4NbvARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLbyte* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4NbvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib4NbvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4Niv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4Niv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib4Niv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4NivARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4NivARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib4NivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4Nsv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4Nsv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib4Nsv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4NsvARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4NsvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib4NsvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4Nub' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLubyte '
      ],
      [
        'y',
        'GLubyte '
      ],
      [
        'z',
        'GLubyte '
      ],
      [
        'w',
        'GLubyte '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib4Nub',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4NubARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLubyte '
      ],
      [
        'y',
        'GLubyte '
      ],
      [
        'z',
        'GLubyte '
      ],
      [
        'w',
        'GLubyte '
      ]
    ],
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib4NubARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4Nubv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLubyte* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4Nubv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib4Nubv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4NubvARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLubyte* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4NubvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib4NubvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4Nuiv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4Nuiv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib4Nuiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4NuivARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4NuivARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib4NuivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4Nusv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLushort* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4Nusv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib4Nusv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4NusvARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLushort* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4NusvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib4NusvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4bv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLbyte* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4bv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib4bv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4bvARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLbyte* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4bvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib4bvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4d' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ],
      [
        'w',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib4d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4dARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ],
      [
        'w',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib4dARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4dNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ],
      [
        'w',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib4dNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4dv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4dv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib4dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4dvARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4dvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib4dvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4dvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4dvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib4dvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4f' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ],
      [
        'w',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib4f',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4fARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ],
      [
        'w',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib4fARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4fNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ],
      [
        'w',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib4fNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4fv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4fv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib4fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4fvARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4fvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib4fvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4fvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4fvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib4fvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4hNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLhalf '
      ],
      [
        'y',
        'GLhalf '
      ],
      [
        'z',
        'GLhalf '
      ],
      [
        'w',
        'GLhalf '
      ]
    ],
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewVertexAttrib4hNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4hvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewVertexAttrib4hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4iv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4iv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib4iv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4ivARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4ivARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib4ivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4s' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ],
      [
        'z',
        'GLshort '
      ],
      [
        'w',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib4s',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4sARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ],
      [
        'z',
        'GLshort '
      ],
      [
        'w',
        'GLshort '
      ]
    ],
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib4sARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4sNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ],
      [
        'z',
        'GLshort '
      ],
      [
        'w',
        'GLshort '
      ]
    ],
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib4sNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4sv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4sv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib4sv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4svARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4svARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib4svARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4svNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4svNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib4svNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4ubNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLubyte '
      ],
      [
        'y',
        'GLubyte '
      ],
      [
        'z',
        'GLubyte '
      ],
      [
        'w',
        'GLubyte '
      ]
    ],
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib4ubNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4ubv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLubyte* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4ubv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib4ubv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4ubvARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLubyte* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4ubvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib4ubvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4ubvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLubyte* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4ubvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttrib4ubvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4uiv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4uiv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib4uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4uivARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4uivARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib4uivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4usv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLushort* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4usv_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttrib4usv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttrib4usvARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLushort* '
      ]
    ],
    'binding_name' => 'glVertexAttrib4usvARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttrib4usvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribArrayObjectATI' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'normalized',
        'GLboolean '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'buffer',
        'GLuint '
      ],
      [
        'offset',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ATI_vertex_attrib_array_object',
    'glewImpl' => '__glewVertexAttribArrayObjectATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribBinding' => {
    'argdata' => [
      [
        'attribindex',
        'GLuint '
      ],
      [
        'bindingindex',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_attrib_binding',
    'glewImpl' => '__glewVertexAttribBinding',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribDivisor' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'divisor',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_3_3',
    'glewImpl' => '__glewVertexAttribDivisor',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribDivisorANGLE' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'divisor',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ANGLE_instanced_arrays',
    'glewImpl' => '__glewVertexAttribDivisorANGLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribDivisorARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'divisor',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_instanced_arrays',
    'glewImpl' => '__glewVertexAttribDivisorARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribDivisorEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'divisor',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_instanced_arrays',
    'glewImpl' => '__glewVertexAttribDivisorEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribDivisorNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'divisor',
        'GLuint '
      ]
    ],
    'feature' => 'GL_NV_instanced_arrays',
    'glewImpl' => '__glewVertexAttribDivisorNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribFormat' => {
    'argdata' => [
      [
        'attribindex',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'normalized',
        'GLboolean '
      ],
      [
        'relativeoffset',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_attrib_binding',
    'glewImpl' => '__glewVertexAttribFormat',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribFormatNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'normalized',
        'GLboolean '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NV_vertex_buffer_unified_memory',
    'glewImpl' => '__glewVertexAttribFormatNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI1i' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v0',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewVertexAttribI1i',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI1iEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewVertexAttribI1iEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI1iv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v0',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glVertexAttribI1iv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewVertexAttribI1iv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI1ivEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glVertexAttribI1ivEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewVertexAttribI1ivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI1ui' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v0',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewVertexAttribI1ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI1uiEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewVertexAttribI1uiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI1uiv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v0',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glVertexAttribI1uiv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewVertexAttribI1uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI1uivEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glVertexAttribI1uivEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewVertexAttribI1uivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI2i' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v0',
        'GLint '
      ],
      [
        'v1',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewVertexAttribI2i',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI2iEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewVertexAttribI2iEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI2iv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v0',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glVertexAttribI2iv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewVertexAttribI2iv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI2ivEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glVertexAttribI2ivEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewVertexAttribI2ivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI2ui' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v0',
        'GLuint '
      ],
      [
        'v1',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewVertexAttribI2ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI2uiEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLuint '
      ],
      [
        'y',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewVertexAttribI2uiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI2uiv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v0',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glVertexAttribI2uiv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewVertexAttribI2uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI2uivEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glVertexAttribI2uivEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewVertexAttribI2uivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI3i' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v0',
        'GLint '
      ],
      [
        'v1',
        'GLint '
      ],
      [
        'v2',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewVertexAttribI3i',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI3iEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'z',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewVertexAttribI3iEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI3iv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v0',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glVertexAttribI3iv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewVertexAttribI3iv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI3ivEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glVertexAttribI3ivEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewVertexAttribI3ivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI3ui' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v0',
        'GLuint '
      ],
      [
        'v1',
        'GLuint '
      ],
      [
        'v2',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewVertexAttribI3ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI3uiEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLuint '
      ],
      [
        'y',
        'GLuint '
      ],
      [
        'z',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewVertexAttribI3uiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI3uiv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v0',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glVertexAttribI3uiv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewVertexAttribI3uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI3uivEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glVertexAttribI3uivEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewVertexAttribI3uivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI4bv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v0',
        'const GLbyte* '
      ]
    ],
    'binding_name' => 'glVertexAttribI4bv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewVertexAttribI4bv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI4bvEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLbyte *'
      ]
    ],
    'binding_name' => 'glVertexAttribI4bvEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewVertexAttribI4bvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI4i' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v0',
        'GLint '
      ],
      [
        'v1',
        'GLint '
      ],
      [
        'v2',
        'GLint '
      ],
      [
        'v3',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewVertexAttribI4i',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI4iEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'z',
        'GLint '
      ],
      [
        'w',
        'GLint '
      ]
    ],
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewVertexAttribI4iEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI4iv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v0',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glVertexAttribI4iv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewVertexAttribI4iv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI4ivEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glVertexAttribI4ivEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewVertexAttribI4ivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI4sv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v0',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glVertexAttribI4sv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewVertexAttribI4sv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI4svEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glVertexAttribI4svEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewVertexAttribI4svEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI4ubv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v0',
        'const GLubyte* '
      ]
    ],
    'binding_name' => 'glVertexAttribI4ubv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewVertexAttribI4ubv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI4ubvEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLubyte *'
      ]
    ],
    'binding_name' => 'glVertexAttribI4ubvEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewVertexAttribI4ubvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI4ui' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v0',
        'GLuint '
      ],
      [
        'v1',
        'GLuint '
      ],
      [
        'v2',
        'GLuint '
      ],
      [
        'v3',
        'GLuint '
      ]
    ],
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewVertexAttribI4ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI4uiEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLuint '
      ],
      [
        'y',
        'GLuint '
      ],
      [
        'z',
        'GLuint '
      ],
      [
        'w',
        'GLuint '
      ]
    ],
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewVertexAttribI4uiEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI4uiv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v0',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glVertexAttribI4uiv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewVertexAttribI4uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI4uivEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLuint *'
      ]
    ],
    'binding_name' => 'glVertexAttribI4uivEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewVertexAttribI4uivEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI4usv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v0',
        'const GLushort* '
      ]
    ],
    'binding_name' => 'glVertexAttribI4usv_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewVertexAttribI4usv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribI4usvEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLushort *'
      ]
    ],
    'binding_name' => 'glVertexAttribI4usvEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewVertexAttribI4usvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribIFormat' => {
    'argdata' => [
      [
        'attribindex',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'relativeoffset',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_attrib_binding',
    'glewImpl' => '__glewVertexAttribIFormat',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribIFormatNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NV_vertex_buffer_unified_memory',
    'glewImpl' => '__glewVertexAttribIFormatNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribIPointer' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'const void*'
      ]
    ],
    'binding_name' => 'glVertexAttribIPointer_c',
    'feature' => 'GL_VERSION_3_0',
    'glewImpl' => '__glewVertexAttribIPointer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribIPointerEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glVertexAttribIPointerEXT_c',
    'feature' => 'GL_EXT_gpu_shader4',
    'glewImpl' => '__glewVertexAttribIPointerEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL1d' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_vertex_attrib_64bit',
    'glewImpl' => '__glewVertexAttribL1d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL1dEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_EXT_vertex_attrib_64bit',
    'glewImpl' => '__glewVertexAttribL1dEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL1dv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttribL1dv_c',
    'feature' => 'GL_ARB_vertex_attrib_64bit',
    'glewImpl' => '__glewVertexAttribL1dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL1dvEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttribL1dvEXT_c',
    'feature' => 'GL_EXT_vertex_attrib_64bit',
    'glewImpl' => '__glewVertexAttribL1dvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL1i64NV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLint64EXT '
      ]
    ],
    'feature' => 'GL_NV_vertex_attrib_integer_64bit',
    'glewImpl' => '__glewVertexAttribL1i64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL1i64vNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLint64EXT* '
      ]
    ],
    'binding_name' => 'glVertexAttribL1i64vNV_c',
    'feature' => 'GL_NV_vertex_attrib_integer_64bit',
    'glewImpl' => '__glewVertexAttribL1i64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL1ui64ARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLuint64EXT '
      ]
    ],
    'feature' => 'GL_ARB_bindless_texture',
    'glewImpl' => '__glewVertexAttribL1ui64ARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL1ui64NV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLuint64EXT '
      ]
    ],
    'feature' => 'GL_NV_vertex_attrib_integer_64bit',
    'glewImpl' => '__glewVertexAttribL1ui64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL1ui64vARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glVertexAttribL1ui64vARB_c',
    'feature' => 'GL_ARB_bindless_texture',
    'glewImpl' => '__glewVertexAttribL1ui64vARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL1ui64vNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glVertexAttribL1ui64vNV_c',
    'feature' => 'GL_NV_vertex_attrib_integer_64bit',
    'glewImpl' => '__glewVertexAttribL1ui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL2d' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_vertex_attrib_64bit',
    'glewImpl' => '__glewVertexAttribL2d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL2dEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_EXT_vertex_attrib_64bit',
    'glewImpl' => '__glewVertexAttribL2dEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL2dv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttribL2dv_c',
    'feature' => 'GL_ARB_vertex_attrib_64bit',
    'glewImpl' => '__glewVertexAttribL2dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL2dvEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttribL2dvEXT_c',
    'feature' => 'GL_EXT_vertex_attrib_64bit',
    'glewImpl' => '__glewVertexAttribL2dvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL2i64NV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLint64EXT '
      ],
      [
        'y',
        'GLint64EXT '
      ]
    ],
    'feature' => 'GL_NV_vertex_attrib_integer_64bit',
    'glewImpl' => '__glewVertexAttribL2i64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL2i64vNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLint64EXT* '
      ]
    ],
    'binding_name' => 'glVertexAttribL2i64vNV_c',
    'feature' => 'GL_NV_vertex_attrib_integer_64bit',
    'glewImpl' => '__glewVertexAttribL2i64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL2ui64NV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLuint64EXT '
      ],
      [
        'y',
        'GLuint64EXT '
      ]
    ],
    'feature' => 'GL_NV_vertex_attrib_integer_64bit',
    'glewImpl' => '__glewVertexAttribL2ui64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL2ui64vNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glVertexAttribL2ui64vNV_c',
    'feature' => 'GL_NV_vertex_attrib_integer_64bit',
    'glewImpl' => '__glewVertexAttribL2ui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL3d' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_vertex_attrib_64bit',
    'glewImpl' => '__glewVertexAttribL3d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL3dEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_EXT_vertex_attrib_64bit',
    'glewImpl' => '__glewVertexAttribL3dEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL3dv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttribL3dv_c',
    'feature' => 'GL_ARB_vertex_attrib_64bit',
    'glewImpl' => '__glewVertexAttribL3dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL3dvEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttribL3dvEXT_c',
    'feature' => 'GL_EXT_vertex_attrib_64bit',
    'glewImpl' => '__glewVertexAttribL3dvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL3i64NV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLint64EXT '
      ],
      [
        'y',
        'GLint64EXT '
      ],
      [
        'z',
        'GLint64EXT '
      ]
    ],
    'feature' => 'GL_NV_vertex_attrib_integer_64bit',
    'glewImpl' => '__glewVertexAttribL3i64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL3i64vNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLint64EXT* '
      ]
    ],
    'binding_name' => 'glVertexAttribL3i64vNV_c',
    'feature' => 'GL_NV_vertex_attrib_integer_64bit',
    'glewImpl' => '__glewVertexAttribL3i64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL3ui64NV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLuint64EXT '
      ],
      [
        'y',
        'GLuint64EXT '
      ],
      [
        'z',
        'GLuint64EXT '
      ]
    ],
    'feature' => 'GL_NV_vertex_attrib_integer_64bit',
    'glewImpl' => '__glewVertexAttribL3ui64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL3ui64vNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glVertexAttribL3ui64vNV_c',
    'feature' => 'GL_NV_vertex_attrib_integer_64bit',
    'glewImpl' => '__glewVertexAttribL3ui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL4d' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ],
      [
        'w',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_vertex_attrib_64bit',
    'glewImpl' => '__glewVertexAttribL4d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL4dEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ],
      [
        'w',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_EXT_vertex_attrib_64bit',
    'glewImpl' => '__glewVertexAttribL4dEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL4dv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttribL4dv_c',
    'feature' => 'GL_ARB_vertex_attrib_64bit',
    'glewImpl' => '__glewVertexAttribL4dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL4dvEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttribL4dvEXT_c',
    'feature' => 'GL_EXT_vertex_attrib_64bit',
    'glewImpl' => '__glewVertexAttribL4dvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL4i64NV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLint64EXT '
      ],
      [
        'y',
        'GLint64EXT '
      ],
      [
        'z',
        'GLint64EXT '
      ],
      [
        'w',
        'GLint64EXT '
      ]
    ],
    'feature' => 'GL_NV_vertex_attrib_integer_64bit',
    'glewImpl' => '__glewVertexAttribL4i64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL4i64vNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLint64EXT* '
      ]
    ],
    'binding_name' => 'glVertexAttribL4i64vNV_c',
    'feature' => 'GL_NV_vertex_attrib_integer_64bit',
    'glewImpl' => '__glewVertexAttribL4i64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL4ui64NV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLuint64EXT '
      ],
      [
        'y',
        'GLuint64EXT '
      ],
      [
        'z',
        'GLuint64EXT '
      ],
      [
        'w',
        'GLuint64EXT '
      ]
    ],
    'feature' => 'GL_NV_vertex_attrib_integer_64bit',
    'glewImpl' => '__glewVertexAttribL4ui64NV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribL4ui64vNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLuint64EXT* '
      ]
    ],
    'binding_name' => 'glVertexAttribL4ui64vNV_c',
    'feature' => 'GL_NV_vertex_attrib_integer_64bit',
    'glewImpl' => '__glewVertexAttribL4ui64vNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribLFormat' => {
    'argdata' => [
      [
        'attribindex',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'relativeoffset',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_attrib_binding',
    'glewImpl' => '__glewVertexAttribLFormat',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribLFormatNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NV_vertex_attrib_integer_64bit',
    'glewImpl' => '__glewVertexAttribLFormatNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribLPointer' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'const void* '
      ]
    ],
    'binding_name' => 'glVertexAttribLPointer_c',
    'feature' => 'GL_ARB_vertex_attrib_64bit',
    'glewImpl' => '__glewVertexAttribLPointer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribLPointerEXT' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glVertexAttribLPointerEXT_c',
    'feature' => 'GL_EXT_vertex_attrib_64bit',
    'glewImpl' => '__glewVertexAttribLPointerEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribP1ui' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'normalized',
        'GLboolean '
      ],
      [
        'value',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewVertexAttribP1ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribP1uiv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'normalized',
        'GLboolean '
      ],
      [
        'value',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glVertexAttribP1uiv_c',
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewVertexAttribP1uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribP2ui' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'normalized',
        'GLboolean '
      ],
      [
        'value',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewVertexAttribP2ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribP2uiv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'normalized',
        'GLboolean '
      ],
      [
        'value',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glVertexAttribP2uiv_c',
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewVertexAttribP2uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribP3ui' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'normalized',
        'GLboolean '
      ],
      [
        'value',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewVertexAttribP3ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribP3uiv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'normalized',
        'GLboolean '
      ],
      [
        'value',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glVertexAttribP3uiv_c',
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewVertexAttribP3uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribP4ui' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'normalized',
        'GLboolean '
      ],
      [
        'value',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewVertexAttribP4ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribP4uiv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'normalized',
        'GLboolean '
      ],
      [
        'value',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glVertexAttribP4uiv_c',
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewVertexAttribP4uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribParameteriAMD' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_AMD_interleaved_elements',
    'glewImpl' => '__glewVertexAttribParameteriAMD',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribPointer' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'normalized',
        'GLboolean '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'const void* '
      ]
    ],
    'binding_name' => 'glVertexAttribPointer_c',
    'feature' => 'GL_VERSION_2_0',
    'glewImpl' => '__glewVertexAttribPointer',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribPointerARB' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'normalized',
        'GLboolean '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glVertexAttribPointerARB_c',
    'feature' => 'GL_ARB_vertex_program',
    'glewImpl' => '__glewVertexAttribPointerARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribPointerNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glVertexAttribPointerNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttribPointerNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribs1dvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttribs1dvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttribs1dvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribs1fvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glVertexAttribs1fvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttribs1fvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribs1hvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glVertexAttribs1hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewVertexAttribs1hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribs1svNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'v',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glVertexAttribs1svNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttribs1svNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribs2dvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttribs2dvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttribs2dvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribs2fvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glVertexAttribs2fvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttribs2fvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribs2hvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glVertexAttribs2hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewVertexAttribs2hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribs2svNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'v',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glVertexAttribs2svNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttribs2svNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribs3dvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttribs3dvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttribs3dvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribs3fvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glVertexAttribs3fvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttribs3fvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribs3hvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glVertexAttribs3hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewVertexAttribs3hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribs3svNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'v',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glVertexAttribs3svNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttribs3svNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribs4dvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'v',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVertexAttribs4dvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttribs4dvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribs4fvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'v',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glVertexAttribs4fvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttribs4fvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribs4hvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'v',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glVertexAttribs4hvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewVertexAttribs4hvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribs4svNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'v',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glVertexAttribs4svNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttribs4svNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexAttribs4ubvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'n',
        'GLsizei '
      ],
      [
        'v',
        'const GLubyte* '
      ]
    ],
    'binding_name' => 'glVertexAttribs4ubvNV_c',
    'feature' => 'GL_NV_vertex_program',
    'glewImpl' => '__glewVertexAttribs4ubvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexBindingDivisor' => {
    'argdata' => [
      [
        'bindingindex',
        'GLuint '
      ],
      [
        'divisor',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_attrib_binding',
    'glewImpl' => '__glewVertexBindingDivisor',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexBlendARB' => {
    'argdata' => [
      [
        'count',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_blend',
    'glewImpl' => '__glewVertexBlendARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexBlendEnvfATI' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexBlendEnvfATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexBlendEnviATI' => {
    'argdata' => [
      [
        'pname',
        'GLenum '
      ],
      [
        'param',
        'GLint '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexBlendEnviATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexFormatNV' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_NV_vertex_buffer_unified_memory',
    'glewImpl' => '__glewVertexFormatNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexP2ui' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'value',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewVertexP2ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexP2uiv' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'value',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glVertexP2uiv_c',
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewVertexP2uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexP3ui' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'value',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewVertexP3ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexP3uiv' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'value',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glVertexP3uiv_c',
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewVertexP3uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexP4ui' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'value',
        'GLuint '
      ]
    ],
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewVertexP4ui',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexP4uiv' => {
    'argdata' => [
      [
        'type',
        'GLenum '
      ],
      [
        'value',
        'const GLuint* '
      ]
    ],
    'binding_name' => 'glVertexP4uiv_c',
    'feature' => 'GL_ARB_vertex_type_2_10_10_10_rev',
    'glewImpl' => '__glewVertexP4uiv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexPointer' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glVertexPointer_c',
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexPointerEXT' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'pointer',
        'const void *'
      ]
    ],
    'binding_name' => 'glVertexPointerEXT_c',
    'feature' => 'GL_EXT_vertex_array',
    'glewImpl' => '__glewVertexPointerEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexPointerListIBM' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLint '
      ],
      [
        'pointer',
        'const void** '
      ],
      [
        'ptrstride',
        'GLint '
      ]
    ],
    'binding_name' => 'glVertexPointerListIBM_c',
    'feature' => 'GL_IBM_vertex_array_lists',
    'glewImpl' => '__glewVertexPointerListIBM',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexPointervINTEL' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'pointer',
        'const void** '
      ]
    ],
    'binding_name' => 'glVertexPointervINTEL_c',
    'feature' => 'GL_INTEL_parallel_arrays',
    'glewImpl' => '__glewVertexPointervINTEL',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream1dATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'x',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream1dATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream1dvATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'coords',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glVertexStream1dvATI_c',
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream1dvATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream1fATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'x',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream1fATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream1fvATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'coords',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glVertexStream1fvATI_c',
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream1fvATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream1iATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'x',
        'GLint '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream1iATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream1ivATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'coords',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glVertexStream1ivATI_c',
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream1ivATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream1sATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'x',
        'GLshort '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream1sATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream1svATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'coords',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glVertexStream1svATI_c',
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream1svATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream2dATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream2dATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream2dvATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'coords',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glVertexStream2dvATI_c',
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream2dvATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream2fATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream2fATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream2fvATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'coords',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glVertexStream2fvATI_c',
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream2fvATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream2iATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream2iATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream2ivATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'coords',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glVertexStream2ivATI_c',
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream2ivATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream2sATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream2sATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream2svATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'coords',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glVertexStream2svATI_c',
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream2svATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream3dATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream3dATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream3dvATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'coords',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glVertexStream3dvATI_c',
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream3dvATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream3fATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream3fATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream3fvATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'coords',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glVertexStream3fvATI_c',
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream3fvATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream3iATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'z',
        'GLint '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream3iATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream3ivATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'coords',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glVertexStream3ivATI_c',
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream3ivATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream3sATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ],
      [
        'z',
        'GLshort '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream3sATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream3svATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'coords',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glVertexStream3svATI_c',
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream3svATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream4dATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ],
      [
        'w',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream4dATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream4dvATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'coords',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glVertexStream4dvATI_c',
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream4dvATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream4fATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ],
      [
        'w',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream4fATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream4fvATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'coords',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glVertexStream4fvATI_c',
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream4fvATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream4iATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'z',
        'GLint '
      ],
      [
        'w',
        'GLint '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream4iATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream4ivATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'coords',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glVertexStream4ivATI_c',
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream4ivATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream4sATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ],
      [
        'z',
        'GLshort '
      ],
      [
        'w',
        'GLshort '
      ]
    ],
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream4sATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexStream4svATI' => {
    'argdata' => [
      [
        'stream',
        'GLenum '
      ],
      [
        'coords',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glVertexStream4svATI_c',
    'feature' => 'GL_ATI_vertex_streams',
    'glewImpl' => '__glewVertexStream4svATI',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexWeightPointerEXT' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'void *'
      ]
    ],
    'binding_name' => 'glVertexWeightPointerEXT_c',
    'feature' => 'GL_EXT_vertex_weighting',
    'glewImpl' => '__glewVertexWeightPointerEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexWeightfEXT' => {
    'argdata' => [
      [
        'weight',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_EXT_vertex_weighting',
    'glewImpl' => '__glewVertexWeightfEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexWeightfvEXT' => {
    'argdata' => [
      [
        'weight',
        'GLfloat* '
      ]
    ],
    'binding_name' => 'glVertexWeightfvEXT_c',
    'feature' => 'GL_EXT_vertex_weighting',
    'glewImpl' => '__glewVertexWeightfvEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexWeighthNV' => {
    'argdata' => [
      [
        'weight',
        'GLhalf '
      ]
    ],
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewVertexWeighthNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVertexWeighthvNV' => {
    'argdata' => [
      [
        'weight',
        'const GLhalf* '
      ]
    ],
    'binding_name' => 'glVertexWeighthvNV_c',
    'feature' => 'GL_NV_half_float',
    'glewImpl' => '__glewVertexWeighthvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVideoCaptureNV' => {
    'argdata' => [
      [
        'video_capture_slot',
        'GLuint '
      ],
      [
        'sequence_num',
        'GLuint* '
      ],
      [
        'capture_time',
        'GLuint64EXT *'
      ]
    ],
    'binding_name' => 'glVideoCaptureNV_c',
    'feature' => 'GL_NV_video_capture',
    'glewImpl' => '__glewVideoCaptureNV',
    'glewtype' => 'fun',
    'restype' => 'GLenum'
  },
  'glVideoCaptureStreamParameterdvNV' => {
    'argdata' => [
      [
        'video_capture_slot',
        'GLuint '
      ],
      [
        'stream',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glVideoCaptureStreamParameterdvNV_c',
    'feature' => 'GL_NV_video_capture',
    'glewImpl' => '__glewVideoCaptureStreamParameterdvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVideoCaptureStreamParameterfvNV' => {
    'argdata' => [
      [
        'video_capture_slot',
        'GLuint '
      ],
      [
        'stream',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glVideoCaptureStreamParameterfvNV_c',
    'feature' => 'GL_NV_video_capture',
    'glewImpl' => '__glewVideoCaptureStreamParameterfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glVideoCaptureStreamParameterivNV' => {
    'argdata' => [
      [
        'video_capture_slot',
        'GLuint '
      ],
      [
        'stream',
        'GLuint '
      ],
      [
        'pname',
        'GLenum '
      ],
      [
        'params',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glVideoCaptureStreamParameterivNV_c',
    'feature' => 'GL_NV_video_capture',
    'glewImpl' => '__glewVideoCaptureStreamParameterivNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glViewport' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'width',
        'GLsizei '
      ],
      [
        'height',
        'GLsizei '
      ]
    ],
    'feature' => 'GL_VERSION_1_1',
    'glewImpl' => undef,
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glViewportArrayv' => {
    'argdata' => [
      [
        'first',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'v',
        'const GLfloat * '
      ]
    ],
    'binding_name' => 'glViewportArrayv_c',
    'feature' => 'GL_ARB_viewport_array',
    'glewImpl' => '__glewViewportArrayv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glViewportArrayvNV' => {
    'argdata' => [
      [
        'first',
        'GLuint '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'v',
        'const GLfloat * '
      ]
    ],
    'binding_name' => 'glViewportArrayvNV_c',
    'feature' => 'GL_NV_viewport_array',
    'glewImpl' => '__glewViewportArrayvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glViewportIndexedf' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'w',
        'GLfloat '
      ],
      [
        'h',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_viewport_array',
    'glewImpl' => '__glewViewportIndexedf',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glViewportIndexedfNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'w',
        'GLfloat '
      ],
      [
        'h',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_NV_viewport_array',
    'glewImpl' => '__glewViewportIndexedfNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glViewportIndexedfv' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLfloat * '
      ]
    ],
    'binding_name' => 'glViewportIndexedfv_c',
    'feature' => 'GL_ARB_viewport_array',
    'glewImpl' => '__glewViewportIndexedfv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glViewportIndexedfvNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'v',
        'const GLfloat * '
      ]
    ],
    'binding_name' => 'glViewportIndexedfvNV_c',
    'feature' => 'GL_NV_viewport_array',
    'glewImpl' => '__glewViewportIndexedfvNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glViewportPositionWScaleNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'xcoeff',
        'GLfloat '
      ],
      [
        'ycoeff',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_NV_clip_space_w_scaling',
    'glewImpl' => '__glewViewportPositionWScaleNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glViewportSwizzleNV' => {
    'argdata' => [
      [
        'index',
        'GLuint '
      ],
      [
        'swizzlex',
        'GLenum '
      ],
      [
        'swizzley',
        'GLenum '
      ],
      [
        'swizzlez',
        'GLenum '
      ],
      [
        'swizzlew',
        'GLenum '
      ]
    ],
    'feature' => 'GL_NV_viewport_swizzle',
    'glewImpl' => '__glewViewportSwizzleNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWaitSemaphoreEXT' => {
    'argdata' => [
      [
        'semaphore',
        'GLuint '
      ],
      [
        'numBufferBarriers',
        'GLuint '
      ],
      [
        'buffers',
        'const GLuint* '
      ],
      [
        'numTextureBarriers',
        'GLuint '
      ],
      [
        'textures',
        'const GLuint *'
      ],
      [
        'srcLayouts',
        'const GLenum *'
      ]
    ],
    'binding_name' => 'glWaitSemaphoreEXT_c',
    'feature' => 'GL_EXT_semaphore',
    'glewImpl' => '__glewWaitSemaphoreEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWaitSync' => {
    'argdata' => [
      [
        'myGLsync',
        'GLsync '
      ],
      [
        'flags',
        'GLbitfield '
      ],
      [
        'timeout',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_ARB_sync',
    'glewImpl' => '__glewWaitSync',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWaitSyncAPPLE' => {
    'argdata' => [
      [
        'myGLsync',
        'GLsync '
      ],
      [
        'flags',
        'GLbitfield '
      ],
      [
        'timeout',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_APPLE_sync',
    'glewImpl' => '__glewWaitSyncAPPLE',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWaitVkSemaphoreNV' => {
    'argdata' => [
      [
        'vkSemaphore',
        'GLuint64 '
      ]
    ],
    'feature' => 'GL_NV_draw_vulkan_image',
    'glewImpl' => '__glewWaitVkSemaphoreNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWeightPathsNV' => {
    'argdata' => [
      [
        'resultPath',
        'GLuint '
      ],
      [
        'numPaths',
        'GLsizei '
      ],
      [
        'paths',
        'const GLuint * '
      ],
      [
        'weights',
        'const GLfloat * '
      ]
    ],
    'binding_name' => 'glWeightPathsNV_c',
    'feature' => 'GL_NV_path_rendering',
    'glewImpl' => '__glewWeightPathsNV',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWeightPointerARB' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'type',
        'GLenum '
      ],
      [
        'stride',
        'GLsizei '
      ],
      [
        'pointer',
        'void *'
      ]
    ],
    'binding_name' => 'glWeightPointerARB_c',
    'feature' => 'GL_ARB_vertex_blend',
    'glewImpl' => '__glewWeightPointerARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWeightbvARB' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'weights',
        'GLbyte *'
      ]
    ],
    'binding_name' => 'glWeightbvARB_c',
    'feature' => 'GL_ARB_vertex_blend',
    'glewImpl' => '__glewWeightbvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWeightdvARB' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'weights',
        'GLdouble *'
      ]
    ],
    'binding_name' => 'glWeightdvARB_c',
    'feature' => 'GL_ARB_vertex_blend',
    'glewImpl' => '__glewWeightdvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWeightfvARB' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'weights',
        'GLfloat *'
      ]
    ],
    'binding_name' => 'glWeightfvARB_c',
    'feature' => 'GL_ARB_vertex_blend',
    'glewImpl' => '__glewWeightfvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWeightivARB' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'weights',
        'GLint *'
      ]
    ],
    'binding_name' => 'glWeightivARB_c',
    'feature' => 'GL_ARB_vertex_blend',
    'glewImpl' => '__glewWeightivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWeightsvARB' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'weights',
        'GLshort *'
      ]
    ],
    'binding_name' => 'glWeightsvARB_c',
    'feature' => 'GL_ARB_vertex_blend',
    'glewImpl' => '__glewWeightsvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWeightubvARB' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'weights',
        'GLubyte *'
      ]
    ],
    'binding_name' => 'glWeightubvARB_c',
    'feature' => 'GL_ARB_vertex_blend',
    'glewImpl' => '__glewWeightubvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWeightuivARB' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'weights',
        'GLuint *'
      ]
    ],
    'binding_name' => 'glWeightuivARB_c',
    'feature' => 'GL_ARB_vertex_blend',
    'glewImpl' => '__glewWeightuivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWeightusvARB' => {
    'argdata' => [
      [
        'size',
        'GLint '
      ],
      [
        'weights',
        'GLushort *'
      ]
    ],
    'binding_name' => 'glWeightusvARB_c',
    'feature' => 'GL_ARB_vertex_blend',
    'glewImpl' => '__glewWeightusvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2d' => {
    'argdata' => [
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewWindowPos2d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2dARB' => {
    'argdata' => [
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_window_pos',
    'glewImpl' => '__glewWindowPos2dARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2dMESA' => {
    'argdata' => [
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos2dMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2dv' => {
    'argdata' => [
      [
        'p',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glWindowPos2dv_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewWindowPos2dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2dvARB' => {
    'argdata' => [
      [
        'p',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glWindowPos2dvARB_c',
    'feature' => 'GL_ARB_window_pos',
    'glewImpl' => '__glewWindowPos2dvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2dvMESA' => {
    'argdata' => [
      [
        'p',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glWindowPos2dvMESA_c',
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos2dvMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2f' => {
    'argdata' => [
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewWindowPos2f',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2fARB' => {
    'argdata' => [
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_window_pos',
    'glewImpl' => '__glewWindowPos2fARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2fMESA' => {
    'argdata' => [
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos2fMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2fv' => {
    'argdata' => [
      [
        'p',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glWindowPos2fv_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewWindowPos2fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2fvARB' => {
    'argdata' => [
      [
        'p',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glWindowPos2fvARB_c',
    'feature' => 'GL_ARB_window_pos',
    'glewImpl' => '__glewWindowPos2fvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2fvMESA' => {
    'argdata' => [
      [
        'p',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glWindowPos2fvMESA_c',
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos2fvMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2i' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewWindowPos2i',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2iARB' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_window_pos',
    'glewImpl' => '__glewWindowPos2iARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2iMESA' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ]
    ],
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos2iMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2iv' => {
    'argdata' => [
      [
        'p',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glWindowPos2iv_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewWindowPos2iv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2ivARB' => {
    'argdata' => [
      [
        'p',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glWindowPos2ivARB_c',
    'feature' => 'GL_ARB_window_pos',
    'glewImpl' => '__glewWindowPos2ivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2ivMESA' => {
    'argdata' => [
      [
        'p',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glWindowPos2ivMESA_c',
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos2ivMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2s' => {
    'argdata' => [
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewWindowPos2s',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2sARB' => {
    'argdata' => [
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ]
    ],
    'feature' => 'GL_ARB_window_pos',
    'glewImpl' => '__glewWindowPos2sARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2sMESA' => {
    'argdata' => [
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ]
    ],
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos2sMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2sv' => {
    'argdata' => [
      [
        'p',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glWindowPos2sv_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewWindowPos2sv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2svARB' => {
    'argdata' => [
      [
        'p',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glWindowPos2svARB_c',
    'feature' => 'GL_ARB_window_pos',
    'glewImpl' => '__glewWindowPos2svARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos2svMESA' => {
    'argdata' => [
      [
        'p',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glWindowPos2svMESA_c',
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos2svMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3d' => {
    'argdata' => [
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewWindowPos3d',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3dARB' => {
    'argdata' => [
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_ARB_window_pos',
    'glewImpl' => '__glewWindowPos3dARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3dMESA' => {
    'argdata' => [
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos3dMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3dv' => {
    'argdata' => [
      [
        'p',
        'const GLdouble *'
      ]
    ],
    'binding_name' => 'glWindowPos3dv_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewWindowPos3dv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3dvARB' => {
    'argdata' => [
      [
        'p',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glWindowPos3dvARB_c',
    'feature' => 'GL_ARB_window_pos',
    'glewImpl' => '__glewWindowPos3dvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3dvMESA' => {
    'argdata' => [
      [
        'p',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glWindowPos3dvMESA_c',
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos3dvMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3f' => {
    'argdata' => [
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewWindowPos3f',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3fARB' => {
    'argdata' => [
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_ARB_window_pos',
    'glewImpl' => '__glewWindowPos3fARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3fMESA' => {
    'argdata' => [
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos3fMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3fv' => {
    'argdata' => [
      [
        'p',
        'const GLfloat *'
      ]
    ],
    'binding_name' => 'glWindowPos3fv_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewWindowPos3fv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3fvARB' => {
    'argdata' => [
      [
        'p',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glWindowPos3fvARB_c',
    'feature' => 'GL_ARB_window_pos',
    'glewImpl' => '__glewWindowPos3fvARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3fvMESA' => {
    'argdata' => [
      [
        'p',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glWindowPos3fvMESA_c',
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos3fvMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3i' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'z',
        'GLint '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewWindowPos3i',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3iARB' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'z',
        'GLint '
      ]
    ],
    'feature' => 'GL_ARB_window_pos',
    'glewImpl' => '__glewWindowPos3iARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3iMESA' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'z',
        'GLint '
      ]
    ],
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos3iMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3iv' => {
    'argdata' => [
      [
        'p',
        'const GLint *'
      ]
    ],
    'binding_name' => 'glWindowPos3iv_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewWindowPos3iv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3ivARB' => {
    'argdata' => [
      [
        'p',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glWindowPos3ivARB_c',
    'feature' => 'GL_ARB_window_pos',
    'glewImpl' => '__glewWindowPos3ivARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3ivMESA' => {
    'argdata' => [
      [
        'p',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glWindowPos3ivMESA_c',
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos3ivMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3s' => {
    'argdata' => [
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ],
      [
        'z',
        'GLshort '
      ]
    ],
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewWindowPos3s',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3sARB' => {
    'argdata' => [
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ],
      [
        'z',
        'GLshort '
      ]
    ],
    'feature' => 'GL_ARB_window_pos',
    'glewImpl' => '__glewWindowPos3sARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3sMESA' => {
    'argdata' => [
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ],
      [
        'z',
        'GLshort '
      ]
    ],
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos3sMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3sv' => {
    'argdata' => [
      [
        'p',
        'const GLshort *'
      ]
    ],
    'binding_name' => 'glWindowPos3sv_c',
    'feature' => 'GL_VERSION_1_4',
    'glewImpl' => '__glewWindowPos3sv',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3svARB' => {
    'argdata' => [
      [
        'p',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glWindowPos3svARB_c',
    'feature' => 'GL_ARB_window_pos',
    'glewImpl' => '__glewWindowPos3svARB',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos3svMESA' => {
    'argdata' => [
      [
        'p',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glWindowPos3svMESA_c',
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos3svMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos4dMESA' => {
    'argdata' => [
      [
        'x',
        'GLdouble '
      ],
      [
        'y',
        'GLdouble '
      ],
      [
        'z',
        'GLdouble '
      ],
      [
        'w',
        'GLdouble '
      ]
    ],
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos4dMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos4dvMESA' => {
    'argdata' => [
      [
        'p',
        'const GLdouble* '
      ]
    ],
    'binding_name' => 'glWindowPos4dvMESA_c',
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos4dvMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos4fMESA' => {
    'argdata' => [
      [
        'x',
        'GLfloat '
      ],
      [
        'y',
        'GLfloat '
      ],
      [
        'z',
        'GLfloat '
      ],
      [
        'w',
        'GLfloat '
      ]
    ],
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos4fMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos4fvMESA' => {
    'argdata' => [
      [
        'p',
        'const GLfloat* '
      ]
    ],
    'binding_name' => 'glWindowPos4fvMESA_c',
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos4fvMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos4iMESA' => {
    'argdata' => [
      [
        'x',
        'GLint '
      ],
      [
        'y',
        'GLint '
      ],
      [
        'z',
        'GLint '
      ],
      [
        'w',
        'GLint '
      ]
    ],
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos4iMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos4ivMESA' => {
    'argdata' => [
      [
        'p',
        'const GLint* '
      ]
    ],
    'binding_name' => 'glWindowPos4ivMESA_c',
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos4ivMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos4sMESA' => {
    'argdata' => [
      [
        'x',
        'GLshort '
      ],
      [
        'y',
        'GLshort '
      ],
      [
        'z',
        'GLshort '
      ],
      [
        'w',
        'GLshort '
      ]
    ],
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos4sMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowPos4svMESA' => {
    'argdata' => [
      [
        'p',
        'const GLshort* '
      ]
    ],
    'binding_name' => 'glWindowPos4svMESA_c',
    'feature' => 'GL_MESA_window_pos',
    'glewImpl' => '__glewWindowPos4svMESA',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWindowRectanglesEXT' => {
    'argdata' => [
      [
        'mode',
        'GLenum '
      ],
      [
        'count',
        'GLsizei '
      ],
      [
        'box',
        'const GLint * '
      ]
    ],
    'binding_name' => 'glWindowRectanglesEXT_c',
    'feature' => 'GL_EXT_window_rectangles',
    'glewImpl' => '__glewWindowRectanglesEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  },
  'glWriteMaskEXT' => {
    'argdata' => [
      [
        'res',
        'GLuint '
      ],
      [
        'in',
        'GLuint '
      ],
      [
        'outX',
        'GLenum '
      ],
      [
        'outY',
        'GLenum '
      ],
      [
        'outZ',
        'GLenum '
      ],
      [
        'outW',
        'GLenum '
      ]
    ],
    'feature' => 'GL_EXT_vertex_shader',
    'glewImpl' => '__glewWriteMaskEXT',
    'glewtype' => 'fun',
    'restype' => 'void'
  }
);

our @glconstants = qw(
  GLEW_ERROR_GLX_VERSION_11_ONLY
  GLEW_ERROR_GL_VERSION_10_ONLY
  GLEW_ERROR_NO_GLX_DISPLAY
  GLEW_ERROR_NO_GL_VERSION
  GLEW_NO_ERROR
  GLEW_OK
  GLEW_VERSION_MAJOR
  GLEW_VERSION_MICRO
  GLEW_VERSION_MINOR
  GL_1PASS_EXT
  GL_1PASS_SGIS
  GL_2D
  GL_2PASS_0_EXT
  GL_2PASS_0_SGIS
  GL_2PASS_1_EXT
  GL_2PASS_1_SGIS
  GL_2X_BIT_ATI
  GL_2_BYTES
  GL_3D
  GL_3DC_XY_AMD
  GL_3DC_X_AMD
  GL_3DVISION_STEREO_NV
  GL_3D_COLOR
  GL_3D_COLOR_TEXTURE
  GL_3_BYTES
  GL_422_AVERAGE_EXT
  GL_422_EXT
  GL_422_REV_AVERAGE_EXT
  GL_422_REV_EXT
  GL_4D_COLOR_TEXTURE
  GL_4PASS_0_EXT
  GL_4PASS_0_SGIS
  GL_4PASS_1_EXT
  GL_4PASS_1_SGIS
  GL_4PASS_2_EXT
  GL_4PASS_2_SGIS
  GL_4PASS_3_EXT
  GL_4PASS_3_SGIS
  GL_4X_BIT_ATI
  GL_4_BYTES
  GL_8X_BIT_ATI
  GL_ABGR_EXT
  GL_ACCUM
  GL_ACCUM_ADJACENT_PAIRS_NV
  GL_ACCUM_ALPHA_BITS
  GL_ACCUM_BLUE_BITS
  GL_ACCUM_BUFFER_BIT
  GL_ACCUM_CLEAR_VALUE
  GL_ACCUM_GREEN_BITS
  GL_ACCUM_RED_BITS
  GL_ACTIVE_ATOMIC_COUNTER_BUFFERS
  GL_ACTIVE_ATTRIBUTES
  GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
  GL_ACTIVE_PROGRAM
  GL_ACTIVE_PROGRAM_EXT
  GL_ACTIVE_RESOURCES
  GL_ACTIVE_STENCIL_FACE_EXT
  GL_ACTIVE_SUBROUTINES
  GL_ACTIVE_SUBROUTINE_MAX_LENGTH
  GL_ACTIVE_SUBROUTINE_UNIFORMS
  GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
  GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
  GL_ACTIVE_TEXTURE
  GL_ACTIVE_TEXTURE_ARB
  GL_ACTIVE_UNIFORMS
  GL_ACTIVE_UNIFORM_BLOCKS
  GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH
  GL_ACTIVE_UNIFORM_MAX_LENGTH
  GL_ACTIVE_VARIABLES
  GL_ACTIVE_VARYINGS_NV
  GL_ACTIVE_VARYING_MAX_LENGTH_NV
  GL_ACTIVE_VERTEX_UNITS_ARB
  GL_ADD
  GL_ADD_ATI
  GL_ADD_SIGNED
  GL_ADD_SIGNED_ARB
  GL_ADD_SIGNED_EXT
  GL_ADJACENT_PAIRS_NV
  GL_AFFINE_2D_NV
  GL_AFFINE_3D_NV
  GL_ALIASED_LINE_WIDTH_RANGE
  GL_ALIASED_POINT_SIZE_RANGE
  GL_ALLOW_DRAW_FRG_HINT_PGI
  GL_ALLOW_DRAW_MEM_HINT_PGI
  GL_ALLOW_DRAW_OBJ_HINT_PGI
  GL_ALLOW_DRAW_WIN_HINT_PGI
  GL_ALL_ATTRIB_BITS
  GL_ALL_BARRIER_BITS
  GL_ALL_BARRIER_BITS_EXT
  GL_ALL_COMPLETED_NV
  GL_ALL_PIXELS_AMD
  GL_ALL_SHADER_BITS
  GL_ALL_STATIC_DATA_IBM
  GL_ALPHA
  GL_ALPHA12
  GL_ALPHA12_EXT
  GL_ALPHA16
  GL_ALPHA16F_ARB
  GL_ALPHA16F_EXT
  GL_ALPHA16I_EXT
  GL_ALPHA16UI_EXT
  GL_ALPHA16_EXT
  GL_ALPHA16_EXTENDED_RANGE_SGIX
  GL_ALPHA16_ICC_SGIX
  GL_ALPHA16_SIGNED_SGIX
  GL_ALPHA16_SNORM
  GL_ALPHA32F_ARB
  GL_ALPHA32F_EXT
  GL_ALPHA32I_EXT
  GL_ALPHA32UI_EXT
  GL_ALPHA4
  GL_ALPHA4_EXT
  GL_ALPHA8
  GL_ALPHA8I_EXT
  GL_ALPHA8UI_EXT
  GL_ALPHA8_EXT
  GL_ALPHA8_SNORM
  GL_ALPHA_BIAS
  GL_ALPHA_BITS
  GL_ALPHA_EXTENDED_RANGE_SGIX
  GL_ALPHA_FLOAT16_APPLE
  GL_ALPHA_FLOAT16_ATI
  GL_ALPHA_FLOAT32_APPLE
  GL_ALPHA_FLOAT32_ATI
  GL_ALPHA_ICC_SGIX
  GL_ALPHA_INTEGER
  GL_ALPHA_INTEGER_EXT
  GL_ALPHA_MAX_CLAMP_INGR
  GL_ALPHA_MAX_SGIX
  GL_ALPHA_MIN_CLAMP_INGR
  GL_ALPHA_MIN_SGIX
  GL_ALPHA_REF_COMMAND_NV
  GL_ALPHA_SCALE
  GL_ALPHA_SIGNED_SGIX
  GL_ALPHA_SNORM
  GL_ALPHA_TEST
  GL_ALPHA_TEST_FUNC
  GL_ALPHA_TEST_FUNC_QCOM
  GL_ALPHA_TEST_QCOM
  GL_ALPHA_TEST_REF
  GL_ALPHA_TEST_REF_QCOM
  GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV
  GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV
  GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV
  GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV
  GL_ALREADY_SIGNALED
  GL_ALREADY_SIGNALED_APPLE
  GL_ALWAYS
  GL_ALWAYS_FAST_HINT_PGI
  GL_ALWAYS_SOFT_HINT_PGI
  GL_AMBIENT
  GL_AMBIENT_AND_DIFFUSE
  GL_AND
  GL_AND_INVERTED
  GL_AND_REVERSE
  GL_ANY_SAMPLES_PASSED
  GL_ANY_SAMPLES_PASSED_CONSERVATIVE
  GL_ARC_TO_NV
  GL_ARRAY_BUFFER
  GL_ARRAY_BUFFER_ARB
  GL_ARRAY_BUFFER_BINDING
  GL_ARRAY_BUFFER_BINDING_ARB
  GL_ARRAY_ELEMENT_LOCK_COUNT_EXT
  GL_ARRAY_ELEMENT_LOCK_FIRST_EXT
  GL_ARRAY_OBJECT_BUFFER_ATI
  GL_ARRAY_OBJECT_OFFSET_ATI
  GL_ARRAY_SIZE
  GL_ARRAY_STRIDE
  GL_ASYNC_DRAW_PIXELS_SGIX
  GL_ASYNC_HISTOGRAM_SGIX
  GL_ASYNC_MARKER_SGIX
  GL_ASYNC_READ_PIXELS_SGIX
  GL_ASYNC_TEX_IMAGE_SGIX
  GL_ATC_RGBA_EXPLICIT_ALPHA_AMD
  GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD
  GL_ATC_RGB_AMD
  GL_ATOMIC_COUNTER_BARRIER_BIT
  GL_ATOMIC_COUNTER_BARRIER_BIT_EXT
  GL_ATOMIC_COUNTER_BUFFER
  GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS
  GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES
  GL_ATOMIC_COUNTER_BUFFER_BINDING
  GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE
  GL_ATOMIC_COUNTER_BUFFER_INDEX
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER
  GL_ATOMIC_COUNTER_BUFFER_SIZE
  GL_ATOMIC_COUNTER_BUFFER_START
  GL_ATTACHED_SHADERS
  GL_ATTENUATION_EXT
  GL_ATTRIBUTE_ADDRESS_COMMAND_NV
  GL_ATTRIB_ARRAY_POINTER_NV
  GL_ATTRIB_ARRAY_SIZE_NV
  GL_ATTRIB_ARRAY_STRIDE_NV
  GL_ATTRIB_ARRAY_TYPE_NV
  GL_ATTRIB_STACK_DEPTH
  GL_AUTO_GENERATE_MIPMAP
  GL_AUTO_NORMAL
  GL_AUX0
  GL_AUX1
  GL_AUX2
  GL_AUX3
  GL_AUX_BUFFERS
  GL_AUX_DEPTH_STENCIL_APPLE
  GL_AVERAGE_EXT
  GL_BACK
  GL_BACK_LEFT
  GL_BACK_NORMALS_HINT_PGI
  GL_BACK_PRIMARY_COLOR_NV
  GL_BACK_RIGHT
  GL_BACK_SECONDARY_COLOR_NV
  GL_BALI_DEPTH_PASS_INSTRUMENT
  GL_BALI_FRAGMENTS_GENERATED_INSTRUMENT
  GL_BALI_NUM_PRIMS_CLIPPED_INSTRUMENT
  GL_BALI_NUM_PRIMS_CLIP_RESULT_INSTRUMENT
  GL_BALI_NUM_PRIMS_REJECT_INSTRUMENT
  GL_BALI_NUM_TRIS_CULLED_INSTRUMENT
  GL_BALI_R_CHIP_COUNT
  GL_BEVEL_NV
  GL_BGR
  GL_BGRA
  GL_BGRA8_EXT
  GL_BGRA_EXT
  GL_BGRA_INTEGER
  GL_BGRA_INTEGER_EXT
  GL_BGR_EXT
  GL_BGR_INTEGER
  GL_BGR_INTEGER_EXT
  GL_BGR_NV
  GL_BIAS_BIT_ATI
  GL_BIAS_BY_NEGATIVE_ONE_HALF_NV
  GL_BINNING_CONTROL_HINT_QCOM
  GL_BINORMAL_ARRAY_EXT
  GL_BINORMAL_ARRAY_POINTER_EXT
  GL_BINORMAL_ARRAY_STRIDE_EXT
  GL_BINORMAL_ARRAY_TYPE_EXT
  GL_BITMAP
  GL_BITMAP_TOKEN
  GL_BLEND
  GL_BLEND_ADVANCED_COHERENT_KHR
  GL_BLEND_ADVANCED_COHERENT_NV
  GL_BLEND_COLOR
  GL_BLEND_COLOR_COMMAND_NV
  GL_BLEND_COLOR_EXT
  GL_BLEND_DST
  GL_BLEND_DST_ALPHA
  GL_BLEND_DST_ALPHA_EXT
  GL_BLEND_DST_RGB
  GL_BLEND_DST_RGB_EXT
  GL_BLEND_EQUATION
  GL_BLEND_EQUATION_ALPHA
  GL_BLEND_EQUATION_ALPHA_EXT
  GL_BLEND_EQUATION_EXT
  GL_BLEND_EQUATION_RGB
  GL_BLEND_EQUATION_RGB_EXT
  GL_BLEND_OVERLAP_NV
  GL_BLEND_PREMULTIPLIED_SRC_NV
  GL_BLEND_SRC
  GL_BLEND_SRC_ALPHA
  GL_BLEND_SRC_ALPHA_EXT
  GL_BLEND_SRC_RGB
  GL_BLEND_SRC_RGB_EXT
  GL_BLOCK_INDEX
  GL_BLUE
  GL_BLUE_BIAS
  GL_BLUE_BITS
  GL_BLUE_BIT_ATI
  GL_BLUE_INTEGER
  GL_BLUE_INTEGER_EXT
  GL_BLUE_MAX_CLAMP_INGR
  GL_BLUE_MIN_CLAMP_INGR
  GL_BLUE_NV
  GL_BLUE_SCALE
  GL_BOLD_BIT_NV
  GL_BOOL
  GL_BOOL_ARB
  GL_BOOL_VEC2
  GL_BOOL_VEC2_ARB
  GL_BOOL_VEC3
  GL_BOOL_VEC3_ARB
  GL_BOOL_VEC4
  GL_BOOL_VEC4_ARB
  GL_BOUNDING_BOX_NV
  GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV
  GL_BUFFER
  GL_BUFFER_ACCESS
  GL_BUFFER_ACCESS_ARB
  GL_BUFFER_ACCESS_FLAGS
  GL_BUFFER_BINDING
  GL_BUFFER_DATA_SIZE
  GL_BUFFER_FLUSHING_UNMAP_APPLE
  GL_BUFFER_GPU_ADDRESS_NV
  GL_BUFFER_IMMUTABLE_STORAGE
  GL_BUFFER_IMMUTABLE_STORAGE_EXT
  GL_BUFFER_MAPPED
  GL_BUFFER_MAPPED_ARB
  GL_BUFFER_MAP_LENGTH
  GL_BUFFER_MAP_OFFSET
  GL_BUFFER_MAP_POINTER
  GL_BUFFER_MAP_POINTER_ARB
  GL_BUFFER_OBJECT_APPLE
  GL_BUFFER_OBJECT_EXT
  GL_BUFFER_SERIALIZED_MODIFY_APPLE
  GL_BUFFER_SIZE
  GL_BUFFER_SIZE_ARB
  GL_BUFFER_STORAGE_FLAGS
  GL_BUFFER_STORAGE_FLAGS_EXT
  GL_BUFFER_UPDATE_BARRIER_BIT
  GL_BUFFER_UPDATE_BARRIER_BIT_EXT
  GL_BUFFER_USAGE
  GL_BUFFER_USAGE_ARB
  GL_BUFFER_VARIABLE
  GL_BUMP_ENVMAP_ATI
  GL_BUMP_NUM_TEX_UNITS_ATI
  GL_BUMP_ROT_MATRIX_ATI
  GL_BUMP_ROT_MATRIX_SIZE_ATI
  GL_BUMP_TARGET_ATI
  GL_BUMP_TEX_UNITS_ATI
  GL_BYTE
  GL_C3F_V3F
  GL_C4F_N3F_V3F
  GL_C4UB_V2F
  GL_C4UB_V3F
  GL_CACHE_REGAL
  GL_CAVEAT_SUPPORT
  GL_CCW
  GL_CG_FRAGMENT_SHADER_EXT
  GL_CG_VERTEX_SHADER_EXT
  GL_CIRCULAR_CCW_ARC_TO_NV
  GL_CIRCULAR_CW_ARC_TO_NV
  GL_CIRCULAR_TANGENT_ARC_TO_NV
  GL_CLAMP
  GL_CLAMP_FRAGMENT_COLOR
  GL_CLAMP_FRAGMENT_COLOR_ARB
  GL_CLAMP_READ_COLOR
  GL_CLAMP_READ_COLOR_ARB
  GL_CLAMP_TO_BORDER
  GL_CLAMP_TO_BORDER_ARB
  GL_CLAMP_TO_BORDER_NV
  GL_CLAMP_TO_BORDER_SGIS
  GL_CLAMP_TO_EDGE
  GL_CLAMP_TO_EDGE_EXT
  GL_CLAMP_TO_EDGE_SGIS
  GL_CLAMP_VERTEX_COLOR
  GL_CLAMP_VERTEX_COLOR_ARB
  GL_CLEAR
  GL_CLEAR_BUFFER
  GL_CLEAR_TEXTURE
  GL_CLIENT_ACTIVE_TEXTURE
  GL_CLIENT_ACTIVE_TEXTURE_ARB
  GL_CLIENT_ALL_ATTRIB_BITS
  GL_CLIENT_ATTRIB_STACK_DEPTH
  GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT
  GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT
  GL_CLIENT_PIXEL_STORE_BIT
  GL_CLIENT_STORAGE_BIT
  GL_CLIENT_STORAGE_BIT_EXT
  GL_CLIENT_VERTEX_ARRAY_BIT
  GL_CLIPPING_INPUT_PRIMITIVES
  GL_CLIPPING_INPUT_PRIMITIVES_ARB
  GL_CLIPPING_OUTPUT_PRIMITIVES
  GL_CLIPPING_OUTPUT_PRIMITIVES_ARB
  GL_CLIP_DEPTH_MODE
  GL_CLIP_DISTANCE0
  GL_CLIP_DISTANCE0_APPLE
  GL_CLIP_DISTANCE0_EXT
  GL_CLIP_DISTANCE1
  GL_CLIP_DISTANCE1_APPLE
  GL_CLIP_DISTANCE1_EXT
  GL_CLIP_DISTANCE2
  GL_CLIP_DISTANCE2_APPLE
  GL_CLIP_DISTANCE2_EXT
  GL_CLIP_DISTANCE3
  GL_CLIP_DISTANCE3_APPLE
  GL_CLIP_DISTANCE3_EXT
  GL_CLIP_DISTANCE4
  GL_CLIP_DISTANCE4_APPLE
  GL_CLIP_DISTANCE4_EXT
  GL_CLIP_DISTANCE5
  GL_CLIP_DISTANCE5_APPLE
  GL_CLIP_DISTANCE5_EXT
  GL_CLIP_DISTANCE6_APPLE
  GL_CLIP_DISTANCE6_EXT
  GL_CLIP_DISTANCE7_APPLE
  GL_CLIP_DISTANCE7_EXT
  GL_CLIP_DISTANCE_NV
  GL_CLIP_FAR_HINT_PGI
  GL_CLIP_NEAR_HINT_PGI
  GL_CLIP_ORIGIN
  GL_CLIP_PLANE0
  GL_CLIP_PLANE1
  GL_CLIP_PLANE2
  GL_CLIP_PLANE3
  GL_CLIP_PLANE4
  GL_CLIP_PLANE5
  GL_CLIP_VOLUME_CLIPPING_HINT_EXT
  GL_CLOSE_PATH_NV
  GL_CMYKA_EXT
  GL_CMYK_EXT
  GL_CND0_ATI
  GL_CND_ATI
  GL_CODE_REGAL
  GL_COEFF
  GL_COLOR
  GL_COLOR3_BIT_PGI
  GL_COLOR4_BIT_PGI
  GL_COLORBURN_KHR
  GL_COLORBURN_NV
  GL_COLORDODGE_KHR
  GL_COLORDODGE_NV
  GL_COLOR_ALPHA_PAIRING_ATI
  GL_COLOR_ARRAY
  GL_COLOR_ARRAY_ADDRESS_NV
  GL_COLOR_ARRAY_BUFFER_BINDING
  GL_COLOR_ARRAY_BUFFER_BINDING_ARB
  GL_COLOR_ARRAY_COUNT_EXT
  GL_COLOR_ARRAY_EXT
  GL_COLOR_ARRAY_LENGTH_NV
  GL_COLOR_ARRAY_LIST_IBM
  GL_COLOR_ARRAY_LIST_STRIDE_IBM
  GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL
  GL_COLOR_ARRAY_POINTER
  GL_COLOR_ARRAY_POINTER_EXT
  GL_COLOR_ARRAY_SIZE
  GL_COLOR_ARRAY_SIZE_EXT
  GL_COLOR_ARRAY_STRIDE
  GL_COLOR_ARRAY_STRIDE_EXT
  GL_COLOR_ARRAY_TYPE
  GL_COLOR_ARRAY_TYPE_EXT
  GL_COLOR_ATTACHMENT0
  GL_COLOR_ATTACHMENT0_EXT
  GL_COLOR_ATTACHMENT0_NV
  GL_COLOR_ATTACHMENT1
  GL_COLOR_ATTACHMENT10
  GL_COLOR_ATTACHMENT10_EXT
  GL_COLOR_ATTACHMENT10_NV
  GL_COLOR_ATTACHMENT11
  GL_COLOR_ATTACHMENT11_EXT
  GL_COLOR_ATTACHMENT11_NV
  GL_COLOR_ATTACHMENT12
  GL_COLOR_ATTACHMENT12_EXT
  GL_COLOR_ATTACHMENT12_NV
  GL_COLOR_ATTACHMENT13
  GL_COLOR_ATTACHMENT13_EXT
  GL_COLOR_ATTACHMENT13_NV
  GL_COLOR_ATTACHMENT14
  GL_COLOR_ATTACHMENT14_EXT
  GL_COLOR_ATTACHMENT14_NV
  GL_COLOR_ATTACHMENT15
  GL_COLOR_ATTACHMENT15_EXT
  GL_COLOR_ATTACHMENT15_NV
  GL_COLOR_ATTACHMENT1_EXT
  GL_COLOR_ATTACHMENT1_NV
  GL_COLOR_ATTACHMENT2
  GL_COLOR_ATTACHMENT2_EXT
  GL_COLOR_ATTACHMENT2_NV
  GL_COLOR_ATTACHMENT3
  GL_COLOR_ATTACHMENT3_EXT
  GL_COLOR_ATTACHMENT3_NV
  GL_COLOR_ATTACHMENT4
  GL_COLOR_ATTACHMENT4_EXT
  GL_COLOR_ATTACHMENT4_NV
  GL_COLOR_ATTACHMENT5
  GL_COLOR_ATTACHMENT5_EXT
  GL_COLOR_ATTACHMENT5_NV
  GL_COLOR_ATTACHMENT6
  GL_COLOR_ATTACHMENT6_EXT
  GL_COLOR_ATTACHMENT6_NV
  GL_COLOR_ATTACHMENT7
  GL_COLOR_ATTACHMENT7_EXT
  GL_COLOR_ATTACHMENT7_NV
  GL_COLOR_ATTACHMENT8
  GL_COLOR_ATTACHMENT8_EXT
  GL_COLOR_ATTACHMENT8_NV
  GL_COLOR_ATTACHMENT9
  GL_COLOR_ATTACHMENT9_EXT
  GL_COLOR_ATTACHMENT9_NV
  GL_COLOR_ATTACHMENT_EXT
  GL_COLOR_BUFFER_BIT
  GL_COLOR_BUFFER_BIT0_QCOM
  GL_COLOR_BUFFER_BIT1_QCOM
  GL_COLOR_BUFFER_BIT2_QCOM
  GL_COLOR_BUFFER_BIT3_QCOM
  GL_COLOR_BUFFER_BIT4_QCOM
  GL_COLOR_BUFFER_BIT5_QCOM
  GL_COLOR_BUFFER_BIT6_QCOM
  GL_COLOR_BUFFER_BIT7_QCOM
  GL_COLOR_CLEAR_VALUE
  GL_COLOR_COMPONENTS
  GL_COLOR_ENCODING
  GL_COLOR_EXT
  GL_COLOR_FLOAT_APPLE
  GL_COLOR_INDEX
  GL_COLOR_INDEX12_EXT
  GL_COLOR_INDEX16_EXT
  GL_COLOR_INDEX1_EXT
  GL_COLOR_INDEX2_EXT
  GL_COLOR_INDEX4_EXT
  GL_COLOR_INDEX8_EXT
  GL_COLOR_INDEXES
  GL_COLOR_LOGIC_OP
  GL_COLOR_MATERIAL
  GL_COLOR_MATERIAL_FACE
  GL_COLOR_MATERIAL_PARAMETER
  GL_COLOR_MATRIX
  GL_COLOR_MATRIX_HINT
  GL_COLOR_MATRIX_SGI
  GL_COLOR_MATRIX_STACK_DEPTH
  GL_COLOR_MATRIX_STACK_DEPTH_SGI
  GL_COLOR_RENDERABLE
  GL_COLOR_SAMPLES_NV
  GL_COLOR_SUM
  GL_COLOR_SUM_ARB
  GL_COLOR_SUM_CLAMP_NV
  GL_COLOR_SUM_EXT
  GL_COLOR_TABLE
  GL_COLOR_TABLE_ALPHA_SIZE
  GL_COLOR_TABLE_ALPHA_SIZE_EXT
  GL_COLOR_TABLE_ALPHA_SIZE_SGI
  GL_COLOR_TABLE_BIAS
  GL_COLOR_TABLE_BIAS_SGI
  GL_COLOR_TABLE_BLUE_SIZE
  GL_COLOR_TABLE_BLUE_SIZE_EXT
  GL_COLOR_TABLE_BLUE_SIZE_SGI
  GL_COLOR_TABLE_FORMAT
  GL_COLOR_TABLE_FORMAT_EXT
  GL_COLOR_TABLE_FORMAT_SGI
  GL_COLOR_TABLE_GREEN_SIZE
  GL_COLOR_TABLE_GREEN_SIZE_EXT
  GL_COLOR_TABLE_GREEN_SIZE_SGI
  GL_COLOR_TABLE_INTENSITY_SIZE
  GL_COLOR_TABLE_INTENSITY_SIZE_EXT
  GL_COLOR_TABLE_INTENSITY_SIZE_SGI
  GL_COLOR_TABLE_LUMINANCE_SIZE
  GL_COLOR_TABLE_LUMINANCE_SIZE_EXT
  GL_COLOR_TABLE_LUMINANCE_SIZE_SGI
  GL_COLOR_TABLE_RED_SIZE
  GL_COLOR_TABLE_RED_SIZE_EXT
  GL_COLOR_TABLE_RED_SIZE_SGI
  GL_COLOR_TABLE_SCALE
  GL_COLOR_TABLE_SCALE_SGI
  GL_COLOR_TABLE_SGI
  GL_COLOR_TABLE_WIDTH
  GL_COLOR_TABLE_WIDTH_EXT
  GL_COLOR_TABLE_WIDTH_SGI
  GL_COLOR_WRITEMASK
  GL_COMBINE
  GL_COMBINE4_NV
  GL_COMBINER0_NV
  GL_COMBINER1_NV
  GL_COMBINER2_NV
  GL_COMBINER3_NV
  GL_COMBINER4_NV
  GL_COMBINER5_NV
  GL_COMBINER6_NV
  GL_COMBINER7_NV
  GL_COMBINER_AB_DOT_PRODUCT_NV
  GL_COMBINER_AB_OUTPUT_NV
  GL_COMBINER_BIAS_NV
  GL_COMBINER_CD_DOT_PRODUCT_NV
  GL_COMBINER_CD_OUTPUT_NV
  GL_COMBINER_COMPONENT_USAGE_NV
  GL_COMBINER_INPUT_NV
  GL_COMBINER_MAPPING_NV
  GL_COMBINER_MUX_SUM_NV
  GL_COMBINER_SCALE_NV
  GL_COMBINER_SUM_OUTPUT_NV
  GL_COMBINE_ALPHA
  GL_COMBINE_ALPHA_ARB
  GL_COMBINE_ALPHA_EXT
  GL_COMBINE_ARB
  GL_COMBINE_EXT
  GL_COMBINE_RGB
  GL_COMBINE_RGB_ARB
  GL_COMBINE_RGB_EXT
  GL_COMMAND_BARRIER_BIT
  GL_COMMAND_BARRIER_BIT_EXT
  GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT
  GL_COMPARE_REF_TO_TEXTURE
  GL_COMPARE_REF_TO_TEXTURE_EXT
  GL_COMPARE_R_TO_TEXTURE
  GL_COMPARE_R_TO_TEXTURE_ARB
  GL_COMPATIBLE_SUBROUTINES
  GL_COMPILE
  GL_COMPILE_AND_EXECUTE
  GL_COMPILE_STATUS
  GL_COMPLETION_STATUS_ARB
  GL_COMPLETION_STATUS_KHR
  GL_COMPLEX_BYTE_SGI
  GL_COMPLEX_FLOAT_SGI
  GL_COMPLEX_INT_SGI
  GL_COMPLEX_SHORT_SGI
  GL_COMPLEX_UNSIGNED_BYTE_SGI
  GL_COMPLEX_UNSIGNED_INT_SGI
  GL_COMPLEX_UNSIGNED_SHORT_SGI
  GL_COMPRESSED_ALPHA
  GL_COMPRESSED_ALPHA_ARB
  GL_COMPRESSED_INTENSITY
  GL_COMPRESSED_INTENSITY_ARB
  GL_COMPRESSED_LUMINANCE
  GL_COMPRESSED_LUMINANCE_ALPHA
  GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI
  GL_COMPRESSED_LUMINANCE_ALPHA_ARB
  GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT
  GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_NV
  GL_COMPRESSED_LUMINANCE_ARB
  GL_COMPRESSED_LUMINANCE_LATC1_EXT
  GL_COMPRESSED_LUMINANCE_LATC1_NV
  GL_COMPRESSED_R11_EAC
  GL_COMPRESSED_RED
  GL_COMPRESSED_RED_GREEN_RGTC2_EXT
  GL_COMPRESSED_RED_RGTC1
  GL_COMPRESSED_RED_RGTC1_EXT
  GL_COMPRESSED_RG
  GL_COMPRESSED_RG11_EAC
  GL_COMPRESSED_RGB
  GL_COMPRESSED_RGB8_ETC2
  GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
  GL_COMPRESSED_RGBA
  GL_COMPRESSED_RGBA8_ETC2_EAC
  GL_COMPRESSED_RGBA_ARB
  GL_COMPRESSED_RGBA_ASTC_10x10_KHR
  GL_COMPRESSED_RGBA_ASTC_10x5_KHR
  GL_COMPRESSED_RGBA_ASTC_10x6_KHR
  GL_COMPRESSED_RGBA_ASTC_10x8_KHR
  GL_COMPRESSED_RGBA_ASTC_12x10_KHR
  GL_COMPRESSED_RGBA_ASTC_12x12_KHR
  GL_COMPRESSED_RGBA_ASTC_4x4_KHR
  GL_COMPRESSED_RGBA_ASTC_5x4_KHR
  GL_COMPRESSED_RGBA_ASTC_5x5_KHR
  GL_COMPRESSED_RGBA_ASTC_6x5_KHR
  GL_COMPRESSED_RGBA_ASTC_6x6_KHR
  GL_COMPRESSED_RGBA_ASTC_8x5_KHR
  GL_COMPRESSED_RGBA_ASTC_8x6_KHR
  GL_COMPRESSED_RGBA_ASTC_8x8_KHR
  GL_COMPRESSED_RGBA_BPTC_UNORM
  GL_COMPRESSED_RGBA_BPTC_UNORM_ARB
  GL_COMPRESSED_RGBA_BPTC_UNORM_EXT
  GL_COMPRESSED_RGBA_FXT1_3DFX
  GL_COMPRESSED_RGBA_S3TC_DXT1_ANGLE
  GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
  GL_COMPRESSED_RGBA_S3TC_DXT1_NV
  GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE
  GL_COMPRESSED_RGBA_S3TC_DXT3_EXT
  GL_COMPRESSED_RGBA_S3TC_DXT3_NV
  GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE
  GL_COMPRESSED_RGBA_S3TC_DXT5_EXT
  GL_COMPRESSED_RGBA_S3TC_DXT5_NV
  GL_COMPRESSED_RGB_ARB
  GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT
  GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB
  GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT
  GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT
  GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB
  GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT
  GL_COMPRESSED_RGB_FXT1_3DFX
  GL_COMPRESSED_RGB_S3TC_DXT1_ANGLE
  GL_COMPRESSED_RGB_S3TC_DXT1_EXT
  GL_COMPRESSED_RGB_S3TC_DXT1_NV
  GL_COMPRESSED_RG_RGTC2
  GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT
  GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_NV
  GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT
  GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_NV
  GL_COMPRESSED_SIGNED_R11_EAC
  GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT
  GL_COMPRESSED_SIGNED_RED_RGTC1
  GL_COMPRESSED_SIGNED_RED_RGTC1_EXT
  GL_COMPRESSED_SIGNED_RG11_EAC
  GL_COMPRESSED_SIGNED_RG_RGTC2
  GL_COMPRESSED_SLUMINANCE
  GL_COMPRESSED_SLUMINANCE_ALPHA
  GL_COMPRESSED_SLUMINANCE_ALPHA_EXT
  GL_COMPRESSED_SLUMINANCE_EXT
  GL_COMPRESSED_SRGB
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR
  GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
  GL_COMPRESSED_SRGB8_ETC2
  GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
  GL_COMPRESSED_SRGB_ALPHA
  GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM
  GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB
  GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT
  GL_COMPRESSED_SRGB_ALPHA_EXT
  GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT
  GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV
  GL_COMPRESSED_SRGB_EXT
  GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT
  GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT
  GL_COMPRESSED_SRGB_S3TC_DXT1_EXT
  GL_COMPRESSED_SRGB_S3TC_DXT1_NV
  GL_COMPRESSED_TEXTURE_FORMATS
  GL_COMPRESSED_TEXTURE_FORMATS_ARB
  GL_COMPUTE_PROGRAM_NV
  GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV
  GL_COMPUTE_SHADER
  GL_COMPUTE_SHADER_BIT
  GL_COMPUTE_SHADER_INVOCATIONS
  GL_COMPUTE_SHADER_INVOCATIONS_ARB
  GL_COMPUTE_SUBROUTINE
  GL_COMPUTE_SUBROUTINE_UNIFORM
  GL_COMPUTE_TEXTURE
  GL_COMPUTE_WORK_GROUP_SIZE
  GL_COMP_BIT_ATI
  GL_CONDITION_SATISFIED
  GL_CONDITION_SATISFIED_APPLE
  GL_CONFORMANT_NV
  GL_CONIC_CURVE_TO_NV
  GL_CONJOINT_NV
  GL_CONSERVATIVE_RASTERIZATION_INTEL
  GL_CONSERVATIVE_RASTERIZATION_NV
  GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV
  GL_CONSERVATIVE_RASTER_DILATE_NV
  GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV
  GL_CONSERVATIVE_RASTER_MODE_NV
  GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV
  GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV
  GL_CONSERVE_MEMORY_HINT_PGI
  GL_CONSTANT
  GL_CONSTANT_ALPHA
  GL_CONSTANT_ALPHA_EXT
  GL_CONSTANT_ARB
  GL_CONSTANT_ATTENUATION
  GL_CONSTANT_BORDER
  GL_CONSTANT_COLOR
  GL_CONSTANT_COLOR0_NV
  GL_CONSTANT_COLOR1_NV
  GL_CONSTANT_COLOR_EXT
  GL_CONSTANT_EXT
  GL_CONST_EYE_NV
  GL_CONTEXT_COMPATIBILITY_PROFILE_BIT
  GL_CONTEXT_CORE_PROFILE_BIT
  GL_CONTEXT_FLAGS
  GL_CONTEXT_FLAG_DEBUG_BIT
  GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT
  GL_CONTEXT_FLAG_NO_ERROR_BIT
  GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR
  GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT
  GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
  GL_CONTEXT_LOST
  GL_CONTEXT_PROFILE_MASK
  GL_CONTEXT_ROBUST_ACCESS
  GL_CONTINUOUS_AMD
  GL_CONTRAST_NV
  GL_CONVEX_HULL_NV
  GL_CONVOLUTION_1D
  GL_CONVOLUTION_1D_EXT
  GL_CONVOLUTION_2D
  GL_CONVOLUTION_2D_EXT
  GL_CONVOLUTION_BORDER_COLOR
  GL_CONVOLUTION_BORDER_MODE
  GL_CONVOLUTION_BORDER_MODE_EXT
  GL_CONVOLUTION_FILTER_BIAS
  GL_CONVOLUTION_FILTER_BIAS_EXT
  GL_CONVOLUTION_FILTER_SCALE
  GL_CONVOLUTION_FILTER_SCALE_EXT
  GL_CONVOLUTION_FORMAT
  GL_CONVOLUTION_FORMAT_EXT
  GL_CONVOLUTION_HEIGHT
  GL_CONVOLUTION_HEIGHT_EXT
  GL_CONVOLUTION_HINT_SGIX
  GL_CONVOLUTION_SGI
  GL_CONVOLUTION_WIDTH
  GL_CONVOLUTION_WIDTH_EXT
  GL_CON_0_ATI
  GL_CON_1_ATI
  GL_CON_2_ATI
  GL_CON_3_ATI
  GL_CON_4_ATI
  GL_CON_5_ATI
  GL_CON_6_ATI
  GL_CON_7_ATI
  GL_COORD_REPLACE
  GL_COORD_REPLACE_ARB
  GL_COORD_REPLACE_NV
  GL_COPY
  GL_COPY_INVERTED
  GL_COPY_PIXEL_TOKEN
  GL_COPY_READ_BUFFER
  GL_COPY_READ_BUFFER_BINDING
  GL_COPY_READ_BUFFER_NV
  GL_COPY_WRITE_BUFFER
  GL_COPY_WRITE_BUFFER_BINDING
  GL_COPY_WRITE_BUFFER_NV
  GL_COUNTER_RANGE_AMD
  GL_COUNTER_TYPE_AMD
  GL_COUNT_DOWN_NV
  GL_COUNT_UP_NV
  GL_COVERAGE_MODULATION_NV
  GL_COVERAGE_MODULATION_TABLE_NV
  GL_COVERAGE_MODULATION_TABLE_SIZE_NV
  GL_CPU_OPTIMIZED_QCOM
  GL_CUBE_MAP_BINDING_SGIX
  GL_CUBE_MAP_SGIX
  GL_CUBE_MAP_XN_SGIX
  GL_CUBE_MAP_XP_SGIX
  GL_CUBE_MAP_YN_SGIX
  GL_CUBE_MAP_YP_SGIX
  GL_CUBE_MAP_ZN_SGIX
  GL_CUBE_MAP_ZP_SGIX
  GL_CUBIC_CURVE_TO_NV
  GL_CUBIC_EXT
  GL_CULL_FACE
  GL_CULL_FACE_MODE
  GL_CULL_FRAGMENT_NV
  GL_CULL_MODES_NV
  GL_CULL_VERTEX_EXT
  GL_CULL_VERTEX_EYE_POSITION_EXT
  GL_CULL_VERTEX_IBM
  GL_CULL_VERTEX_OBJECT_POSITION_EXT
  GL_CURRENT_ATTRIB_NV
  GL_CURRENT_BINORMAL_EXT
  GL_CURRENT_BIT
  GL_CURRENT_COLOR
  GL_CURRENT_FOG_COORD
  GL_CURRENT_FOG_COORDINATE
  GL_CURRENT_FOG_COORDINATE_EXT
  GL_CURRENT_INDEX
  GL_CURRENT_MATRIX_ARB
  GL_CURRENT_MATRIX_INDEX_ARB
  GL_CURRENT_MATRIX_NV
  GL_CURRENT_MATRIX_STACK_DEPTH_ARB
  GL_CURRENT_MATRIX_STACK_DEPTH_NV
  GL_CURRENT_NORMAL
  GL_CURRENT_OCCLUSION_QUERY_ID_NV
  GL_CURRENT_PALETTE_MATRIX_ARB
  GL_CURRENT_PROGRAM
  GL_CURRENT_QUERY
  GL_CURRENT_QUERY_ANGLE
  GL_CURRENT_QUERY_ARB
  GL_CURRENT_RASTER_COLOR
  GL_CURRENT_RASTER_DISTANCE
  GL_CURRENT_RASTER_INDEX
  GL_CURRENT_RASTER_NORMAL_EXT
  GL_CURRENT_RASTER_POSITION
  GL_CURRENT_RASTER_POSITION_VALID
  GL_CURRENT_RASTER_SECONDARY_COLOR
  GL_CURRENT_RASTER_TEXTURE_COORDS
  GL_CURRENT_SAMPLE_COUNT_QUERY_NV
  GL_CURRENT_SECONDARY_COLOR
  GL_CURRENT_SECONDARY_COLOR_EXT
  GL_CURRENT_TANGENT_EXT
  GL_CURRENT_TEXTURE_COORDS
  GL_CURRENT_TIME_NV
  GL_CURRENT_VERTEX_ATTRIB
  GL_CURRENT_VERTEX_ATTRIB_ARB
  GL_CURRENT_VERTEX_EXT
  GL_CURRENT_VERTEX_WEIGHT_EXT
  GL_CURRENT_WEIGHT_ARB
  GL_CW
  GL_D3D12_FENCE_VALUE_EXT
  GL_DARKEN_KHR
  GL_DARKEN_NV
  GL_DATA_BUFFER_AMD
  GL_DEBUG_CALLBACK_FUNCTION
  GL_DEBUG_CALLBACK_FUNCTION_ARB
  GL_DEBUG_CALLBACK_USER_PARAM
  GL_DEBUG_CALLBACK_USER_PARAM_ARB
  GL_DEBUG_CATEGORY_API_ERROR_AMD
  GL_DEBUG_CATEGORY_APPLICATION_AMD
  GL_DEBUG_CATEGORY_DEPRECATION_AMD
  GL_DEBUG_CATEGORY_OTHER_AMD
  GL_DEBUG_CATEGORY_PERFORMANCE_AMD
  GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
  GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
  GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
  GL_DEBUG_GROUP_STACK_DEPTH
  GL_DEBUG_LOGGED_MESSAGES
  GL_DEBUG_LOGGED_MESSAGES_AMD
  GL_DEBUG_LOGGED_MESSAGES_ARB
  GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH
  GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB
  GL_DEBUG_OUTPUT
  GL_DEBUG_OUTPUT_SYNCHRONOUS
  GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB
  GL_DEBUG_REGAL
  GL_DEBUG_SEVERITY_HIGH
  GL_DEBUG_SEVERITY_HIGH_AMD
  GL_DEBUG_SEVERITY_HIGH_ARB
  GL_DEBUG_SEVERITY_LOW
  GL_DEBUG_SEVERITY_LOW_AMD
  GL_DEBUG_SEVERITY_LOW_ARB
  GL_DEBUG_SEVERITY_MEDIUM
  GL_DEBUG_SEVERITY_MEDIUM_AMD
  GL_DEBUG_SEVERITY_MEDIUM_ARB
  GL_DEBUG_SEVERITY_NOTIFICATION
  GL_DEBUG_SOURCE_API
  GL_DEBUG_SOURCE_API_ARB
  GL_DEBUG_SOURCE_APPLICATION
  GL_DEBUG_SOURCE_APPLICATION_ARB
  GL_DEBUG_SOURCE_OTHER
  GL_DEBUG_SOURCE_OTHER_ARB
  GL_DEBUG_SOURCE_SHADER_COMPILER
  GL_DEBUG_SOURCE_SHADER_COMPILER_ARB
  GL_DEBUG_SOURCE_THIRD_PARTY
  GL_DEBUG_SOURCE_THIRD_PARTY_ARB
  GL_DEBUG_SOURCE_WINDOW_SYSTEM
  GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB
  GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR
  GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB
  GL_DEBUG_TYPE_ERROR
  GL_DEBUG_TYPE_ERROR_ARB
  GL_DEBUG_TYPE_MARKER
  GL_DEBUG_TYPE_OTHER
  GL_DEBUG_TYPE_OTHER_ARB
  GL_DEBUG_TYPE_PERFORMANCE
  GL_DEBUG_TYPE_PERFORMANCE_ARB
  GL_DEBUG_TYPE_POP_GROUP
  GL_DEBUG_TYPE_PORTABILITY
  GL_DEBUG_TYPE_PORTABILITY_ARB
  GL_DEBUG_TYPE_PUSH_GROUP
  GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR
  GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB
  GL_DECAL
  GL_DECODE_EXT
  GL_DECR
  GL_DECR_WRAP
  GL_DECR_WRAP_EXT
  GL_DEDICATED_MEMORY_OBJECT_EXT
  GL_DELETE_STATUS
  GL_DEPENDENT_AR_TEXTURE_2D_NV
  GL_DEPENDENT_GB_TEXTURE_2D_NV
  GL_DEPENDENT_HILO_TEXTURE_2D_NV
  GL_DEPENDENT_RGB_TEXTURE_3D_NV
  GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV
  GL_DEPTH
  GL_DEPTH24_STENCIL8
  GL_DEPTH24_STENCIL8_EXT
  GL_DEPTH32F_STENCIL8
  GL_DEPTH32F_STENCIL8_NV
  GL_DEPTH_ATTACHMENT
  GL_DEPTH_ATTACHMENT_EXT
  GL_DEPTH_BIAS
  GL_DEPTH_BITS
  GL_DEPTH_BOUNDS_EXT
  GL_DEPTH_BOUNDS_TEST_EXT
  GL_DEPTH_BUFFER
  GL_DEPTH_BUFFER_BIT
  GL_DEPTH_BUFFER_BIT0_QCOM
  GL_DEPTH_BUFFER_BIT1_QCOM
  GL_DEPTH_BUFFER_BIT2_QCOM
  GL_DEPTH_BUFFER_BIT3_QCOM
  GL_DEPTH_BUFFER_BIT4_QCOM
  GL_DEPTH_BUFFER_BIT5_QCOM
  GL_DEPTH_BUFFER_BIT6_QCOM
  GL_DEPTH_BUFFER_BIT7_QCOM
  GL_DEPTH_BUFFER_FLOAT_MODE_NV
  GL_DEPTH_CLAMP
  GL_DEPTH_CLAMP_FAR_AMD
  GL_DEPTH_CLAMP_NEAR_AMD
  GL_DEPTH_CLAMP_NV
  GL_DEPTH_CLEAR_VALUE
  GL_DEPTH_COMPONENT
  GL_DEPTH_COMPONENT16
  GL_DEPTH_COMPONENT16_ARB
  GL_DEPTH_COMPONENT16_SGIX
  GL_DEPTH_COMPONENT24
  GL_DEPTH_COMPONENT24_ARB
  GL_DEPTH_COMPONENT24_SGIX
  GL_DEPTH_COMPONENT32
  GL_DEPTH_COMPONENT32F
  GL_DEPTH_COMPONENT32F_NV
  GL_DEPTH_COMPONENT32_ARB
  GL_DEPTH_COMPONENT32_SGIX
  GL_DEPTH_COMPONENTS
  GL_DEPTH_EXT
  GL_DEPTH_FUNC
  GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX
  GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX
  GL_DEPTH_PASS_INSTRUMENT_SGIX
  GL_DEPTH_RANGE
  GL_DEPTH_RENDERABLE
  GL_DEPTH_SAMPLES_NV
  GL_DEPTH_SCALE
  GL_DEPTH_STENCIL
  GL_DEPTH_STENCIL_ATTACHMENT
  GL_DEPTH_STENCIL_EXT
  GL_DEPTH_STENCIL_NV
  GL_DEPTH_STENCIL_TEXTURE_MODE
  GL_DEPTH_STENCIL_TO_BGRA_NV
  GL_DEPTH_STENCIL_TO_RGBA_NV
  GL_DEPTH_TEST
  GL_DEPTH_TEXTURE_MODE
  GL_DEPTH_TEXTURE_MODE_ARB
  GL_DEPTH_WRITEMASK
  GL_DEVICE_LUID_EXT
  GL_DEVICE_NODE_MASK_EXT
  GL_DEVICE_UUID_EXT
  GL_DIFFERENCE_KHR
  GL_DIFFERENCE_NV
  GL_DIFFUSE
  GL_DISCARD_ATI
  GL_DISCARD_NV
  GL_DISCRETE_AMD
  GL_DISJOINT_NV
  GL_DISPATCH_INDIRECT_BUFFER
  GL_DISPATCH_INDIRECT_BUFFER_BINDING
  GL_DISPLAY_LIST
  GL_DISTANCE_ATTENUATION_EXT
  GL_DITHER
  GL_DOMAIN
  GL_DONT_CARE
  GL_DOT2_ADD_ATI
  GL_DOT3_ATI
  GL_DOT3_RGB
  GL_DOT3_RGBA
  GL_DOT3_RGBA_ARB
  GL_DOT3_RGBA_EXT
  GL_DOT3_RGB_ARB
  GL_DOT3_RGB_EXT
  GL_DOT4_ATI
  GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV
  GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV
  GL_DOT_PRODUCT_DEPTH_REPLACE_NV
  GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV
  GL_DOT_PRODUCT_NV
  GL_DOT_PRODUCT_PASS_THROUGH_NV
  GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV
  GL_DOT_PRODUCT_TEXTURE_1D_NV
  GL_DOT_PRODUCT_TEXTURE_2D_NV
  GL_DOT_PRODUCT_TEXTURE_3D_NV
  GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV
  GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV
  GL_DOUBLE
  GL_DOUBLEBUFFER
  GL_DOUBLE_EXT
  GL_DOUBLE_MAT2
  GL_DOUBLE_MAT2_EXT
  GL_DOUBLE_MAT2x3
  GL_DOUBLE_MAT2x3_EXT
  GL_DOUBLE_MAT2x4
  GL_DOUBLE_MAT2x4_EXT
  GL_DOUBLE_MAT3
  GL_DOUBLE_MAT3_EXT
  GL_DOUBLE_MAT3x2
  GL_DOUBLE_MAT3x2_EXT
  GL_DOUBLE_MAT3x4
  GL_DOUBLE_MAT3x4_EXT
  GL_DOUBLE_MAT4
  GL_DOUBLE_MAT4_EXT
  GL_DOUBLE_MAT4x2
  GL_DOUBLE_MAT4x2_EXT
  GL_DOUBLE_MAT4x3
  GL_DOUBLE_MAT4x3_EXT
  GL_DOUBLE_VEC2
  GL_DOUBLE_VEC2_EXT
  GL_DOUBLE_VEC3
  GL_DOUBLE_VEC3_EXT
  GL_DOUBLE_VEC4
  GL_DOUBLE_VEC4_EXT
  GL_DRAW_ARRAYS_COMMAND_NV
  GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV
  GL_DRAW_ARRAYS_STRIP_COMMAND_NV
  GL_DRAW_BUFFER
  GL_DRAW_BUFFER0
  GL_DRAW_BUFFER0_ARB
  GL_DRAW_BUFFER0_ATI
  GL_DRAW_BUFFER0_EXT
  GL_DRAW_BUFFER0_NV
  GL_DRAW_BUFFER1
  GL_DRAW_BUFFER10
  GL_DRAW_BUFFER10_ARB
  GL_DRAW_BUFFER10_ATI
  GL_DRAW_BUFFER10_EXT
  GL_DRAW_BUFFER10_NV
  GL_DRAW_BUFFER11
  GL_DRAW_BUFFER11_ARB
  GL_DRAW_BUFFER11_ATI
  GL_DRAW_BUFFER11_EXT
  GL_DRAW_BUFFER11_NV
  GL_DRAW_BUFFER12
  GL_DRAW_BUFFER12_ARB
  GL_DRAW_BUFFER12_ATI
  GL_DRAW_BUFFER12_EXT
  GL_DRAW_BUFFER12_NV
  GL_DRAW_BUFFER13
  GL_DRAW_BUFFER13_ARB
  GL_DRAW_BUFFER13_ATI
  GL_DRAW_BUFFER13_EXT
  GL_DRAW_BUFFER13_NV
  GL_DRAW_BUFFER14
  GL_DRAW_BUFFER14_ARB
  GL_DRAW_BUFFER14_ATI
  GL_DRAW_BUFFER14_EXT
  GL_DRAW_BUFFER14_NV
  GL_DRAW_BUFFER15
  GL_DRAW_BUFFER15_ARB
  GL_DRAW_BUFFER15_ATI
  GL_DRAW_BUFFER15_EXT
  GL_DRAW_BUFFER15_NV
  GL_DRAW_BUFFER1_ARB
  GL_DRAW_BUFFER1_ATI
  GL_DRAW_BUFFER1_EXT
  GL_DRAW_BUFFER1_NV
  GL_DRAW_BUFFER2
  GL_DRAW_BUFFER2_ARB
  GL_DRAW_BUFFER2_ATI
  GL_DRAW_BUFFER2_EXT
  GL_DRAW_BUFFER2_NV
  GL_DRAW_BUFFER3
  GL_DRAW_BUFFER3_ARB
  GL_DRAW_BUFFER3_ATI
  GL_DRAW_BUFFER3_EXT
  GL_DRAW_BUFFER3_NV
  GL_DRAW_BUFFER4
  GL_DRAW_BUFFER4_ARB
  GL_DRAW_BUFFER4_ATI
  GL_DRAW_BUFFER4_EXT
  GL_DRAW_BUFFER4_NV
  GL_DRAW_BUFFER5
  GL_DRAW_BUFFER5_ARB
  GL_DRAW_BUFFER5_ATI
  GL_DRAW_BUFFER5_EXT
  GL_DRAW_BUFFER5_NV
  GL_DRAW_BUFFER6
  GL_DRAW_BUFFER6_ARB
  GL_DRAW_BUFFER6_ATI
  GL_DRAW_BUFFER6_EXT
  GL_DRAW_BUFFER6_NV
  GL_DRAW_BUFFER7
  GL_DRAW_BUFFER7_ARB
  GL_DRAW_BUFFER7_ATI
  GL_DRAW_BUFFER7_EXT
  GL_DRAW_BUFFER7_NV
  GL_DRAW_BUFFER8
  GL_DRAW_BUFFER8_ARB
  GL_DRAW_BUFFER8_ATI
  GL_DRAW_BUFFER8_EXT
  GL_DRAW_BUFFER8_NV
  GL_DRAW_BUFFER9
  GL_DRAW_BUFFER9_ARB
  GL_DRAW_BUFFER9_ATI
  GL_DRAW_BUFFER9_EXT
  GL_DRAW_BUFFER9_NV
  GL_DRAW_BUFFER_EXT
  GL_DRAW_ELEMENTS_COMMAND_NV
  GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV
  GL_DRAW_ELEMENTS_STRIP_COMMAND_NV
  GL_DRAW_FRAMEBUFFER
  GL_DRAW_FRAMEBUFFER_ANGLE
  GL_DRAW_FRAMEBUFFER_APPLE
  GL_DRAW_FRAMEBUFFER_BINDING
  GL_DRAW_FRAMEBUFFER_BINDING_ANGLE
  GL_DRAW_FRAMEBUFFER_BINDING_APPLE
  GL_DRAW_FRAMEBUFFER_BINDING_EXT
  GL_DRAW_FRAMEBUFFER_BINDING_NV
  GL_DRAW_FRAMEBUFFER_EXT
  GL_DRAW_FRAMEBUFFER_NV
  GL_DRAW_INDIRECT_ADDRESS_NV
  GL_DRAW_INDIRECT_BUFFER
  GL_DRAW_INDIRECT_BUFFER_BINDING
  GL_DRAW_INDIRECT_LENGTH_NV
  GL_DRAW_INDIRECT_UNIFIED_NV
  GL_DRAW_PIXELS_APPLE
  GL_DRAW_PIXEL_TOKEN
  GL_DRIVER_REGAL
  GL_DRIVER_UUID_EXT
  GL_DSDT8_MAG8_INTENSITY8_NV
  GL_DSDT8_MAG8_NV
  GL_DSDT8_NV
  GL_DSDT_MAG_INTENSITY_NV
  GL_DSDT_MAG_NV
  GL_DSDT_MAG_VIB_NV
  GL_DSDT_NV
  GL_DST_ALPHA
  GL_DST_ATOP_NV
  GL_DST_COLOR
  GL_DST_IN_NV
  GL_DST_NV
  GL_DST_OUT_NV
  GL_DST_OVER_NV
  GL_DS_BIAS_NV
  GL_DS_SCALE_NV
  GL_DT_BIAS_NV
  GL_DT_SCALE_NV
  GL_DU8DV8_ATI
  GL_DUDV_ATI
  GL_DUP_FIRST_CUBIC_CURVE_TO_NV
  GL_DUP_LAST_CUBIC_CURVE_TO_NV
  GL_DYNAMIC_ATI
  GL_DYNAMIC_COPY
  GL_DYNAMIC_COPY_ARB
  GL_DYNAMIC_DRAW
  GL_DYNAMIC_DRAW_ARB
  GL_DYNAMIC_READ
  GL_DYNAMIC_READ_ARB
  GL_DYNAMIC_STORAGE_BIT
  GL_DYNAMIC_STORAGE_BIT_EXT
  GL_EDGEFLAG_BIT_PGI
  GL_EDGE_FLAG
  GL_EDGE_FLAG_ARRAY
  GL_EDGE_FLAG_ARRAY_ADDRESS_NV
  GL_EDGE_FLAG_ARRAY_BUFFER_BINDING
  GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB
  GL_EDGE_FLAG_ARRAY_COUNT_EXT
  GL_EDGE_FLAG_ARRAY_EXT
  GL_EDGE_FLAG_ARRAY_LENGTH_NV
  GL_EDGE_FLAG_ARRAY_LIST_IBM
  GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
  GL_EDGE_FLAG_ARRAY_POINTER
  GL_EDGE_FLAG_ARRAY_POINTER_EXT
  GL_EDGE_FLAG_ARRAY_STRIDE
  GL_EDGE_FLAG_ARRAY_STRIDE_EXT
  GL_EFFECTIVE_RASTER_SAMPLES_EXT
  GL_EGL_GENERATE_RESET_ON_VIDEO_MEMORY_PURGE_NV
  GL_EIGHTH_BIT_ATI
  GL_ELEMENT_ADDRESS_COMMAND_NV
  GL_ELEMENT_ARRAY_ADDRESS_NV
  GL_ELEMENT_ARRAY_APPLE
  GL_ELEMENT_ARRAY_ATI
  GL_ELEMENT_ARRAY_BARRIER_BIT
  GL_ELEMENT_ARRAY_BARRIER_BIT_EXT
  GL_ELEMENT_ARRAY_BUFFER
  GL_ELEMENT_ARRAY_BUFFER_ARB
  GL_ELEMENT_ARRAY_BUFFER_BINDING
  GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB
  GL_ELEMENT_ARRAY_LENGTH_NV
  GL_ELEMENT_ARRAY_POINTER_APPLE
  GL_ELEMENT_ARRAY_POINTER_ATI
  GL_ELEMENT_ARRAY_TYPE_APPLE
  GL_ELEMENT_ARRAY_TYPE_ATI
  GL_ELEMENT_ARRAY_UNIFIED_NV
  GL_EMBOSS_CONSTANT_NV
  GL_EMBOSS_LIGHT_NV
  GL_EMBOSS_MAP_NV
  GL_EMISSION
  GL_EMULATION_REGAL
  GL_ENABLE_BIT
  GL_ENV_MAP_SGIX
  GL_EQUAL
  GL_EQUIV
  GL_ERROR_REGAL
  GL_ETC1_SRGB8_NV
  GL_EVAL_2D_NV
  GL_EVAL_BIT
  GL_EVAL_FRACTIONAL_TESSELLATION_NV
  GL_EVAL_TRIANGULAR_2D_NV
  GL_EVAL_VERTEX_ATTRIB0_NV
  GL_EVAL_VERTEX_ATTRIB10_NV
  GL_EVAL_VERTEX_ATTRIB11_NV
  GL_EVAL_VERTEX_ATTRIB12_NV
  GL_EVAL_VERTEX_ATTRIB13_NV
  GL_EVAL_VERTEX_ATTRIB14_NV
  GL_EVAL_VERTEX_ATTRIB15_NV
  GL_EVAL_VERTEX_ATTRIB1_NV
  GL_EVAL_VERTEX_ATTRIB2_NV
  GL_EVAL_VERTEX_ATTRIB3_NV
  GL_EVAL_VERTEX_ATTRIB4_NV
  GL_EVAL_VERTEX_ATTRIB5_NV
  GL_EVAL_VERTEX_ATTRIB6_NV
  GL_EVAL_VERTEX_ATTRIB7_NV
  GL_EVAL_VERTEX_ATTRIB8_NV
  GL_EVAL_VERTEX_ATTRIB9_NV
  GL_EXCLUSION_KHR
  GL_EXCLUSION_NV
  GL_EXCLUSIVE_EXT
  GL_EXP
  GL_EXP2
  GL_EXPAND_NEGATE_NV
  GL_EXPAND_NORMAL_NV
  GL_EXTENDED_RANGE_SGIS
  GL_EXTENSIONS
  GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD
  GL_EYE_DISTANCE_TO_LINE_SGIS
  GL_EYE_DISTANCE_TO_POINT_SGIS
  GL_EYE_LINEAR
  GL_EYE_LINE_SGIS
  GL_EYE_PLANE
  GL_EYE_PLANE_ABSOLUTE_NV
  GL_EYE_POINT_SGIS
  GL_EYE_RADIAL_NV
  GL_EYE_SPACE_SGIX
  GL_E_TIMES_F_NV
  GL_FACTOR_MAX_AMD
  GL_FACTOR_MIN_AMD
  GL_FAILURE_NV
  GL_FALSE
  GL_FASTEST
  GL_FEEDBACK
  GL_FEEDBACK_BUFFER_POINTER
  GL_FEEDBACK_BUFFER_SIZE
  GL_FEEDBACK_BUFFER_TYPE
  GL_FENCE_APPLE
  GL_FENCE_CONDITION_NV
  GL_FENCE_STATUS_NV
  GL_FETCH_PER_SAMPLE_ARM
  GL_FFT_1D_SGI
  GL_FIELDS_NV
  GL_FIELD_LOWER_NV
  GL_FIELD_UPPER_NV
  GL_FILE_NAME_NV
  GL_FILL
  GL_FILL_NV
  GL_FILL_RECTANGLE_NV
  GL_FILTER
  GL_FIRST_TO_REST_NV
  GL_FIRST_VERTEX_CONVENTION
  GL_FIRST_VERTEX_CONVENTION_EXT
  GL_FIXED
  GL_FIXED_ONLY
  GL_FIXED_ONLY_ARB
  GL_FLAT
  GL_FLOAT
  GL_FLOAT16_MAT2_AMD
  GL_FLOAT16_MAT2x3_AMD
  GL_FLOAT16_MAT2x4_AMD
  GL_FLOAT16_MAT3_AMD
  GL_FLOAT16_MAT3x2_AMD
  GL_FLOAT16_MAT3x4_AMD
  GL_FLOAT16_MAT4_AMD
  GL_FLOAT16_MAT4x2_AMD
  GL_FLOAT16_MAT4x3_AMD
  GL_FLOAT16_NV
  GL_FLOAT16_VEC2_NV
  GL_FLOAT16_VEC3_NV
  GL_FLOAT16_VEC4_NV
  GL_FLOAT_32_UNSIGNED_INT_24_8_REV
  GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV
  GL_FLOAT_CLEAR_COLOR_VALUE_NV
  GL_FLOAT_MAT2
  GL_FLOAT_MAT2_ARB
  GL_FLOAT_MAT2x3
  GL_FLOAT_MAT2x3_NV
  GL_FLOAT_MAT2x4
  GL_FLOAT_MAT2x4_NV
  GL_FLOAT_MAT3
  GL_FLOAT_MAT3_ARB
  GL_FLOAT_MAT3x2
  GL_FLOAT_MAT3x2_NV
  GL_FLOAT_MAT3x4
  GL_FLOAT_MAT3x4_NV
  GL_FLOAT_MAT4
  GL_FLOAT_MAT4_ARB
  GL_FLOAT_MAT4x2
  GL_FLOAT_MAT4x2_NV
  GL_FLOAT_MAT4x3
  GL_FLOAT_MAT4x3_NV
  GL_FLOAT_R16_NV
  GL_FLOAT_R32_NV
  GL_FLOAT_RG16_NV
  GL_FLOAT_RG32_NV
  GL_FLOAT_RGB16_NV
  GL_FLOAT_RGB32_NV
  GL_FLOAT_RGBA16_NV
  GL_FLOAT_RGBA32_NV
  GL_FLOAT_RGBA_MODE_NV
  GL_FLOAT_RGBA_NV
  GL_FLOAT_RGB_NV
  GL_FLOAT_RG_NV
  GL_FLOAT_R_NV
  GL_FLOAT_VEC2
  GL_FLOAT_VEC2_ARB
  GL_FLOAT_VEC3
  GL_FLOAT_VEC3_ARB
  GL_FLOAT_VEC4
  GL_FLOAT_VEC4_ARB
  GL_FOG
  GL_FOG_BIT
  GL_FOG_BLEND_ALPHA_SGIX
  GL_FOG_BLEND_COLOR_SGIX
  GL_FOG_COLOR
  GL_FOG_COORD
  GL_FOG_COORDINATE
  GL_FOG_COORDINATE_ARRAY
  GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING
  GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB
  GL_FOG_COORDINATE_ARRAY_EXT
  GL_FOG_COORDINATE_ARRAY_LIST_IBM
  GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
  GL_FOG_COORDINATE_ARRAY_POINTER
  GL_FOG_COORDINATE_ARRAY_POINTER_EXT
  GL_FOG_COORDINATE_ARRAY_STRIDE
  GL_FOG_COORDINATE_ARRAY_STRIDE_EXT
  GL_FOG_COORDINATE_ARRAY_TYPE
  GL_FOG_COORDINATE_ARRAY_TYPE_EXT
  GL_FOG_COORDINATE_EXT
  GL_FOG_COORDINATE_SOURCE
  GL_FOG_COORDINATE_SOURCE_EXT
  GL_FOG_COORD_ARRAY
  GL_FOG_COORD_ARRAY_ADDRESS_NV
  GL_FOG_COORD_ARRAY_BUFFER_BINDING
  GL_FOG_COORD_ARRAY_LENGTH_NV
  GL_FOG_COORD_ARRAY_POINTER
  GL_FOG_COORD_ARRAY_STRIDE
  GL_FOG_COORD_ARRAY_TYPE
  GL_FOG_COORD_SRC
  GL_FOG_DENSITY
  GL_FOG_DISTANCE_MODE_NV
  GL_FOG_END
  GL_FOG_GROUND_PLANE_SGIX
  GL_FOG_HINT
  GL_FOG_INDEX
  GL_FOG_LAYERS_POINTS_SGIX
  GL_FOG_MODE
  GL_FOG_OFFSET_SGIX
  GL_FOG_OFFSET_VALUE_SGIX
  GL_FOG_SCALE_SGIX
  GL_FOG_SCALE_VALUE_SGIX
  GL_FOG_SPECULAR_TEXTURE_WIN
  GL_FOG_START
  GL_FOG_TYPE_SGIX
  GL_FONT_ASCENDER_BIT_NV
  GL_FONT_DESCENDER_BIT_NV
  GL_FONT_GLYPHS_AVAILABLE_NV
  GL_FONT_HAS_KERNING_BIT_NV
  GL_FONT_HEIGHT_BIT_NV
  GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV
  GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV
  GL_FONT_NUM_GLYPH_INDICES_BIT_NV
  GL_FONT_TARGET_UNAVAILABLE_NV
  GL_FONT_UNAVAILABLE_NV
  GL_FONT_UNDERLINE_POSITION_BIT_NV
  GL_FONT_UNDERLINE_THICKNESS_BIT_NV
  GL_FONT_UNINTELLIGIBLE_NV
  GL_FONT_UNITS_PER_EM_BIT_NV
  GL_FONT_X_MAX_BOUNDS_BIT_NV
  GL_FONT_X_MIN_BOUNDS_BIT_NV
  GL_FONT_Y_MAX_BOUNDS_BIT_NV
  GL_FONT_Y_MIN_BOUNDS_BIT_NV
  GL_FORCE_BLUE_TO_ONE_NV
  GL_FORMAT_SUBSAMPLE_244_244_OML
  GL_FORMAT_SUBSAMPLE_24_24_OML
  GL_FOVEATION_ENABLE_BIT_QCOM
  GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM
  GL_FRACTIONAL_EVEN
  GL_FRACTIONAL_ODD
  GL_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX
  GL_FRAGMENTS_INSTRUMENT_MAX_SGIX
  GL_FRAGMENTS_INSTRUMENT_SGIX
  GL_FRAGMENT_COLOR_EXT
  GL_FRAGMENT_COLOR_MATERIAL_EXT
  GL_FRAGMENT_COLOR_MATERIAL_FACE_EXT
  GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_EXT
  GL_FRAGMENT_COVERAGE_COLOR_NV
  GL_FRAGMENT_COVERAGE_TO_COLOR_NV
  GL_FRAGMENT_DEPTH
  GL_FRAGMENT_DEPTH_EXT
  GL_FRAGMENT_INPUT_NV
  GL_FRAGMENT_INTERPOLATION_OFFSET_BITS
  GL_FRAGMENT_LIGHT0_EXT
  GL_FRAGMENT_LIGHT7_EXT
  GL_FRAGMENT_LIGHTING_EXT
  GL_FRAGMENT_LIGHT_MODEL_AMBIENT_EXT
  GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_EXT
  GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_EXT
  GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_EXT
  GL_FRAGMENT_LIGHT_SPACE_SGIX
  GL_FRAGMENT_MATERIAL_EXT
  GL_FRAGMENT_NORMAL_EXT
  GL_FRAGMENT_PROGRAM_ARB
  GL_FRAGMENT_PROGRAM_BINDING_NV
  GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV
  GL_FRAGMENT_PROGRAM_NV
  GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV
  GL_FRAGMENT_SHADER
  GL_FRAGMENT_SHADER_ARB
  GL_FRAGMENT_SHADER_ATI
  GL_FRAGMENT_SHADER_BIT
  GL_FRAGMENT_SHADER_DERIVATIVE_HINT
  GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB
  GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT
  GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM
  GL_FRAGMENT_SHADER_INVOCATIONS
  GL_FRAGMENT_SHADER_INVOCATIONS_ARB
  GL_FRAGMENT_SUBROUTINE
  GL_FRAGMENT_SUBROUTINE_UNIFORM
  GL_FRAGMENT_TEXTURE
  GL_FRAMEBUFFER
  GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
  GL_FRAMEBUFFER_ATTACHMENT_ANGLE
  GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
  GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
  GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT
  GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
  GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT
  GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
  GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
  GL_FRAMEBUFFER_ATTACHMENT_LAYERED
  GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
  GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
  GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
  GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_NV
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT
  GL_FRAMEBUFFER_BARRIER_BIT
  GL_FRAMEBUFFER_BARRIER_BIT_EXT
  GL_FRAMEBUFFER_BINDING
  GL_FRAMEBUFFER_BINDING_EXT
  GL_FRAMEBUFFER_BLEND
  GL_FRAMEBUFFER_COMPLETE
  GL_FRAMEBUFFER_COMPLETE_EXT
  GL_FRAMEBUFFER_DEFAULT
  GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS
  GL_FRAMEBUFFER_DEFAULT_HEIGHT
  GL_FRAMEBUFFER_DEFAULT_LAYERS
  GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT
  GL_FRAMEBUFFER_DEFAULT_SAMPLES
  GL_FRAMEBUFFER_DEFAULT_WIDTH
  GL_FRAMEBUFFER_EXT
  GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM
  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
  GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
  GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
  GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
  GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
  GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT
  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV
  GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
  GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
  GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR
  GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB
  GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV
  GL_FRAMEBUFFER_RENDERABLE
  GL_FRAMEBUFFER_RENDERABLE_LAYERED
  GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB
  GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV
  GL_FRAMEBUFFER_SRGB
  GL_FRAMEBUFFER_SRGB_CAPABLE_EXT
  GL_FRAMEBUFFER_SRGB_EXT
  GL_FRAMEBUFFER_UNDEFINED
  GL_FRAMEBUFFER_UNSUPPORTED
  GL_FRAMEBUFFER_UNSUPPORTED_EXT
  GL_FRAME_NV
  GL_FRONT
  GL_FRONT_AND_BACK
  GL_FRONT_FACE
  GL_FRONT_FACE_COMMAND_NV
  GL_FRONT_LEFT
  GL_FRONT_RIGHT
  GL_FULL_RANGE_EXT
  GL_FULL_STIPPLE_HINT_PGI
  GL_FULL_SUPPORT
  GL_FUNC_ADD
  GL_FUNC_ADD_EXT
  GL_FUNC_COMPLEX_ADD_EXT
  GL_FUNC_COMPLEX_MULTIPLY_EXT
  GL_FUNC_REVERSE_SUBTRACT
  GL_FUNC_REVERSE_SUBTRACT_EXT
  GL_FUNC_SUBTRACT
  GL_FUNC_SUBTRACT_EXT
  GL_GENERATE_MIPMAP
  GL_GENERATE_MIPMAP_HINT
  GL_GENERATE_MIPMAP_HINT_SGIS
  GL_GENERATE_MIPMAP_SGIS
  GL_GENERIC_ATTRIB_NV
  GL_GEOMETRY_BIT
  GL_GEOMETRY_DEFORMATION_BIT_SGIX
  GL_GEOMETRY_INPUT_TYPE
  GL_GEOMETRY_INPUT_TYPE_ARB
  GL_GEOMETRY_INPUT_TYPE_EXT
  GL_GEOMETRY_LINKED_INPUT_TYPE_EXT
  GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT
  GL_GEOMETRY_LINKED_VERTICES_OUT_EXT
  GL_GEOMETRY_OUTPUT_TYPE
  GL_GEOMETRY_OUTPUT_TYPE_ARB
  GL_GEOMETRY_OUTPUT_TYPE_EXT
  GL_GEOMETRY_PROGRAM_NV
  GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV
  GL_GEOMETRY_SHADER
  GL_GEOMETRY_SHADER_ARB
  GL_GEOMETRY_SHADER_BIT
  GL_GEOMETRY_SHADER_BIT_EXT
  GL_GEOMETRY_SHADER_EXT
  GL_GEOMETRY_SHADER_INVOCATIONS
  GL_GEOMETRY_SHADER_INVOCATIONS_EXT
  GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED
  GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB
  GL_GEOMETRY_SUBROUTINE
  GL_GEOMETRY_SUBROUTINE_UNIFORM
  GL_GEOMETRY_TEXTURE
  GL_GEOMETRY_VERTICES_OUT
  GL_GEOMETRY_VERTICES_OUT_ARB
  GL_GEOMETRY_VERTICES_OUT_EXT
  GL_GEQUAL
  GL_GET_TEXTURE_IMAGE_FORMAT
  GL_GET_TEXTURE_IMAGE_TYPE
  GL_GLOBAL_ALPHA_FACTOR_SUN
  GL_GLOBAL_ALPHA_SUN
  GL_GLYPH_HAS_KERNING_BIT_NV
  GL_GLYPH_HEIGHT_BIT_NV
  GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV
  GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV
  GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV
  GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV
  GL_GLYPH_VERTICAL_BEARING_X_BIT_NV
  GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV
  GL_GLYPH_WIDTH_BIT_NV
  GL_GPU_ADDRESS_NV
  GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX
  GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX
  GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX
  GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX
  GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX
  GL_GPU_OPTIMIZED_QCOM
  GL_GREATER
  GL_GREEN
  GL_GREEN_BIAS
  GL_GREEN_BITS
  GL_GREEN_BIT_ATI
  GL_GREEN_INTEGER
  GL_GREEN_INTEGER_EXT
  GL_GREEN_MAX_CLAMP_INGR
  GL_GREEN_MIN_CLAMP_INGR
  GL_GREEN_NV
  GL_GREEN_SCALE
  GL_GUILTY_CONTEXT_RESET
  GL_GUILTY_CONTEXT_RESET_ARB
  GL_HALF_APPLE
  GL_HALF_BIAS_NEGATE_NV
  GL_HALF_BIAS_NORMAL_NV
  GL_HALF_BIT_ATI
  GL_HALF_FLOAT
  GL_HALF_FLOAT_ARB
  GL_HALF_FLOAT_NV
  GL_HANDLE_TYPE_D3D11_IMAGE_EXT
  GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT
  GL_HANDLE_TYPE_D3D12_FENCE_EXT
  GL_HANDLE_TYPE_D3D12_RESOURCE_EXT
  GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT
  GL_HANDLE_TYPE_OPAQUE_FD_EXT
  GL_HANDLE_TYPE_OPAQUE_WIN32_EXT
  GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT
  GL_HARDLIGHT_KHR
  GL_HARDLIGHT_NV
  GL_HARDMIX_NV
  GL_HIGH_FLOAT
  GL_HIGH_INT
  GL_HILO16_NV
  GL_HILO8_NV
  GL_HILO_NV
  GL_HINT_BIT
  GL_HISTOGRAM
  GL_HISTOGRAM_ALPHA_SIZE
  GL_HISTOGRAM_ALPHA_SIZE_EXT
  GL_HISTOGRAM_BLUE_SIZE
  GL_HISTOGRAM_BLUE_SIZE_EXT
  GL_HISTOGRAM_EXT
  GL_HISTOGRAM_FORMAT
  GL_HISTOGRAM_FORMAT_EXT
  GL_HISTOGRAM_GREEN_SIZE
  GL_HISTOGRAM_GREEN_SIZE_EXT
  GL_HISTOGRAM_LUMINANCE_SIZE
  GL_HISTOGRAM_LUMINANCE_SIZE_EXT
  GL_HISTOGRAM_RED_SIZE
  GL_HISTOGRAM_RED_SIZE_EXT
  GL_HISTOGRAM_SINK
  GL_HISTOGRAM_SINK_EXT
  GL_HISTOGRAM_WIDTH
  GL_HISTOGRAM_WIDTH_EXT
  GL_HI_BIAS_NV
  GL_HI_SCALE_NV
  GL_HORIZONTAL_LINE_TO_NV
  GL_HSL_COLOR_KHR
  GL_HSL_COLOR_NV
  GL_HSL_HUE_KHR
  GL_HSL_HUE_NV
  GL_HSL_LUMINOSITY_KHR
  GL_HSL_LUMINOSITY_NV
  GL_HSL_SATURATION_KHR
  GL_HSL_SATURATION_NV
  GL_IDENTITY_NV
  GL_IGLOO_COLORNORMAL_SGIX
  GL_IGLOO_FULLSCREEN_SGIX
  GL_IGLOO_IRISGL_MODE_SGIX
  GL_IGLOO_LMC_COLOR_SGIX
  GL_IGLOO_SWAPTMESH_SGIX
  GL_IGLOO_TMESHMODE_SGIX
  GL_IGLOO_VIEWPORT_OFFSET_SGIX
  GL_IGNORE_BORDER
  GL_IMAGE_1D
  GL_IMAGE_1D_ARRAY
  GL_IMAGE_1D_ARRAY_EXT
  GL_IMAGE_1D_EXT
  GL_IMAGE_2D
  GL_IMAGE_2D_ARRAY
  GL_IMAGE_2D_ARRAY_EXT
  GL_IMAGE_2D_EXT
  GL_IMAGE_2D_MULTISAMPLE
  GL_IMAGE_2D_MULTISAMPLE_ARRAY
  GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
  GL_IMAGE_2D_MULTISAMPLE_EXT
  GL_IMAGE_2D_RECT
  GL_IMAGE_2D_RECT_EXT
  GL_IMAGE_3D
  GL_IMAGE_3D_EXT
  GL_IMAGE_BINDING_ACCESS
  GL_IMAGE_BINDING_ACCESS_EXT
  GL_IMAGE_BINDING_FORMAT
  GL_IMAGE_BINDING_FORMAT_EXT
  GL_IMAGE_BINDING_LAYER
  GL_IMAGE_BINDING_LAYERED
  GL_IMAGE_BINDING_LAYERED_EXT
  GL_IMAGE_BINDING_LAYER_EXT
  GL_IMAGE_BINDING_LEVEL
  GL_IMAGE_BINDING_LEVEL_EXT
  GL_IMAGE_BINDING_NAME
  GL_IMAGE_BINDING_NAME_EXT
  GL_IMAGE_BIT
  GL_IMAGE_BUFFER
  GL_IMAGE_BUFFER_EXT
  GL_IMAGE_CLASS_10_10_10_2
  GL_IMAGE_CLASS_11_11_10
  GL_IMAGE_CLASS_1_X_16
  GL_IMAGE_CLASS_1_X_32
  GL_IMAGE_CLASS_1_X_8
  GL_IMAGE_CLASS_2_X_16
  GL_IMAGE_CLASS_2_X_32
  GL_IMAGE_CLASS_2_X_8
  GL_IMAGE_CLASS_4_X_16
  GL_IMAGE_CLASS_4_X_32
  GL_IMAGE_CLASS_4_X_8
  GL_IMAGE_COMPATIBILITY_CLASS
  GL_IMAGE_CUBE
  GL_IMAGE_CUBE_EXT
  GL_IMAGE_CUBE_MAP_ARRAY
  GL_IMAGE_CUBE_MAP_ARRAY_EXT
  GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS
  GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE
  GL_IMAGE_FORMAT_COMPATIBILITY_TYPE
  GL_IMAGE_PIXEL_FORMAT
  GL_IMAGE_PIXEL_TYPE
  GL_IMAGE_TEXEL_SIZE
  GL_IMPLEMENTATION_COLOR_READ_FORMAT
  GL_IMPLEMENTATION_COLOR_READ_TYPE
  GL_INCLUSIVE_EXT
  GL_INCR
  GL_INCR_WRAP
  GL_INCR_WRAP_EXT
  GL_INDEX
  GL_INDEX_ARRAY
  GL_INDEX_ARRAY_ADDRESS_NV
  GL_INDEX_ARRAY_BUFFER_BINDING
  GL_INDEX_ARRAY_BUFFER_BINDING_ARB
  GL_INDEX_ARRAY_COUNT_EXT
  GL_INDEX_ARRAY_EXT
  GL_INDEX_ARRAY_LENGTH_NV
  GL_INDEX_ARRAY_LIST_IBM
  GL_INDEX_ARRAY_LIST_STRIDE_IBM
  GL_INDEX_ARRAY_POINTER
  GL_INDEX_ARRAY_POINTER_EXT
  GL_INDEX_ARRAY_STRIDE
  GL_INDEX_ARRAY_STRIDE_EXT
  GL_INDEX_ARRAY_TYPE
  GL_INDEX_ARRAY_TYPE_EXT
  GL_INDEX_BITS
  GL_INDEX_BIT_PGI
  GL_INDEX_CLEAR_VALUE
  GL_INDEX_LOGIC_OP
  GL_INDEX_MODE
  GL_INDEX_OFFSET
  GL_INDEX_SHIFT
  GL_INDEX_WRITEMASK
  GL_INFO_LOG_LENGTH
  GL_INNOCENT_CONTEXT_RESET
  GL_INNOCENT_CONTEXT_RESET_ARB
  GL_INT
  GL_INT16_NV
  GL_INT16_VEC2_NV
  GL_INT16_VEC3_NV
  GL_INT16_VEC4_NV
  GL_INT64_ARB
  GL_INT64_NV
  GL_INT64_VEC2_ARB
  GL_INT64_VEC2_NV
  GL_INT64_VEC3_ARB
  GL_INT64_VEC3_NV
  GL_INT64_VEC4_ARB
  GL_INT64_VEC4_NV
  GL_INT8_NV
  GL_INT8_VEC2_NV
  GL_INT8_VEC3_NV
  GL_INT8_VEC4_NV
  GL_INTENSITY
  GL_INTENSITY12
  GL_INTENSITY12_EXT
  GL_INTENSITY16
  GL_INTENSITY16F_ARB
  GL_INTENSITY16I_EXT
  GL_INTENSITY16UI_EXT
  GL_INTENSITY16_EXT
  GL_INTENSITY16_EXTENDED_RANGE_SGIX
  GL_INTENSITY16_ICC_SGIX
  GL_INTENSITY16_SIGNED_SGIX
  GL_INTENSITY16_SNORM
  GL_INTENSITY32F_ARB
  GL_INTENSITY32I_EXT
  GL_INTENSITY32UI_EXT
  GL_INTENSITY4
  GL_INTENSITY4_EXT
  GL_INTENSITY8
  GL_INTENSITY8I_EXT
  GL_INTENSITY8UI_EXT
  GL_INTENSITY8_EXT
  GL_INTENSITY8_SNORM
  GL_INTENSITY_EXT
  GL_INTENSITY_EXTENDED_RANGE_SGIX
  GL_INTENSITY_FLOAT16_APPLE
  GL_INTENSITY_FLOAT16_ATI
  GL_INTENSITY_FLOAT32_APPLE
  GL_INTENSITY_FLOAT32_ATI
  GL_INTENSITY_ICC_SGIX
  GL_INTENSITY_SIGNED_SGIX
  GL_INTENSITY_SNORM
  GL_INTERLACE_OML
  GL_INTERLACE_READ_INGR
  GL_INTERLACE_READ_OML
  GL_INTERLACE_SGIX
  GL_INTERLEAVED_ATTRIBS
  GL_INTERLEAVED_ATTRIBS_EXT
  GL_INTERLEAVED_ATTRIBS_NV
  GL_INTERNALFORMAT_ALPHA_SIZE
  GL_INTERNALFORMAT_ALPHA_TYPE
  GL_INTERNALFORMAT_BLUE_SIZE
  GL_INTERNALFORMAT_BLUE_TYPE
  GL_INTERNALFORMAT_DEPTH_SIZE
  GL_INTERNALFORMAT_DEPTH_TYPE
  GL_INTERNALFORMAT_GREEN_SIZE
  GL_INTERNALFORMAT_GREEN_TYPE
  GL_INTERNALFORMAT_PREFERRED
  GL_INTERNALFORMAT_RED_SIZE
  GL_INTERNALFORMAT_RED_TYPE
  GL_INTERNALFORMAT_SHARED_SIZE
  GL_INTERNALFORMAT_STENCIL_SIZE
  GL_INTERNALFORMAT_STENCIL_TYPE
  GL_INTERNALFORMAT_SUPPORTED
  GL_INTERPOLATE
  GL_INTERPOLATE_ARB
  GL_INTERPOLATE_EXT
  GL_INT_2_10_10_10_REV
  GL_INT_IMAGE_1D
  GL_INT_IMAGE_1D_ARRAY
  GL_INT_IMAGE_1D_ARRAY_EXT
  GL_INT_IMAGE_1D_EXT
  GL_INT_IMAGE_2D
  GL_INT_IMAGE_2D_ARRAY
  GL_INT_IMAGE_2D_ARRAY_EXT
  GL_INT_IMAGE_2D_EXT
  GL_INT_IMAGE_2D_MULTISAMPLE
  GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY
  GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
  GL_INT_IMAGE_2D_MULTISAMPLE_EXT
  GL_INT_IMAGE_2D_RECT
  GL_INT_IMAGE_2D_RECT_EXT
  GL_INT_IMAGE_3D
  GL_INT_IMAGE_3D_EXT
  GL_INT_IMAGE_BUFFER
  GL_INT_IMAGE_BUFFER_EXT
  GL_INT_IMAGE_CUBE
  GL_INT_IMAGE_CUBE_EXT
  GL_INT_IMAGE_CUBE_MAP_ARRAY
  GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT
  GL_INT_SAMPLER_1D
  GL_INT_SAMPLER_1D_ARRAY
  GL_INT_SAMPLER_1D_ARRAY_EXT
  GL_INT_SAMPLER_1D_EXT
  GL_INT_SAMPLER_2D
  GL_INT_SAMPLER_2D_ARRAY
  GL_INT_SAMPLER_2D_ARRAY_EXT
  GL_INT_SAMPLER_2D_EXT
  GL_INT_SAMPLER_2D_MULTISAMPLE
  GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
  GL_INT_SAMPLER_2D_RECT
  GL_INT_SAMPLER_2D_RECT_EXT
  GL_INT_SAMPLER_3D
  GL_INT_SAMPLER_3D_EXT
  GL_INT_SAMPLER_BUFFER
  GL_INT_SAMPLER_BUFFER_AMD
  GL_INT_SAMPLER_BUFFER_EXT
  GL_INT_SAMPLER_CUBE
  GL_INT_SAMPLER_CUBE_EXT
  GL_INT_SAMPLER_CUBE_MAP_ARRAY
  GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB
  GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT
  GL_INT_SAMPLER_RENDERBUFFER_NV
  GL_INT_VEC2
  GL_INT_VEC2_ARB
  GL_INT_VEC3
  GL_INT_VEC3_ARB
  GL_INT_VEC4
  GL_INT_VEC4_ARB
  GL_INVALID_ENUM
  GL_INVALID_FRAMEBUFFER_OPERATION
  GL_INVALID_FRAMEBUFFER_OPERATION_EXT
  GL_INVALID_INDEX
  GL_INVALID_OPERATION
  GL_INVALID_VALUE
  GL_INVARIANT_DATATYPE_EXT
  GL_INVARIANT_EXT
  GL_INVARIANT_VALUE_EXT
  GL_INVERSE_NV
  GL_INVERSE_TRANSPOSE_NV
  GL_INVERT
  GL_INVERTED_SCREEN_W_REND
  GL_INVERT_OVG_NV
  GL_INVERT_RGB_NV
  GL_ISOLINES
  GL_IS_PER_PATCH
  GL_IS_ROW_MAJOR
  GL_ITALIC_BIT_NV
  GL_KEEP
  GL_KTX_BACK_REGION
  GL_KTX_FRONT_REGION
  GL_KTX_STENCIL_REGION
  GL_KTX_Z_REGION
  GL_LARGE_CCW_ARC_TO_NV
  GL_LARGE_CW_ARC_TO_NV
  GL_LAST_VERTEX_CONVENTION
  GL_LAST_VERTEX_CONVENTION_EXT
  GL_LAST_VIDEO_CAPTURE_STATUS_NV
  GL_LAYERED_SGIX
  GL_LAYER_PROVOKING_VERTEX
  GL_LAYER_PROVOKING_VERTEX_EXT
  GL_LAYOUT_COLOR_ATTACHMENT_EXT
  GL_LAYOUT_DEFAULT_INTEL
  GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT
  GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT
  GL_LAYOUT_GENERAL_EXT
  GL_LAYOUT_LINEAR_CPU_CACHED_INTEL
  GL_LAYOUT_SHADER_READ_ONLY_EXT
  GL_LAYOUT_TRANSFER_DST_EXT
  GL_LAYOUT_TRANSFER_SRC_EXT
  GL_LEFT
  GL_LEQUAL
  GL_LERP_ATI
  GL_LESS
  GL_LGPU_SEPARATE_STORAGE_BIT_NVX
  GL_LIGHT0
  GL_LIGHT1
  GL_LIGHT2
  GL_LIGHT3
  GL_LIGHT31
  GL_LIGHT4
  GL_LIGHT5
  GL_LIGHT6
  GL_LIGHT7
  GL_LIGHTEN_KHR
  GL_LIGHTEN_NV
  GL_LIGHTING
  GL_LIGHTING_BIT
  GL_LIGHT_ENV_MODE_EXT
  GL_LIGHT_MODEL_AMBIENT
  GL_LIGHT_MODEL_COLOR_CONTROL
  GL_LIGHT_MODEL_COLOR_CONTROL_EXT
  GL_LIGHT_MODEL_LOCAL_VIEWER
  GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE
  GL_LIGHT_MODEL_TWO_SIDE
  GL_LINE
  GL_LINEAR
  GL_LINEARBURN_NV
  GL_LINEARDODGE_NV
  GL_LINEARLIGHT_NV
  GL_LINEAR_ATTENUATION
  GL_LINEAR_MIPMAP_LINEAR
  GL_LINEAR_MIPMAP_NEAREST
  GL_LINEAR_TILING_EXT
  GL_LINES
  GL_LINES_ADJACENCY
  GL_LINES_ADJACENCY_ARB
  GL_LINES_ADJACENCY_EXT
  GL_LINE_BIT
  GL_LINE_LOOP
  GL_LINE_NV
  GL_LINE_QUALITY_HINT_SGIX
  GL_LINE_RESET_TOKEN
  GL_LINE_SMOOTH
  GL_LINE_SMOOTH_HINT
  GL_LINE_STIPPLE
  GL_LINE_STIPPLE_PATTERN
  GL_LINE_STIPPLE_REPEAT
  GL_LINE_STRIP
  GL_LINE_STRIP_ADJACENCY
  GL_LINE_STRIP_ADJACENCY_ARB
  GL_LINE_STRIP_ADJACENCY_EXT
  GL_LINE_TOKEN
  GL_LINE_TO_NV
  GL_LINE_WIDTH
  GL_LINE_WIDTH_COMMAND_NV
  GL_LINE_WIDTH_GRANULARITY
  GL_LINE_WIDTH_RANGE
  GL_LINK_STATUS
  GL_LIST_BASE
  GL_LIST_BIT
  GL_LIST_INDEX
  GL_LIST_MODE
  GL_LOAD
  GL_LOCAL_CONSTANT_DATATYPE_EXT
  GL_LOCAL_CONSTANT_EXT
  GL_LOCAL_CONSTANT_VALUE_EXT
  GL_LOCAL_EXT
  GL_LOCATION
  GL_LOCATION_COMPONENT
  GL_LOCATION_INDEX
  GL_LOCATION_INDEX_EXT
  GL_LOGIC_OP
  GL_LOGIC_OP_MODE
  GL_LOG_APP_REGAL
  GL_LOG_DEBUG_REGAL
  GL_LOG_DRIVER_REGAL
  GL_LOG_ERROR_REGAL
  GL_LOG_HTTP_REGAL
  GL_LOG_INFO_REGAL
  GL_LOG_INTERNAL_REGAL
  GL_LOG_REGAL
  GL_LOG_STATUS_REGAL
  GL_LOG_WARNING_REGAL
  GL_LOSE_CONTEXT_ON_RESET
  GL_LOSE_CONTEXT_ON_RESET_ARB
  GL_LOWER_LEFT
  GL_LOW_FLOAT
  GL_LOW_INT
  GL_LO_BIAS_NV
  GL_LO_SCALE_NV
  GL_LUID_SIZE_EXT
  GL_LUMINANCE
  GL_LUMINANCE12
  GL_LUMINANCE12_ALPHA12
  GL_LUMINANCE12_ALPHA12_EXT
  GL_LUMINANCE12_ALPHA4
  GL_LUMINANCE12_ALPHA4_EXT
  GL_LUMINANCE12_EXT
  GL_LUMINANCE16
  GL_LUMINANCE16F_ARB
  GL_LUMINANCE16F_EXT
  GL_LUMINANCE16I_EXT
  GL_LUMINANCE16UI_EXT
  GL_LUMINANCE16_ALPHA16
  GL_LUMINANCE16_ALPHA16_EXT
  GL_LUMINANCE16_ALPHA16_EXTENDED_RANGE_SGIX
  GL_LUMINANCE16_ALPHA16_SIGNED_SGIX
  GL_LUMINANCE16_ALPHA16_SNORM
  GL_LUMINANCE16_ALPHA8_ICC_SGIX
  GL_LUMINANCE16_EXT
  GL_LUMINANCE16_EXTENDED_RANGE_SGIX
  GL_LUMINANCE16_ICC_SGIX
  GL_LUMINANCE16_SIGNED_SGIX
  GL_LUMINANCE16_SNORM
  GL_LUMINANCE32F_ARB
  GL_LUMINANCE32F_EXT
  GL_LUMINANCE32I_EXT
  GL_LUMINANCE32UI_EXT
  GL_LUMINANCE4
  GL_LUMINANCE4_ALPHA4
  GL_LUMINANCE4_ALPHA4_EXT
  GL_LUMINANCE4_EXT
  GL_LUMINANCE6_ALPHA2
  GL_LUMINANCE6_ALPHA2_EXT
  GL_LUMINANCE8
  GL_LUMINANCE8I_EXT
  GL_LUMINANCE8UI_EXT
  GL_LUMINANCE8_ALPHA8
  GL_LUMINANCE8_ALPHA8_EXT
  GL_LUMINANCE8_ALPHA8_SNORM
  GL_LUMINANCE8_EXT
  GL_LUMINANCE8_SNORM
  GL_LUMINANCE_ALPHA
  GL_LUMINANCE_ALPHA16F_ARB
  GL_LUMINANCE_ALPHA16F_EXT
  GL_LUMINANCE_ALPHA16I_EXT
  GL_LUMINANCE_ALPHA16UI_EXT
  GL_LUMINANCE_ALPHA32F_ARB
  GL_LUMINANCE_ALPHA32F_EXT
  GL_LUMINANCE_ALPHA32I_EXT
  GL_LUMINANCE_ALPHA32UI_EXT
  GL_LUMINANCE_ALPHA8I_EXT
  GL_LUMINANCE_ALPHA8UI_EXT
  GL_LUMINANCE_ALPHA_EXTENDED_RANGE_SGIX
  GL_LUMINANCE_ALPHA_FLOAT16_APPLE
  GL_LUMINANCE_ALPHA_FLOAT16_ATI
  GL_LUMINANCE_ALPHA_FLOAT32_APPLE
  GL_LUMINANCE_ALPHA_FLOAT32_ATI
  GL_LUMINANCE_ALPHA_ICC_SGIX
  GL_LUMINANCE_ALPHA_INTEGER_EXT
  GL_LUMINANCE_ALPHA_SIGNED_SGIX
  GL_LUMINANCE_ALPHA_SNORM
  GL_LUMINANCE_EXTENDED_RANGE_SGIX
  GL_LUMINANCE_FLOAT16_APPLE
  GL_LUMINANCE_FLOAT16_ATI
  GL_LUMINANCE_FLOAT32_APPLE
  GL_LUMINANCE_FLOAT32_ATI
  GL_LUMINANCE_ICC_SGIX
  GL_LUMINANCE_INTEGER_EXT
  GL_LUMINANCE_SIGNED_SGIX
  GL_LUMINANCE_SNORM
  GL_MAD_ATI
  GL_MAGNITUDE_BIAS_NV
  GL_MAGNITUDE_SCALE_NV
  GL_MAJOR_VERSION
  GL_MALI_PROGRAM_BINARY_ARM
  GL_MALI_SHADER_BINARY_ARM
  GL_MANUAL_GENERATE_MIPMAP
  GL_MAP1_BINORMAL_EXT
  GL_MAP1_COLOR_4
  GL_MAP1_COLOR_4_NURBS_SGIX
  GL_MAP1_GRID_DOMAIN
  GL_MAP1_GRID_SEGMENTS
  GL_MAP1_INDEX
  GL_MAP1_INDEX_NURBS_SGIX
  GL_MAP1_NORMAL
  GL_MAP1_NORMAL_NURBS_SGIX
  GL_MAP1_TANGENT_EXT
  GL_MAP1_TEXTURE_COORD_1
  GL_MAP1_TEXTURE_COORD_1_NURBS_SGIX
  GL_MAP1_TEXTURE_COORD_2
  GL_MAP1_TEXTURE_COORD_2_NURBS_SGIX
  GL_MAP1_TEXTURE_COORD_3
  GL_MAP1_TEXTURE_COORD_3_NURBS_SGIX
  GL_MAP1_TEXTURE_COORD_4
  GL_MAP1_TEXTURE_COORD_4_NURBS_SGIX
  GL_MAP1_VERTEX_3
  GL_MAP1_VERTEX_3_NURBS_SGIX
  GL_MAP1_VERTEX_4
  GL_MAP1_VERTEX_4_NURBS_SGIX
  GL_MAP1_VERTEX_ATTRIB0_4_NV
  GL_MAP1_VERTEX_ATTRIB10_4_NV
  GL_MAP1_VERTEX_ATTRIB11_4_NV
  GL_MAP1_VERTEX_ATTRIB12_4_NV
  GL_MAP1_VERTEX_ATTRIB13_4_NV
  GL_MAP1_VERTEX_ATTRIB14_4_NV
  GL_MAP1_VERTEX_ATTRIB15_4_NV
  GL_MAP1_VERTEX_ATTRIB1_4_NV
  GL_MAP1_VERTEX_ATTRIB2_4_NV
  GL_MAP1_VERTEX_ATTRIB3_4_NV
  GL_MAP1_VERTEX_ATTRIB4_4_NV
  GL_MAP1_VERTEX_ATTRIB5_4_NV
  GL_MAP1_VERTEX_ATTRIB6_4_NV
  GL_MAP1_VERTEX_ATTRIB7_4_NV
  GL_MAP1_VERTEX_ATTRIB8_4_NV
  GL_MAP1_VERTEX_ATTRIB9_4_NV
  GL_MAP2_BINORMAL_EXT
  GL_MAP2_COLOR_4
  GL_MAP2_COLOR_4_NURBS_SGIX
  GL_MAP2_GRID_DOMAIN
  GL_MAP2_GRID_SEGMENTS
  GL_MAP2_INDEX
  GL_MAP2_INDEX_NURBS_SGIX
  GL_MAP2_NORMAL
  GL_MAP2_NORMAL_NURBS_SGIX
  GL_MAP2_TANGENT_EXT
  GL_MAP2_TEXTURE_COORD_1
  GL_MAP2_TEXTURE_COORD_1_NURBS_SGIX
  GL_MAP2_TEXTURE_COORD_2
  GL_MAP2_TEXTURE_COORD_2_NURBS_SGIX
  GL_MAP2_TEXTURE_COORD_3
  GL_MAP2_TEXTURE_COORD_3_NURBS_SGIX
  GL_MAP2_TEXTURE_COORD_4
  GL_MAP2_TEXTURE_COORD_4_NURBS_SGIX
  GL_MAP2_VERTEX_3
  GL_MAP2_VERTEX_3_NURBS_SGIX
  GL_MAP2_VERTEX_4
  GL_MAP2_VERTEX_4_NURBS_SGIX
  GL_MAP2_VERTEX_ATTRIB0_4_NV
  GL_MAP2_VERTEX_ATTRIB10_4_NV
  GL_MAP2_VERTEX_ATTRIB11_4_NV
  GL_MAP2_VERTEX_ATTRIB12_4_NV
  GL_MAP2_VERTEX_ATTRIB13_4_NV
  GL_MAP2_VERTEX_ATTRIB14_4_NV
  GL_MAP2_VERTEX_ATTRIB15_4_NV
  GL_MAP2_VERTEX_ATTRIB1_4_NV
  GL_MAP2_VERTEX_ATTRIB2_4_NV
  GL_MAP2_VERTEX_ATTRIB3_4_NV
  GL_MAP2_VERTEX_ATTRIB4_4_NV
  GL_MAP2_VERTEX_ATTRIB5_4_NV
  GL_MAP2_VERTEX_ATTRIB6_4_NV
  GL_MAP2_VERTEX_ATTRIB7_4_NV
  GL_MAP2_VERTEX_ATTRIB8_4_NV
  GL_MAP2_VERTEX_ATTRIB9_4_NV
  GL_MAP_ATTRIB_U_ORDER_NV
  GL_MAP_ATTRIB_V_ORDER_NV
  GL_MAP_COHERENT_BIT
  GL_MAP_COHERENT_BIT_EXT
  GL_MAP_COLOR
  GL_MAP_FLUSH_EXPLICIT_BIT
  GL_MAP_FLUSH_EXPLICIT_BIT_EXT
  GL_MAP_INVALIDATE_BUFFER_BIT
  GL_MAP_INVALIDATE_BUFFER_BIT_EXT
  GL_MAP_INVALIDATE_RANGE_BIT
  GL_MAP_INVALIDATE_RANGE_BIT_EXT
  GL_MAP_PERSISTENT_BIT
  GL_MAP_PERSISTENT_BIT_EXT
  GL_MAP_READ_BIT
  GL_MAP_READ_BIT_EXT
  GL_MAP_STENCIL
  GL_MAP_TESSELLATION_NV
  GL_MAP_UNSYNCHRONIZED_BIT
  GL_MAP_UNSYNCHRONIZED_BIT_EXT
  GL_MAP_WRITE_BIT
  GL_MAP_WRITE_BIT_EXT
  GL_MATERIAL_SIDE_HINT_PGI
  GL_MATRIX0_ARB
  GL_MATRIX0_NV
  GL_MATRIX10_ARB
  GL_MATRIX11_ARB
  GL_MATRIX12_ARB
  GL_MATRIX13_ARB
  GL_MATRIX14_ARB
  GL_MATRIX15_ARB
  GL_MATRIX16_ARB
  GL_MATRIX17_ARB
  GL_MATRIX18_ARB
  GL_MATRIX19_ARB
  GL_MATRIX1_ARB
  GL_MATRIX1_NV
  GL_MATRIX20_ARB
  GL_MATRIX21_ARB
  GL_MATRIX22_ARB
  GL_MATRIX23_ARB
  GL_MATRIX24_ARB
  GL_MATRIX25_ARB
  GL_MATRIX26_ARB
  GL_MATRIX27_ARB
  GL_MATRIX28_ARB
  GL_MATRIX29_ARB
  GL_MATRIX2_ARB
  GL_MATRIX2_NV
  GL_MATRIX30_ARB
  GL_MATRIX31_ARB
  GL_MATRIX3_ARB
  GL_MATRIX3_NV
  GL_MATRIX4_ARB
  GL_MATRIX4_NV
  GL_MATRIX5_ARB
  GL_MATRIX5_NV
  GL_MATRIX6_ARB
  GL_MATRIX6_NV
  GL_MATRIX7_ARB
  GL_MATRIX7_NV
  GL_MATRIX8_ARB
  GL_MATRIX9_ARB
  GL_MATRIX_EXT
  GL_MATRIX_INDEX_ARRAY_ARB
  GL_MATRIX_INDEX_ARRAY_POINTER_ARB
  GL_MATRIX_INDEX_ARRAY_SIZE_ARB
  GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
  GL_MATRIX_INDEX_ARRAY_TYPE_ARB
  GL_MATRIX_MODE
  GL_MATRIX_PALETTE_ARB
  GL_MATRIX_STRIDE
  GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI
  GL_MAT_AMBIENT_BIT_PGI
  GL_MAT_COLOR_INDEXES_BIT_PGI
  GL_MAT_DIFFUSE_BIT_PGI
  GL_MAT_EMISSION_BIT_PGI
  GL_MAT_SHININESS_BIT_PGI
  GL_MAT_SPECULAR_BIT_PGI
  GL_MAX
  GL_MAX_3D_TEXTURE_SIZE
  GL_MAX_3D_TEXTURE_SIZE_EXT
  GL_MAX_ACTIVE_LIGHTS_EXT
  GL_MAX_ALPHA_SGIS
  GL_MAX_ARRAY_TEXTURE_LAYERS
  GL_MAX_ARRAY_TEXTURE_LAYERS_EXT
  GL_MAX_ARRAY_TEXTURE_LAYERS_NV
  GL_MAX_ASYNC_DRAW_PIXELS_SGIX
  GL_MAX_ASYNC_HISTOGRAM_SGIX
  GL_MAX_ASYNC_READ_PIXELS_SGIX
  GL_MAX_ASYNC_TEX_IMAGE_SGIX
  GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS
  GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE
  GL_MAX_ATTRIB_STACK_DEPTH
  GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
  GL_MAX_BLUE_SGIS
  GL_MAX_CLIENT_ATTRIB_STACK_DEPTH
  GL_MAX_CLIP_DISTANCES
  GL_MAX_CLIP_DISTANCES_APPLE
  GL_MAX_CLIP_DISTANCES_EXT
  GL_MAX_CLIP_PLANES
  GL_MAX_COLOR_ATTACHMENTS
  GL_MAX_COLOR_ATTACHMENTS_EXT
  GL_MAX_COLOR_ATTACHMENTS_NV
  GL_MAX_COLOR_MATRIX_STACK_DEPTH
  GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI
  GL_MAX_COLOR_TEXTURE_SAMPLES
  GL_MAX_COMBINED_ATOMIC_COUNTERS
  GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS
  GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES
  GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT
  GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
  GL_MAX_COMBINED_DIMENSIONS
  GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS
  GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS
  GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT
  GL_MAX_COMBINED_IMAGE_UNIFORMS
  GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS
  GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT
  GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES
  GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS
  GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
  GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
  GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
  GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB
  GL_MAX_COMBINED_UNIFORM_BLOCKS
  GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS
  GL_MAX_COMPUTE_ATOMIC_COUNTERS
  GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
  GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB
  GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB
  GL_MAX_COMPUTE_IMAGE_UNIFORMS
  GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS
  GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
  GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
  GL_MAX_COMPUTE_UNIFORM_BLOCKS
  GL_MAX_COMPUTE_UNIFORM_COMPONENTS
  GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB
  GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB
  GL_MAX_COMPUTE_WORK_GROUP_COUNT
  GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS
  GL_MAX_COMPUTE_WORK_GROUP_SIZE
  GL_MAX_CONVOLUTION_HEIGHT
  GL_MAX_CONVOLUTION_HEIGHT_EXT
  GL_MAX_CONVOLUTION_WIDTH
  GL_MAX_CONVOLUTION_WIDTH_EXT
  GL_MAX_CUBE_MAP_TEXTURE_SIZE
  GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB
  GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT
  GL_MAX_CULL_DISTANCES
  GL_MAX_CULL_DISTANCES_EXT
  GL_MAX_DEBUG_GROUP_STACK_DEPTH
  GL_MAX_DEBUG_LOGGED_MESSAGES
  GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
  GL_MAX_DEBUG_LOGGED_MESSAGES_ARB
  GL_MAX_DEBUG_MESSAGE_LENGTH
  GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
  GL_MAX_DEBUG_MESSAGE_LENGTH_ARB
  GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV
  GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV
  GL_MAX_DEPTH
  GL_MAX_DEPTH_TEXTURE_SAMPLES
  GL_MAX_DRAW_BUFFERS
  GL_MAX_DRAW_BUFFERS_ARB
  GL_MAX_DRAW_BUFFERS_ATI
  GL_MAX_DRAW_BUFFERS_EXT
  GL_MAX_DRAW_BUFFERS_NV
  GL_MAX_DUAL_SOURCE_DRAW_BUFFERS
  GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT
  GL_MAX_ELEMENTS_INDICES
  GL_MAX_ELEMENTS_INDICES_EXT
  GL_MAX_ELEMENTS_VERTICES
  GL_MAX_ELEMENTS_VERTICES_EXT
  GL_MAX_ELEMENT_INDEX
  GL_MAX_EVAL_ORDER
  GL_MAX_EXT
  GL_MAX_FFT_WIDTH_SGI
  GL_MAX_FOG_LAYERS_POINTS_SGIX
  GL_MAX_FRAGMENT_ATOMIC_COUNTERS
  GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS
  GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
  GL_MAX_FRAGMENT_IMAGE_UNIFORMS
  GL_MAX_FRAGMENT_INPUT_COMPONENTS
  GL_MAX_FRAGMENT_INTERPOLATION_OFFSET
  GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV
  GL_MAX_FRAGMENT_LIGHTS_EXT
  GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV
  GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS
  GL_MAX_FRAGMENT_UNIFORM_BLOCKS
  GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
  GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB
  GL_MAX_FRAGMENT_UNIFORM_VECTORS
  GL_MAX_FRAMEBUFFER_HEIGHT
  GL_MAX_FRAMEBUFFER_LAYERS
  GL_MAX_FRAMEBUFFER_LAYERS_EXT
  GL_MAX_FRAMEBUFFER_SAMPLES
  GL_MAX_FRAMEBUFFER_WIDTH
  GL_MAX_GENERAL_COMBINERS_NV
  GL_MAX_GEOMETRY_ATOMIC_COUNTERS
  GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT
  GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS
  GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT
  GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
  GL_MAX_GEOMETRY_IMAGE_UNIFORMS
  GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT
  GL_MAX_GEOMETRY_INPUT_COMPONENTS
  GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT
  GL_MAX_GEOMETRY_OUTPUT_COMPONENTS
  GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT
  GL_MAX_GEOMETRY_OUTPUT_VERTICES
  GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
  GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT
  GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV
  GL_MAX_GEOMETRY_SHADER_INVOCATIONS
  GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT
  GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS
  GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT
  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS
  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT
  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS
  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT
  GL_MAX_GEOMETRY_UNIFORM_BLOCKS
  GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT
  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS
  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT
  GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
  GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT
  GL_MAX_GREEN_SGIS
  GL_MAX_HEIGHT
  GL_MAX_IMAGE_SAMPLES
  GL_MAX_IMAGE_SAMPLES_EXT
  GL_MAX_IMAGE_UNITS
  GL_MAX_IMAGE_UNITS_EXT
  GL_MAX_INTEGER_SAMPLES
  GL_MAX_INTENSITY_SGIS
  GL_MAX_LABEL_LENGTH
  GL_MAX_LAYERS
  GL_MAX_LGPU_GPUS_NVX
  GL_MAX_LIGHTS
  GL_MAX_LIST_NESTING
  GL_MAX_LUMINANCE_SGIS
  GL_MAX_MAP_TESSELLATION_NV
  GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
  GL_MAX_MIPMAP_ANISOTROPY_SGIX
  GL_MAX_MODELVIEW_STACK_DEPTH
  GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV
  GL_MAX_MULTIVIEW_BUFFERS_EXT
  GL_MAX_NAME_LENGTH
  GL_MAX_NAME_STACK_DEPTH
  GL_MAX_NUM_ACTIVE_VARIABLES
  GL_MAX_NUM_COMPATIBLE_SUBROUTINES
  GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT
  GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT
  GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT
  GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
  GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT
  GL_MAX_PALETTE_MATRICES_ARB
  GL_MAX_PATCH_VERTICES
  GL_MAX_PIXEL_MAP_TABLE
  GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
  GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI
  GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB
  GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB
  GL_MAX_PROGRAM_ATTRIBS_ARB
  GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV
  GL_MAX_PROGRAM_CALL_DEPTH_NV
  GL_MAX_PROGRAM_ENV_PARAMETERS_ARB
  GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV
  GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV
  GL_MAX_PROGRAM_GENERIC_RESULTS_NV
  GL_MAX_PROGRAM_IF_DEPTH_NV
  GL_MAX_PROGRAM_INSTRUCTIONS_ARB
  GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB
  GL_MAX_PROGRAM_LOOP_COUNT_NV
  GL_MAX_PROGRAM_LOOP_DEPTH_NV
  GL_MAX_PROGRAM_MATRICES_ARB
  GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB
  GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
  GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
  GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB
  GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB
  GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB
  GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB
  GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
  GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
  GL_MAX_PROGRAM_OUTPUT_VERTICES_NV
  GL_MAX_PROGRAM_PARAMETERS_ARB
  GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV
  GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV
  GL_MAX_PROGRAM_PATCH_ATTRIBS_NV
  GL_MAX_PROGRAM_RESULT_COMPONENTS_NV
  GL_MAX_PROGRAM_TEMPORARIES_ARB
  GL_MAX_PROGRAM_TEXEL_OFFSET
  GL_MAX_PROGRAM_TEXEL_OFFSET_NV
  GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS
  GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB
  GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET
  GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB
  GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV
  GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB
  GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB
  GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV
  GL_MAX_PROJECTION_STACK_DEPTH
  GL_MAX_RASTER_SAMPLES_EXT
  GL_MAX_RATIONAL_EVAL_ORDER_NV
  GL_MAX_RECTANGLE_TEXTURE_SIZE
  GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB
  GL_MAX_RECTANGLE_TEXTURE_SIZE_EXT
  GL_MAX_RECTANGLE_TEXTURE_SIZE_NV
  GL_MAX_RED_SGIS
  GL_MAX_RENDERBUFFER_SIZE
  GL_MAX_RENDERBUFFER_SIZE_EXT
  GL_MAX_SAMPLES
  GL_MAX_SAMPLES_ANGLE
  GL_MAX_SAMPLES_APPLE
  GL_MAX_SAMPLES_EXT
  GL_MAX_SAMPLES_NV
  GL_MAX_SAMPLE_MASK_WORDS
  GL_MAX_SAMPLE_MASK_WORDS_NV
  GL_MAX_SERVER_WAIT_TIMEOUT
  GL_MAX_SERVER_WAIT_TIMEOUT_APPLE
  GL_MAX_SHADER_BUFFER_ADDRESS_NV
  GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT
  GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT
  GL_MAX_SHADER_COMPILER_THREADS_ARB
  GL_MAX_SHADER_COMPILER_THREADS_KHR
  GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT
  GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT
  GL_MAX_SHADER_STORAGE_BLOCK_SIZE
  GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS
  GL_MAX_SHININESS_NV
  GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD
  GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB
  GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT
  GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS
  GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB
  GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT
  GL_MAX_SPARSE_TEXTURE_SIZE_AMD
  GL_MAX_SPARSE_TEXTURE_SIZE_ARB
  GL_MAX_SPARSE_TEXTURE_SIZE_EXT
  GL_MAX_SPOT_EXPONENT_NV
  GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV
  GL_MAX_SUBROUTINES
  GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
  GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS
  GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS
  GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS
  GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
  GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
  GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS
  GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
  GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
  GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
  GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS
  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS
  GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS
  GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
  GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
  GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS
  GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
  GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
  GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
  GL_MAX_TESS_GEN_LEVEL
  GL_MAX_TESS_PATCH_COMPONENTS
  GL_MAX_TEXTURES_SGIS
  GL_MAX_TEXTURE_BUFFER_SIZE
  GL_MAX_TEXTURE_BUFFER_SIZE_ARB
  GL_MAX_TEXTURE_BUFFER_SIZE_EXT
  GL_MAX_TEXTURE_COORDS
  GL_MAX_TEXTURE_COORDS_ARB
  GL_MAX_TEXTURE_COORDS_NV
  GL_MAX_TEXTURE_COORD_SETS_SGIS
  GL_MAX_TEXTURE_IMAGE_UNITS
  GL_MAX_TEXTURE_IMAGE_UNITS_ARB
  GL_MAX_TEXTURE_IMAGE_UNITS_NV
  GL_MAX_TEXTURE_LOD_BIAS
  GL_MAX_TEXTURE_LOD_BIAS_EXT
  GL_MAX_TEXTURE_MAX_ANISOTROPY
  GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
  GL_MAX_TEXTURE_SIZE
  GL_MAX_TEXTURE_STACK_DEPTH
  GL_MAX_TEXTURE_UNITS
  GL_MAX_TEXTURE_UNITS_ARB
  GL_MAX_TRACK_MATRICES_NV
  GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV
  GL_MAX_TRANSFORM_FEEDBACK_BUFFERS
  GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS
  GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT
  GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
  GL_MAX_UNIFORM_BLOCK_SIZE
  GL_MAX_UNIFORM_BUFFER_BINDINGS
  GL_MAX_UNIFORM_LOCATIONS
  GL_MAX_VARYING_COMPONENTS
  GL_MAX_VARYING_COMPONENTS_EXT
  GL_MAX_VARYING_FLOATS
  GL_MAX_VARYING_FLOATS_ARB
  GL_MAX_VARYING_VECTORS
  GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_APPLE
  GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV
  GL_MAX_VERTEX_ATOMIC_COUNTERS
  GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS
  GL_MAX_VERTEX_ATTRIBS
  GL_MAX_VERTEX_ATTRIBS_ARB
  GL_MAX_VERTEX_ATTRIB_BINDINGS
  GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
  GL_MAX_VERTEX_ATTRIB_STRIDE
  GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
  GL_MAX_VERTEX_HINT_PGI
  GL_MAX_VERTEX_IMAGE_UNIFORMS
  GL_MAX_VERTEX_OUTPUT_COMPONENTS
  GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT
  GL_MAX_VERTEX_SHADER_INVARIANTS_EXT
  GL_MAX_VERTEX_SHADER_LOCALS_EXT
  GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
  GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS
  GL_MAX_VERTEX_SHADER_VARIANTS_EXT
  GL_MAX_VERTEX_STREAMS
  GL_MAX_VERTEX_STREAMS_ATI
  GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
  GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB
  GL_MAX_VERTEX_UNIFORM_BLOCKS
  GL_MAX_VERTEX_UNIFORM_COMPONENTS
  GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB
  GL_MAX_VERTEX_UNIFORM_VECTORS
  GL_MAX_VERTEX_UNITS_ARB
  GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
  GL_MAX_VERTEX_VARYING_COMPONENTS_EXT
  GL_MAX_VIEWPORTS
  GL_MAX_VIEWPORTS_NV
  GL_MAX_VIEWPORT_DIMS
  GL_MAX_VIEWS_OVR
  GL_MAX_WIDTH
  GL_MAX_WINDOW_RECTANGLES_EXT
  GL_MEDIUM_FLOAT
  GL_MEDIUM_INT
  GL_MIN
  GL_MINMAX
  GL_MINMAX_EXT
  GL_MINMAX_FORMAT
  GL_MINMAX_FORMAT_EXT
  GL_MINMAX_SINK
  GL_MINMAX_SINK_EXT
  GL_MINOR_VERSION
  GL_MINUS_CLAMPED_NV
  GL_MINUS_NV
  GL_MIN_ALPHA_SGIS
  GL_MIN_BLUE_SGIS
  GL_MIN_EXT
  GL_MIN_FRAGMENT_INTERPOLATION_OFFSET
  GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV
  GL_MIN_GREEN_SGIS
  GL_MIN_INTENSITY_SGIS
  GL_MIN_LOD_WARNING_AMD
  GL_MIN_LUMINANCE_SGIS
  GL_MIN_MAP_BUFFER_ALIGNMENT
  GL_MIN_PBUFFER_VIEWPORT_DIMS_APPLE
  GL_MIN_PROGRAM_TEXEL_OFFSET
  GL_MIN_PROGRAM_TEXEL_OFFSET_NV
  GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET
  GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB
  GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV
  GL_MIN_RED_SGIS
  GL_MIN_SAMPLE_SHADING_VALUE
  GL_MIN_SAMPLE_SHADING_VALUE_ARB
  GL_MIN_SPARSE_LEVEL_AMD
  GL_MIPMAP
  GL_MIRRORED_REPEAT
  GL_MIRRORED_REPEAT_ARB
  GL_MIRRORED_REPEAT_IBM
  GL_MIRROR_CLAMP_ATI
  GL_MIRROR_CLAMP_EXT
  GL_MIRROR_CLAMP_TO_BORDER_EXT
  GL_MIRROR_CLAMP_TO_EDGE
  GL_MIRROR_CLAMP_TO_EDGE_ATI
  GL_MIRROR_CLAMP_TO_EDGE_EXT
  GL_MISSING_REGAL
  GL_MITER_REVERT_NV
  GL_MITER_TRUNCATE_NV
  GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV
  GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV
  GL_MODELVIEW
  GL_MODELVIEW0_ARB
  GL_MODELVIEW0_EXT
  GL_MODELVIEW0_MATRIX_EXT
  GL_MODELVIEW0_STACK_DEPTH_EXT
  GL_MODELVIEW10_ARB
  GL_MODELVIEW11_ARB
  GL_MODELVIEW12_ARB
  GL_MODELVIEW13_ARB
  GL_MODELVIEW14_ARB
  GL_MODELVIEW15_ARB
  GL_MODELVIEW16_ARB
  GL_MODELVIEW17_ARB
  GL_MODELVIEW18_ARB
  GL_MODELVIEW19_ARB
  GL_MODELVIEW1_ARB
  GL_MODELVIEW1_EXT
  GL_MODELVIEW1_MATRIX_EXT
  GL_MODELVIEW1_STACK_DEPTH_EXT
  GL_MODELVIEW20_ARB
  GL_MODELVIEW21_ARB
  GL_MODELVIEW22_ARB
  GL_MODELVIEW23_ARB
  GL_MODELVIEW24_ARB
  GL_MODELVIEW25_ARB
  GL_MODELVIEW26_ARB
  GL_MODELVIEW27_ARB
  GL_MODELVIEW28_ARB
  GL_MODELVIEW29_ARB
  GL_MODELVIEW2_ARB
  GL_MODELVIEW30_ARB
  GL_MODELVIEW31_ARB
  GL_MODELVIEW3_ARB
  GL_MODELVIEW4_ARB
  GL_MODELVIEW5_ARB
  GL_MODELVIEW6_ARB
  GL_MODELVIEW7_ARB
  GL_MODELVIEW8_ARB
  GL_MODELVIEW9_ARB
  GL_MODELVIEW_MATRIX
  GL_MODELVIEW_PROJECTION_NV
  GL_MODELVIEW_STACK_DEPTH
  GL_MODULATE
  GL_MODULATE_ADD_ATI
  GL_MODULATE_ADD_ATIX
  GL_MODULATE_SIGNED_ADD_ATI
  GL_MODULATE_SIGNED_ADD_ATIX
  GL_MODULATE_SUBTRACT_ATI
  GL_MODULATE_SUBTRACT_ATIX
  GL_MOVE_TO_CONTINUES_NV
  GL_MOVE_TO_NV
  GL_MOVE_TO_RESETS_NV
  GL_MOV_ATI
  GL_MULT
  GL_MULTICAST_GPUS_NV
  GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV
  GL_MULTIPLY_KHR
  GL_MULTIPLY_NV
  GL_MULTISAMPLE
  GL_MULTISAMPLES_NV
  GL_MULTISAMPLE_3DFX
  GL_MULTISAMPLE_ARB
  GL_MULTISAMPLE_BIT
  GL_MULTISAMPLE_BIT_3DFX
  GL_MULTISAMPLE_BIT_ARB
  GL_MULTISAMPLE_BIT_EXT
  GL_MULTISAMPLE_BUFFER_BIT0_QCOM
  GL_MULTISAMPLE_BUFFER_BIT1_QCOM
  GL_MULTISAMPLE_BUFFER_BIT2_QCOM
  GL_MULTISAMPLE_BUFFER_BIT3_QCOM
  GL_MULTISAMPLE_BUFFER_BIT4_QCOM
  GL_MULTISAMPLE_BUFFER_BIT5_QCOM
  GL_MULTISAMPLE_BUFFER_BIT6_QCOM
  GL_MULTISAMPLE_BUFFER_BIT7_QCOM
  GL_MULTISAMPLE_COVERAGE_MODES_NV
  GL_MULTISAMPLE_EXT
  GL_MULTISAMPLE_FILTER_HINT_NV
  GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB
  GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB
  GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT
  GL_MULTISAMPLE_SGIS
  GL_MULTIVIEW_EXT
  GL_MUL_ATI
  GL_MVP_MATRIX_EXT
  GL_N3F_V3F
  GL_NAMED_STRING_LENGTH_ARB
  GL_NAMED_STRING_TYPE_ARB
  GL_NAME_LENGTH
  GL_NAME_STACK_DEPTH
  GL_NAND
  GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI
  GL_NATIVE_GRAPHICS_END_HINT_PGI
  GL_NATIVE_GRAPHICS_HANDLE_PGI
  GL_NEAREST
  GL_NEAREST_MIPMAP_LINEAR
  GL_NEAREST_MIPMAP_NEAREST
  GL_NEGATE_BIT_ATI
  GL_NEGATIVE_ONE_EXT
  GL_NEGATIVE_ONE_TO_ONE
  GL_NEGATIVE_W_EXT
  GL_NEGATIVE_X_EXT
  GL_NEGATIVE_Y_EXT
  GL_NEGATIVE_Z_EXT
  GL_NEVER
  GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV
  GL_NICEST
  GL_NONE
  GL_NOOP
  GL_NOP_COMMAND_NV
  GL_NOR
  GL_NORMALIZE
  GL_NORMALIZED_RANGE_EXT
  GL_NORMAL_ARRAY
  GL_NORMAL_ARRAY_ADDRESS_NV
  GL_NORMAL_ARRAY_BUFFER_BINDING
  GL_NORMAL_ARRAY_BUFFER_BINDING_ARB
  GL_NORMAL_ARRAY_COUNT_EXT
  GL_NORMAL_ARRAY_EXT
  GL_NORMAL_ARRAY_LENGTH_NV
  GL_NORMAL_ARRAY_LIST_IBM
  GL_NORMAL_ARRAY_LIST_STRIDE_IBM
  GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL
  GL_NORMAL_ARRAY_POINTER
  GL_NORMAL_ARRAY_POINTER_EXT
  GL_NORMAL_ARRAY_STRIDE
  GL_NORMAL_ARRAY_STRIDE_EXT
  GL_NORMAL_ARRAY_TYPE
  GL_NORMAL_ARRAY_TYPE_EXT
  GL_NORMAL_BIT_PGI
  GL_NORMAL_MAP
  GL_NORMAL_MAP_ARB
  GL_NORMAL_MAP_EXT
  GL_NORMAL_MAP_NV
  GL_NOTEQUAL
  GL_NO_ERROR
  GL_NO_RESET_NOTIFICATION
  GL_NO_RESET_NOTIFICATION_ARB
  GL_NUM_ACTIVE_VARIABLES
  GL_NUM_COMPATIBLE_SUBROUTINES
  GL_NUM_COMPRESSED_TEXTURE_FORMATS
  GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
  GL_NUM_DEVICE_UUIDS_EXT
  GL_NUM_EXTENSIONS
  GL_NUM_FILL_STREAMS_NV
  GL_NUM_FRAGMENT_CONSTANTS_ATI
  GL_NUM_FRAGMENT_REGISTERS_ATI
  GL_NUM_GENERAL_COMBINERS_NV
  GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI
  GL_NUM_INSTRUCTIONS_PER_PASS_ATI
  GL_NUM_INSTRUCTIONS_TOTAL_ATI
  GL_NUM_LOOPBACK_COMPONENTS_ATI
  GL_NUM_PASSES_ATI
  GL_NUM_PROGRAM_BINARY_FORMATS
  GL_NUM_SAMPLE_COUNTS
  GL_NUM_SHADER_BINARY_FORMATS
  GL_NUM_SHADING_LANGUAGE_VERSIONS
  GL_NUM_SPARSE_LEVELS_ARB
  GL_NUM_SPARSE_LEVELS_EXT
  GL_NUM_SPIR_V_EXTENSIONS
  GL_NUM_TILING_TYPES_EXT
  GL_NUM_VIDEO_CAPTURE_STREAMS_NV
  GL_NUM_VIRTUAL_PAGE_SIZES_ARB
  GL_NUM_VIRTUAL_PAGE_SIZES_EXT
  GL_NUM_WINDOW_RECTANGLES_EXT
  GL_NURBS_KNOT_COUNT_SGIX
  GL_NURBS_KNOT_VECTOR_SGIX
  GL_NVIDIA_PLATFORM_BINARY_NV
  GL_OBJECT_ACTIVE_ATTRIBUTES_ARB
  GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB
  GL_OBJECT_ACTIVE_UNIFORMS_ARB
  GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB
  GL_OBJECT_ATTACHED_OBJECTS_ARB
  GL_OBJECT_BUFFER_SIZE_ATI
  GL_OBJECT_BUFFER_USAGE_ATI
  GL_OBJECT_COMPILE_STATUS_ARB
  GL_OBJECT_DELETE_STATUS_ARB
  GL_OBJECT_DISTANCE_TO_LINE_SGIS
  GL_OBJECT_DISTANCE_TO_POINT_SGIS
  GL_OBJECT_INFO_LOG_LENGTH_ARB
  GL_OBJECT_LINEAR
  GL_OBJECT_LINE_SGIS
  GL_OBJECT_LINK_STATUS_ARB
  GL_OBJECT_PLANE
  GL_OBJECT_POINT_SGIS
  GL_OBJECT_SHADER_SOURCE_LENGTH_ARB
  GL_OBJECT_SPACE_SGIX
  GL_OBJECT_SUBTYPE_ARB
  GL_OBJECT_TYPE
  GL_OBJECT_TYPE_APPLE
  GL_OBJECT_TYPE_ARB
  GL_OBJECT_VALIDATE_STATUS_ARB
  GL_OCCLUSION_INSTRUMENT_SGIX
  GL_OCCLUSION_QUERY_EVENT_MASK_AMD
  GL_OFFSET
  GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV
  GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV
  GL_OFFSET_HILO_TEXTURE_2D_NV
  GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV
  GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV
  GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV
  GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV
  GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV
  GL_OFFSET_TEXTURE_2D_BIAS_NV
  GL_OFFSET_TEXTURE_2D_MATRIX_NV
  GL_OFFSET_TEXTURE_2D_NV
  GL_OFFSET_TEXTURE_2D_SCALE_NV
  GL_OFFSET_TEXTURE_BIAS_NV
  GL_OFFSET_TEXTURE_MATRIX_NV
  GL_OFFSET_TEXTURE_RECTANGLE_NV
  GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV
  GL_OFFSET_TEXTURE_SCALE_NV
  GL_ONE
  GL_ONE_EXT
  GL_ONE_MINUS_CONSTANT_ALPHA
  GL_ONE_MINUS_CONSTANT_ALPHA_EXT
  GL_ONE_MINUS_CONSTANT_COLOR
  GL_ONE_MINUS_CONSTANT_COLOR_EXT
  GL_ONE_MINUS_DST_ALPHA
  GL_ONE_MINUS_DST_COLOR
  GL_ONE_MINUS_SRC1_ALPHA
  GL_ONE_MINUS_SRC1_ALPHA_EXT
  GL_ONE_MINUS_SRC1_COLOR
  GL_ONE_MINUS_SRC1_COLOR_EXT
  GL_ONE_MINUS_SRC_ALPHA
  GL_ONE_MINUS_SRC_COLOR
  GL_OPERAND0_ALPHA
  GL_OPERAND0_ALPHA_ARB
  GL_OPERAND0_ALPHA_EXT
  GL_OPERAND0_RGB
  GL_OPERAND0_RGB_ARB
  GL_OPERAND0_RGB_EXT
  GL_OPERAND1_ALPHA
  GL_OPERAND1_ALPHA_ARB
  GL_OPERAND1_ALPHA_EXT
  GL_OPERAND1_RGB
  GL_OPERAND1_RGB_ARB
  GL_OPERAND1_RGB_EXT
  GL_OPERAND2_ALPHA
  GL_OPERAND2_ALPHA_ARB
  GL_OPERAND2_ALPHA_EXT
  GL_OPERAND2_RGB
  GL_OPERAND2_RGB_ARB
  GL_OPERAND2_RGB_EXT
  GL_OPERAND3_ALPHA_NV
  GL_OPERAND3_RGB_NV
  GL_OPTIMAL_TILING_EXT
  GL_OP_ADD_EXT
  GL_OP_CLAMP_EXT
  GL_OP_CROSS_PRODUCT_EXT
  GL_OP_DOT3_EXT
  GL_OP_DOT4_EXT
  GL_OP_EXP_BASE_2_EXT
  GL_OP_FLOOR_EXT
  GL_OP_FRAC_EXT
  GL_OP_INDEX_EXT
  GL_OP_LOG_BASE_2_EXT
  GL_OP_MADD_EXT
  GL_OP_MAX_EXT
  GL_OP_MIN_EXT
  GL_OP_MOV_EXT
  GL_OP_MULTIPLY_MATRIX_EXT
  GL_OP_MUL_EXT
  GL_OP_NEGATE_EXT
  GL_OP_POWER_EXT
  GL_OP_RECIP_EXT
  GL_OP_RECIP_SQRT_EXT
  GL_OP_ROUND_EXT
  GL_OP_SET_GE_EXT
  GL_OP_SET_LT_EXT
  GL_OP_SUB_EXT
  GL_OR
  GL_ORDER
  GL_OR_INVERTED
  GL_OR_REVERSE
  GL_OUTPUT_COLOR0_EXT
  GL_OUTPUT_COLOR1_EXT
  GL_OUTPUT_FOG_EXT
  GL_OUTPUT_POINT_SIZE_ATIX
  GL_OUTPUT_TEXTURE_COORD0_EXT
  GL_OUTPUT_TEXTURE_COORD10_EXT
  GL_OUTPUT_TEXTURE_COORD11_EXT
  GL_OUTPUT_TEXTURE_COORD12_EXT
  GL_OUTPUT_TEXTURE_COORD13_EXT
  GL_OUTPUT_TEXTURE_COORD14_EXT
  GL_OUTPUT_TEXTURE_COORD15_EXT
  GL_OUTPUT_TEXTURE_COORD16_EXT
  GL_OUTPUT_TEXTURE_COORD17_EXT
  GL_OUTPUT_TEXTURE_COORD18_EXT
  GL_OUTPUT_TEXTURE_COORD19_EXT
  GL_OUTPUT_TEXTURE_COORD1_EXT
  GL_OUTPUT_TEXTURE_COORD20_EXT
  GL_OUTPUT_TEXTURE_COORD21_EXT
  GL_OUTPUT_TEXTURE_COORD22_EXT
  GL_OUTPUT_TEXTURE_COORD23_EXT
  GL_OUTPUT_TEXTURE_COORD24_EXT
  GL_OUTPUT_TEXTURE_COORD25_EXT
  GL_OUTPUT_TEXTURE_COORD26_EXT
  GL_OUTPUT_TEXTURE_COORD27_EXT
  GL_OUTPUT_TEXTURE_COORD28_EXT
  GL_OUTPUT_TEXTURE_COORD29_EXT
  GL_OUTPUT_TEXTURE_COORD2_EXT
  GL_OUTPUT_TEXTURE_COORD30_EXT
  GL_OUTPUT_TEXTURE_COORD31_EXT
  GL_OUTPUT_TEXTURE_COORD3_EXT
  GL_OUTPUT_TEXTURE_COORD4_EXT
  GL_OUTPUT_TEXTURE_COORD5_EXT
  GL_OUTPUT_TEXTURE_COORD6_EXT
  GL_OUTPUT_TEXTURE_COORD7_EXT
  GL_OUTPUT_TEXTURE_COORD8_EXT
  GL_OUTPUT_TEXTURE_COORD9_EXT
  GL_OUTPUT_VERTEX_EXT
  GL_OUT_OF_MEMORY
  GL_OVERLAY_KHR
  GL_OVERLAY_NV
  GL_PACK_ALIGNMENT
  GL_PACK_CMYK_HINT_EXT
  GL_PACK_COMPRESSED_BLOCK_DEPTH
  GL_PACK_COMPRESSED_BLOCK_HEIGHT
  GL_PACK_COMPRESSED_BLOCK_SIZE
  GL_PACK_COMPRESSED_BLOCK_WIDTH
  GL_PACK_IMAGE_HEIGHT
  GL_PACK_IMAGE_HEIGHT_EXT
  GL_PACK_INVERT_MESA
  GL_PACK_LSB_FIRST
  GL_PACK_MAX_COMPRESSED_SIZE_SGIX
  GL_PACK_RESAMPLE_OML
  GL_PACK_RESAMPLE_SGIX
  GL_PACK_REVERSE_ROW_ORDER_ANGLE
  GL_PACK_ROW_BYTES_APPLE
  GL_PACK_ROW_LENGTH
  GL_PACK_ROW_LENGTH_NV
  GL_PACK_SKIP_IMAGES
  GL_PACK_SKIP_IMAGES_EXT
  GL_PACK_SKIP_PIXELS
  GL_PACK_SKIP_PIXELS_NV
  GL_PACK_SKIP_ROWS
  GL_PACK_SKIP_ROWS_NV
  GL_PACK_SUBSAMPLE_RATE_SGIX
  GL_PACK_SWAP_BYTES
  GL_PARALLEL_ARRAYS_INTEL
  GL_PARAMETER_BUFFER
  GL_PARAMETER_BUFFER_ARB
  GL_PARAMETER_BUFFER_BINDING
  GL_PARAMETER_BUFFER_BINDING_ARB
  GL_PARTIAL_SUCCESS_NV
  GL_PASS_THROUGH_NV
  GL_PASS_THROUGH_TOKEN
  GL_PATCHES
  GL_PATCH_DEFAULT_INNER_LEVEL
  GL_PATCH_DEFAULT_OUTER_LEVEL
  GL_PATCH_VERTICES
  GL_PATH_CLIENT_LENGTH_NV
  GL_PATH_COMMAND_COUNT_NV
  GL_PATH_COMPUTED_LENGTH_NV
  GL_PATH_COORD_COUNT_NV
  GL_PATH_COVER_DEPTH_FUNC_NV
  GL_PATH_DASH_ARRAY_COUNT_NV
  GL_PATH_DASH_CAPS_NV
  GL_PATH_DASH_OFFSET_NV
  GL_PATH_DASH_OFFSET_RESET_NV
  GL_PATH_END_CAPS_NV
  GL_PATH_ERROR_POSITION_NV
  GL_PATH_FILL_BOUNDING_BOX_NV
  GL_PATH_FILL_COVER_MODE_NV
  GL_PATH_FILL_MASK_NV
  GL_PATH_FILL_MODE_NV
  GL_PATH_FOG_GEN_MODE_NV
  GL_PATH_FORMAT_PS_NV
  GL_PATH_FORMAT_SVG_NV
  GL_PATH_GEN_COEFF_NV
  GL_PATH_GEN_COLOR_FORMAT_NV
  GL_PATH_GEN_COMPONENTS_NV
  GL_PATH_GEN_MODE_NV
  GL_PATH_INITIAL_DASH_CAP_NV
  GL_PATH_INITIAL_END_CAP_NV
  GL_PATH_JOIN_STYLE_NV
  GL_PATH_MITER_LIMIT_NV
  GL_PATH_OBJECT_BOUNDING_BOX_NV
  GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV
  GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV
  GL_PATH_STENCIL_FUNC_NV
  GL_PATH_STENCIL_REF_NV
  GL_PATH_STENCIL_VALUE_MASK_NV
  GL_PATH_STROKE_BOUNDING_BOX_NV
  GL_PATH_STROKE_BOUND_NV
  GL_PATH_STROKE_COVER_MODE_NV
  GL_PATH_STROKE_MASK_NV
  GL_PATH_STROKE_WIDTH_NV
  GL_PATH_TERMINAL_DASH_CAP_NV
  GL_PATH_TERMINAL_END_CAP_NV
  GL_PERCENTAGE_AMD
  GL_PERFMON_GLOBAL_MODE_QCOM
  GL_PERFMON_RESULT_AMD
  GL_PERFMON_RESULT_AVAILABLE_AMD
  GL_PERFMON_RESULT_SIZE_AMD
  GL_PERFORMANCE_MONITOR_AMD
  GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL
  GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL
  GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL
  GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL
  GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL
  GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL
  GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL
  GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL
  GL_PERFQUERY_COUNTER_EVENT_INTEL
  GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL
  GL_PERFQUERY_COUNTER_RAW_INTEL
  GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL
  GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL
  GL_PERFQUERY_DONOT_FLUSH_INTEL
  GL_PERFQUERY_FLUSH_INTEL
  GL_PERFQUERY_GLOBAL_CONTEXT_INTEL
  GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL
  GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL
  GL_PERFQUERY_SINGLE_CONTEXT_INTEL
  GL_PERFQUERY_WAIT_INTEL
  GL_PERSPECTIVE_CORRECTION_HINT
  GL_PERTURB_EXT
  GL_PER_GPU_STORAGE_BIT_NV
  GL_PER_GPU_STORAGE_NV
  GL_PER_STAGE_CONSTANTS_NV
  GL_PHASE_SGIX
  GL_PHONG_HINT_WIN
  GL_PHONG_WIN
  GL_PINLIGHT_NV
  GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD
  GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD
  GL_PIXEL_BUFFER_BARRIER_BIT
  GL_PIXEL_BUFFER_BARRIER_BIT_EXT
  GL_PIXEL_COUNTER_BITS_NV
  GL_PIXEL_COUNT_AVAILABLE_NV
  GL_PIXEL_COUNT_NV
  GL_PIXEL_CUBIC_WEIGHT_EXT
  GL_PIXEL_MAG_FILTER_EXT
  GL_PIXEL_MAP_A_TO_A
  GL_PIXEL_MAP_A_TO_A_SIZE
  GL_PIXEL_MAP_B_TO_B
  GL_PIXEL_MAP_B_TO_B_SIZE
  GL_PIXEL_MAP_G_TO_G
  GL_PIXEL_MAP_G_TO_G_SIZE
  GL_PIXEL_MAP_I_TO_A
  GL_PIXEL_MAP_I_TO_A_SIZE
  GL_PIXEL_MAP_I_TO_B
  GL_PIXEL_MAP_I_TO_B_SIZE
  GL_PIXEL_MAP_I_TO_G
  GL_PIXEL_MAP_I_TO_G_SIZE
  GL_PIXEL_MAP_I_TO_I
  GL_PIXEL_MAP_I_TO_I_SIZE
  GL_PIXEL_MAP_I_TO_R
  GL_PIXEL_MAP_I_TO_R_SIZE
  GL_PIXEL_MAP_R_TO_R
  GL_PIXEL_MAP_R_TO_R_SIZE
  GL_PIXEL_MAP_S_TO_S
  GL_PIXEL_MAP_S_TO_S_SIZE
  GL_PIXEL_MIN_FILTER_EXT
  GL_PIXEL_MODE_BIT
  GL_PIXEL_PACK_BUFFER
  GL_PIXEL_PACK_BUFFER_ARB
  GL_PIXEL_PACK_BUFFER_BINDING
  GL_PIXEL_PACK_BUFFER_BINDING_ARB
  GL_PIXEL_PACK_BUFFER_BINDING_EXT
  GL_PIXEL_PACK_BUFFER_BINDING_NV
  GL_PIXEL_PACK_BUFFER_EXT
  GL_PIXEL_PACK_BUFFER_NV
  GL_PIXEL_SUBSAMPLE_2424_SGIX
  GL_PIXEL_SUBSAMPLE_4242_SGIX
  GL_PIXEL_SUBSAMPLE_4444_SGIX
  GL_PIXEL_TRANSFORM_2D_EXT
  GL_PIXEL_TRANSFORM_2D_MATRIX_EXT
  GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
  GL_PIXEL_TRANSFORM_OPERATOR_SGI
  GL_PIXEL_TRANSFORM_SGI
  GL_PIXEL_UNPACK_BUFFER
  GL_PIXEL_UNPACK_BUFFER_ARB
  GL_PIXEL_UNPACK_BUFFER_BINDING
  GL_PIXEL_UNPACK_BUFFER_BINDING_ARB
  GL_PIXEL_UNPACK_BUFFER_BINDING_EXT
  GL_PIXEL_UNPACK_BUFFER_BINDING_NV
  GL_PIXEL_UNPACK_BUFFER_EXT
  GL_PIXEL_UNPACK_BUFFER_NV
  GL_PLUS_CLAMPED_ALPHA_NV
  GL_PLUS_CLAMPED_NV
  GL_PLUS_DARKER_NV
  GL_PLUS_NV
  GL_PN_TRIANGLES_ATI
  GL_PN_TRIANGLES_NORMAL_MODE_ATI
  GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI
  GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI
  GL_PN_TRIANGLES_POINT_MODE_ATI
  GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI
  GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI
  GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI
  GL_POINT
  GL_POINTS
  GL_POINT_BIT
  GL_POINT_DISTANCE_ATTENUATION
  GL_POINT_DISTANCE_ATTENUATION_ARB
  GL_POINT_FADE_THRESHOLD_SIZE
  GL_POINT_FADE_THRESHOLD_SIZE_ARB
  GL_POINT_FADE_THRESHOLD_SIZE_EXT
  GL_POINT_NV
  GL_POINT_SIZE
  GL_POINT_SIZE_GRANULARITY
  GL_POINT_SIZE_MAX
  GL_POINT_SIZE_MAX_ARB
  GL_POINT_SIZE_MAX_EXT
  GL_POINT_SIZE_MIN
  GL_POINT_SIZE_MIN_ARB
  GL_POINT_SIZE_MIN_EXT
  GL_POINT_SIZE_RANGE
  GL_POINT_SMOOTH
  GL_POINT_SMOOTH_HINT
  GL_POINT_SPRITE
  GL_POINT_SPRITE_ARB
  GL_POINT_SPRITE_COORD_ORIGIN
  GL_POINT_SPRITE_CULL_CENTER_ATIX
  GL_POINT_SPRITE_CULL_CLIP_ATIX
  GL_POINT_SPRITE_CULL_MODE_ATIX
  GL_POINT_SPRITE_NV
  GL_POINT_SPRITE_R_MODE_NV
  GL_POINT_TOKEN
  GL_POLYGON
  GL_POLYGON_BIT
  GL_POLYGON_MODE
  GL_POLYGON_MODE_NV
  GL_POLYGON_OFFSET_BIAS_EXT
  GL_POLYGON_OFFSET_CLAMP
  GL_POLYGON_OFFSET_CLAMP_EXT
  GL_POLYGON_OFFSET_COMMAND_NV
  GL_POLYGON_OFFSET_EXT
  GL_POLYGON_OFFSET_FACTOR
  GL_POLYGON_OFFSET_FACTOR_EXT
  GL_POLYGON_OFFSET_FILL
  GL_POLYGON_OFFSET_LINE
  GL_POLYGON_OFFSET_LINE_NV
  GL_POLYGON_OFFSET_POINT
  GL_POLYGON_OFFSET_POINT_NV
  GL_POLYGON_OFFSET_UNITS
  GL_POLYGON_SMOOTH
  GL_POLYGON_SMOOTH_HINT
  GL_POLYGON_STIPPLE
  GL_POLYGON_STIPPLE_BIT
  GL_POLYGON_TOKEN
  GL_POSITION
  GL_POST_COLOR_MATRIX_ALPHA_BIAS
  GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI
  GL_POST_COLOR_MATRIX_ALPHA_SCALE
  GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI
  GL_POST_COLOR_MATRIX_BLUE_BIAS
  GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI
  GL_POST_COLOR_MATRIX_BLUE_SCALE
  GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI
  GL_POST_COLOR_MATRIX_COLOR_TABLE
  GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI
  GL_POST_COLOR_MATRIX_GREEN_BIAS
  GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI
  GL_POST_COLOR_MATRIX_GREEN_SCALE
  GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI
  GL_POST_COLOR_MATRIX_RED_BIAS
  GL_POST_COLOR_MATRIX_RED_BIAS_SGI
  GL_POST_COLOR_MATRIX_RED_SCALE
  GL_POST_COLOR_MATRIX_RED_SCALE_SGI
  GL_POST_CONVOLUTION_ALPHA_BIAS
  GL_POST_CONVOLUTION_ALPHA_BIAS_EXT
  GL_POST_CONVOLUTION_ALPHA_SCALE
  GL_POST_CONVOLUTION_ALPHA_SCALE_EXT
  GL_POST_CONVOLUTION_BLUE_BIAS
  GL_POST_CONVOLUTION_BLUE_BIAS_EXT
  GL_POST_CONVOLUTION_BLUE_SCALE
  GL_POST_CONVOLUTION_BLUE_SCALE_EXT
  GL_POST_CONVOLUTION_COLOR_TABLE
  GL_POST_CONVOLUTION_COLOR_TABLE_SGI
  GL_POST_CONVOLUTION_GREEN_BIAS
  GL_POST_CONVOLUTION_GREEN_BIAS_EXT
  GL_POST_CONVOLUTION_GREEN_SCALE
  GL_POST_CONVOLUTION_GREEN_SCALE_EXT
  GL_POST_CONVOLUTION_RED_BIAS
  GL_POST_CONVOLUTION_RED_BIAS_EXT
  GL_POST_CONVOLUTION_RED_SCALE
  GL_POST_CONVOLUTION_RED_SCALE_EXT
  GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX
  GL_POST_TEXTURE_FILTER_BIAS_SGIX
  GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX
  GL_POST_TEXTURE_FILTER_SCALE_SGIX
  GL_PREFER_DOUBLEBUFFER_HINT_PGI
  GL_PRESENT_DURATION_NV
  GL_PRESENT_TIME_NV
  GL_PRESERVE_ATI
  GL_PREVIOUS
  GL_PREVIOUS_ARB
  GL_PREVIOUS_EXT
  GL_PREVIOUS_TEXTURE_INPUT_NV
  GL_PRIMARY_COLOR
  GL_PRIMARY_COLOR_ARB
  GL_PRIMARY_COLOR_EXT
  GL_PRIMARY_COLOR_NV
  GL_PRIMITIVES_GENERATED
  GL_PRIMITIVES_GENERATED_EXT
  GL_PRIMITIVES_GENERATED_NV
  GL_PRIMITIVES_SUBMITTED
  GL_PRIMITIVES_SUBMITTED_ARB
  GL_PRIMITIVE_BOUNDING_BOX_ARB
  GL_PRIMITIVE_ID_NV
  GL_PRIMITIVE_RESTART
  GL_PRIMITIVE_RESTART_FIXED_INDEX
  GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED
  GL_PRIMITIVE_RESTART_INDEX
  GL_PRIMITIVE_RESTART_INDEX_NV
  GL_PRIMITIVE_RESTART_NV
  GL_PROGRAM
  GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB
  GL_PROGRAMMABLE_SAMPLE_LOCATION_NV
  GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB
  GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV
  GL_PROGRAM_ADDRESS_REGISTERS_ARB
  GL_PROGRAM_ALU_INSTRUCTIONS_ARB
  GL_PROGRAM_ATTRIBS_ARB
  GL_PROGRAM_ATTRIB_COMPONENTS_NV
  GL_PROGRAM_BINARY_ANGLE
  GL_PROGRAM_BINARY_FORMATS
  GL_PROGRAM_BINARY_LENGTH
  GL_PROGRAM_BINARY_RETRIEVABLE_HINT
  GL_PROGRAM_BINDING_ARB
  GL_PROGRAM_ERROR_POSITION_ARB
  GL_PROGRAM_ERROR_POSITION_NV
  GL_PROGRAM_ERROR_STRING_ARB
  GL_PROGRAM_ERROR_STRING_NV
  GL_PROGRAM_FORMAT_ARB
  GL_PROGRAM_FORMAT_ASCII_ARB
  GL_PROGRAM_INPUT
  GL_PROGRAM_INSTRUCTIONS_ARB
  GL_PROGRAM_LENGTH_ARB
  GL_PROGRAM_LENGTH_NV
  GL_PROGRAM_MATRIX_EXT
  GL_PROGRAM_MATRIX_STACK_DEPTH_EXT
  GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
  GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
  GL_PROGRAM_NATIVE_ATTRIBS_ARB
  GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB
  GL_PROGRAM_NATIVE_PARAMETERS_ARB
  GL_PROGRAM_NATIVE_TEMPORARIES_ARB
  GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
  GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
  GL_PROGRAM_OBJECT_ARB
  GL_PROGRAM_OBJECT_EXT
  GL_PROGRAM_OUTPUT
  GL_PROGRAM_PARAMETERS_ARB
  GL_PROGRAM_PARAMETER_NV
  GL_PROGRAM_PIPELINE
  GL_PROGRAM_PIPELINE_BINDING
  GL_PROGRAM_PIPELINE_OBJECT_EXT
  GL_PROGRAM_POINT_SIZE
  GL_PROGRAM_POINT_SIZE_ARB
  GL_PROGRAM_POINT_SIZE_EXT
  GL_PROGRAM_RESIDENT_NV
  GL_PROGRAM_RESULT_COMPONENTS_NV
  GL_PROGRAM_SEPARABLE
  GL_PROGRAM_STRING_ARB
  GL_PROGRAM_STRING_NV
  GL_PROGRAM_TARGET_NV
  GL_PROGRAM_TEMPORARIES_ARB
  GL_PROGRAM_TEX_INDIRECTIONS_ARB
  GL_PROGRAM_TEX_INSTRUCTIONS_ARB
  GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB
  GL_PROJECTION
  GL_PROJECTION_MATRIX
  GL_PROJECTION_STACK_DEPTH
  GL_PROTECTED_MEMORY_OBJECT_EXT
  GL_PROVOKING_VERTEX
  GL_PROVOKING_VERTEX_EXT
  GL_PROXY_COLOR_TABLE
  GL_PROXY_COLOR_TABLE_SGI
  GL_PROXY_HISTOGRAM
  GL_PROXY_HISTOGRAM_EXT
  GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE
  GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI
  GL_PROXY_POST_CONVOLUTION_COLOR_TABLE
  GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI
  GL_PROXY_TEXTURE_1D
  GL_PROXY_TEXTURE_1D_ARRAY
  GL_PROXY_TEXTURE_1D_ARRAY_EXT
  GL_PROXY_TEXTURE_1D_EXT
  GL_PROXY_TEXTURE_1D_STACK_MESAX
  GL_PROXY_TEXTURE_2D
  GL_PROXY_TEXTURE_2D_ARRAY
  GL_PROXY_TEXTURE_2D_ARRAY_EXT
  GL_PROXY_TEXTURE_2D_EXT
  GL_PROXY_TEXTURE_2D_MULTISAMPLE
  GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY
  GL_PROXY_TEXTURE_2D_STACK_MESAX
  GL_PROXY_TEXTURE_3D
  GL_PROXY_TEXTURE_3D_EXT
  GL_PROXY_TEXTURE_COLOR_TABLE_SGI
  GL_PROXY_TEXTURE_CUBE_MAP
  GL_PROXY_TEXTURE_CUBE_MAP_ARB
  GL_PROXY_TEXTURE_CUBE_MAP_ARRAY
  GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB
  GL_PROXY_TEXTURE_CUBE_MAP_EXT
  GL_PROXY_TEXTURE_RECTANGLE
  GL_PROXY_TEXTURE_RECTANGLE_ARB
  GL_PROXY_TEXTURE_RECTANGLE_EXT
  GL_PROXY_TEXTURE_RECTANGLE_NV
  GL_PURGEABLE_APPLE
  GL_PURGED_CONTEXT_RESET_NV
  GL_Q
  GL_QUADRATIC_ATTENUATION
  GL_QUADRATIC_CURVE_TO_NV
  GL_QUADS
  GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION
  GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT
  GL_QUAD_MESH_SUN
  GL_QUAD_STRIP
  GL_QUARTER_BIT_ATI
  GL_QUERY
  GL_QUERY_ALL_EVENT_BITS_AMD
  GL_QUERY_BUFFER
  GL_QUERY_BUFFER_AMD
  GL_QUERY_BUFFER_BARRIER_BIT
  GL_QUERY_BUFFER_BINDING
  GL_QUERY_BUFFER_BINDING_AMD
  GL_QUERY_BY_REGION_NO_WAIT
  GL_QUERY_BY_REGION_NO_WAIT_INVERTED
  GL_QUERY_BY_REGION_NO_WAIT_NV
  GL_QUERY_BY_REGION_WAIT
  GL_QUERY_BY_REGION_WAIT_INVERTED
  GL_QUERY_BY_REGION_WAIT_NV
  GL_QUERY_COUNTER_BITS
  GL_QUERY_COUNTER_BITS_ANGLE
  GL_QUERY_COUNTER_BITS_ARB
  GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD
  GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD
  GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD
  GL_QUERY_NO_WAIT
  GL_QUERY_NO_WAIT_INVERTED
  GL_QUERY_NO_WAIT_NV
  GL_QUERY_OBJECT_AMD
  GL_QUERY_OBJECT_EXT
  GL_QUERY_RESULT
  GL_QUERY_RESULT_ANGLE
  GL_QUERY_RESULT_ARB
  GL_QUERY_RESULT_AVAILABLE
  GL_QUERY_RESULT_AVAILABLE_ANGLE
  GL_QUERY_RESULT_AVAILABLE_ARB
  GL_QUERY_RESULT_AVAILABLE_NV
  GL_QUERY_RESULT_NO_WAIT
  GL_QUERY_RESULT_NO_WAIT_AMD
  GL_QUERY_RESULT_NV
  GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD
  GL_QUERY_TARGET
  GL_QUERY_WAIT
  GL_QUERY_WAIT_INVERTED
  GL_QUERY_WAIT_NV
  GL_R
  GL_R11F_G11F_B10F
  GL_R11F_G11F_B10F_APPLE
  GL_R11F_G11F_B10F_EXT
  GL_R11F_G11F_B10F_NV
  GL_R16
  GL_R16F
  GL_R16F_EXT
  GL_R16I
  GL_R16UI
  GL_R16_EXT
  GL_R16_SNORM
  GL_R16_SNORM_EXT
  GL_R1UI_C3F_V3F_SUN
  GL_R1UI_C4F_N3F_V3F_SUN
  GL_R1UI_C4UB_V3F_SUN
  GL_R1UI_N3F_V3F_SUN
  GL_R1UI_T2F_C4F_N3F_V3F_SUN
  GL_R1UI_T2F_N3F_V3F_SUN
  GL_R1UI_T2F_V3F_SUN
  GL_R1UI_V3F_SUN
  GL_R32F
  GL_R32F_EXT
  GL_R32I
  GL_R32UI
  GL_R3_G3_B2
  GL_R5_G6_B5_A8_ICC_SGIX
  GL_R5_G6_B5_ICC_SGIX
  GL_R8
  GL_R8I
  GL_R8UI
  GL_R8_EXT
  GL_R8_SNORM
  GL_RASTERIZER_DISCARD
  GL_RASTERIZER_DISCARD_EXT
  GL_RASTERIZER_DISCARD_NV
  GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT
  GL_RASTER_MULTISAMPLE_EXT
  GL_RASTER_POSITION_UNCLIPPED_IBM
  GL_RASTER_SAMPLES_EXT
  GL_READ_BUFFER
  GL_READ_BUFFER_EXT
  GL_READ_FRAMEBUFFER
  GL_READ_FRAMEBUFFER_ANGLE
  GL_READ_FRAMEBUFFER_APPLE
  GL_READ_FRAMEBUFFER_BINDING
  GL_READ_FRAMEBUFFER_BINDING_ANGLE
  GL_READ_FRAMEBUFFER_BINDING_APPLE
  GL_READ_FRAMEBUFFER_BINDING_EXT
  GL_READ_FRAMEBUFFER_BINDING_NV
  GL_READ_FRAMEBUFFER_EXT
  GL_READ_FRAMEBUFFER_NV
  GL_READ_ONLY
  GL_READ_ONLY_ARB
  GL_READ_PIXELS
  GL_READ_PIXELS_FORMAT
  GL_READ_PIXELS_TYPE
  GL_READ_PIXEL_DATA_RANGE_LENGTH_NV
  GL_READ_PIXEL_DATA_RANGE_NV
  GL_READ_PIXEL_DATA_RANGE_POINTER_NV
  GL_READ_WRITE
  GL_READ_WRITE_ARB
  GL_RECLAIM_MEMORY_HINT_PGI
  GL_RECT_NV
  GL_RED
  GL_REDUCE
  GL_REDUCE_EXT
  GL_RED_BIAS
  GL_RED_BITS
  GL_RED_BIT_ATI
  GL_RED_EXT
  GL_RED_INTEGER
  GL_RED_INTEGER_EXT
  GL_RED_MAX_CLAMP_INGR
  GL_RED_MIN_CLAMP_INGR
  GL_RED_NV
  GL_RED_SCALE
  GL_RED_SNORM
  GL_REFERENCED_BY_COMPUTE_SHADER
  GL_REFERENCED_BY_FRAGMENT_SHADER
  GL_REFERENCED_BY_GEOMETRY_SHADER
  GL_REFERENCED_BY_GEOMETRY_SHADER_EXT
  GL_REFERENCED_BY_TESS_CONTROL_SHADER
  GL_REFERENCED_BY_TESS_EVALUATION_SHADER
  GL_REFERENCED_BY_VERTEX_SHADER
  GL_REFLECTION_MAP
  GL_REFLECTION_MAP_ARB
  GL_REFLECTION_MAP_EXT
  GL_REFLECTION_MAP_NV
  GL_REGISTER_COMBINERS_NV
  GL_REG_0_ATI
  GL_REG_1_ATI
  GL_REG_2_ATI
  GL_REG_3_ATI
  GL_REG_4_ATI
  GL_REG_5_ATI
  GL_RELATIVE_ARC_TO_NV
  GL_RELATIVE_CONIC_CURVE_TO_NV
  GL_RELATIVE_CUBIC_CURVE_TO_NV
  GL_RELATIVE_HORIZONTAL_LINE_TO_NV
  GL_RELATIVE_LARGE_CCW_ARC_TO_NV
  GL_RELATIVE_LARGE_CW_ARC_TO_NV
  GL_RELATIVE_LINE_TO_NV
  GL_RELATIVE_MOVE_TO_NV
  GL_RELATIVE_QUADRATIC_CURVE_TO_NV
  GL_RELATIVE_RECT_NV
  GL_RELATIVE_ROUNDED_RECT2_NV
  GL_RELATIVE_ROUNDED_RECT4_NV
  GL_RELATIVE_ROUNDED_RECT8_NV
  GL_RELATIVE_ROUNDED_RECT_NV
  GL_RELATIVE_SMALL_CCW_ARC_TO_NV
  GL_RELATIVE_SMALL_CW_ARC_TO_NV
  GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV
  GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV
  GL_RELATIVE_VERTICAL_LINE_TO_NV
  GL_RELEASED_APPLE
  GL_RENDER
  GL_RENDERBUFFER
  GL_RENDERBUFFER_ALPHA_SIZE
  GL_RENDERBUFFER_ALPHA_SIZE_EXT
  GL_RENDERBUFFER_BINDING
  GL_RENDERBUFFER_BINDING_EXT
  GL_RENDERBUFFER_BLUE_SIZE
  GL_RENDERBUFFER_BLUE_SIZE_EXT
  GL_RENDERBUFFER_COLOR_SAMPLES_NV
  GL_RENDERBUFFER_COVERAGE_SAMPLES_NV
  GL_RENDERBUFFER_DEPTH_SIZE
  GL_RENDERBUFFER_DEPTH_SIZE_EXT
  GL_RENDERBUFFER_EXT
  GL_RENDERBUFFER_FREE_MEMORY_ATI
  GL_RENDERBUFFER_GREEN_SIZE
  GL_RENDERBUFFER_GREEN_SIZE_EXT
  GL_RENDERBUFFER_HEIGHT
  GL_RENDERBUFFER_HEIGHT_EXT
  GL_RENDERBUFFER_INTERNAL_FORMAT
  GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
  GL_RENDERBUFFER_RED_SIZE
  GL_RENDERBUFFER_RED_SIZE_EXT
  GL_RENDERBUFFER_SAMPLES
  GL_RENDERBUFFER_SAMPLES_ANGLE
  GL_RENDERBUFFER_SAMPLES_APPLE
  GL_RENDERBUFFER_SAMPLES_EXT
  GL_RENDERBUFFER_SAMPLES_NV
  GL_RENDERBUFFER_STENCIL_SIZE
  GL_RENDERBUFFER_STENCIL_SIZE_EXT
  GL_RENDERBUFFER_WIDTH
  GL_RENDERBUFFER_WIDTH_EXT
  GL_RENDERER
  GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM
  GL_RENDER_GPU_MASK_NV
  GL_RENDER_MODE
  GL_REPEAT
  GL_REPLACE
  GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN
  GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN
  GL_REPLACEMENT_CODE_ARRAY_SUN
  GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN
  GL_REPLACEMENT_CODE_SUN
  GL_REPLACE_EXT
  GL_REPLACE_MIDDLE_SUN
  GL_REPLACE_OLDEST_SUN
  GL_REPLACE_VALUE_AMD
  GL_REPLICATE_BORDER
  GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES
  GL_RESAMPLE_AVERAGE_OML
  GL_RESAMPLE_DECIMATE_OML
  GL_RESAMPLE_DECIMATE_SGIX
  GL_RESAMPLE_REPLICATE_OML
  GL_RESAMPLE_REPLICATE_SGIX
  GL_RESAMPLE_ZERO_FILL_OML
  GL_RESAMPLE_ZERO_FILL_SGIX
  GL_RESCALE_NORMAL
  GL_RESCALE_NORMAL_EXT
  GL_RESET_NOTIFICATION_STRATEGY
  GL_RESET_NOTIFICATION_STRATEGY_ARB
  GL_RESTART_PATH_NV
  GL_RESTART_SUN
  GL_RETAINED_APPLE
  GL_RETURN
  GL_RG
  GL_RG16
  GL_RG16F
  GL_RG16F_EXT
  GL_RG16I
  GL_RG16UI
  GL_RG16_EXT
  GL_RG16_SNORM
  GL_RG16_SNORM_EXT
  GL_RG32F
  GL_RG32F_EXT
  GL_RG32I
  GL_RG32UI
  GL_RG8
  GL_RG8I
  GL_RG8UI
  GL_RG8_EXT
  GL_RG8_SNORM
  GL_RGB
  GL_RGB10
  GL_RGB10_A2
  GL_RGB10_A2UI
  GL_RGB10_A2_EXT
  GL_RGB10_EXT
  GL_RGB12
  GL_RGB12_EXT
  GL_RGB16
  GL_RGB16F
  GL_RGB16F_ARB
  GL_RGB16F_EXT
  GL_RGB16I
  GL_RGB16I_EXT
  GL_RGB16UI
  GL_RGB16UI_EXT
  GL_RGB16_EXT
  GL_RGB16_EXTENDED_RANGE_SGIX
  GL_RGB16_SIGNED_SGIX
  GL_RGB16_SNORM
  GL_RGB16_SNORM_EXT
  GL_RGB2_EXT
  GL_RGB32F
  GL_RGB32F_ARB
  GL_RGB32F_EXT
  GL_RGB32I
  GL_RGB32I_EXT
  GL_RGB32UI
  GL_RGB32UI_EXT
  GL_RGB4
  GL_RGB4_EXT
  GL_RGB4_S3TC
  GL_RGB5
  GL_RGB565
  GL_RGB5_A1
  GL_RGB5_A1_EXT
  GL_RGB5_EXT
  GL_RGB8
  GL_RGB8I
  GL_RGB8I_EXT
  GL_RGB8UI
  GL_RGB8UI_EXT
  GL_RGB8_EXT
  GL_RGB8_SNORM
  GL_RGB9_E5
  GL_RGB9_E5_APPLE
  GL_RGB9_E5_EXT
  GL_RGBA
  GL_RGBA12
  GL_RGBA12_EXT
  GL_RGBA16
  GL_RGBA16F
  GL_RGBA16F_ARB
  GL_RGBA16F_EXT
  GL_RGBA16I
  GL_RGBA16I_EXT
  GL_RGBA16UI
  GL_RGBA16UI_EXT
  GL_RGBA16_EXT
  GL_RGBA16_EXTENDED_RANGE_SGIX
  GL_RGBA16_SIGNED_SGIX
  GL_RGBA16_SNORM
  GL_RGBA16_SNORM_EXT
  GL_RGBA2
  GL_RGBA2_EXT
  GL_RGBA32F
  GL_RGBA32F_ARB
  GL_RGBA32F_EXT
  GL_RGBA32I
  GL_RGBA32I_EXT
  GL_RGBA32UI
  GL_RGBA32UI_EXT
  GL_RGBA4
  GL_RGBA4_DXT5_S3TC
  GL_RGBA4_EXT
  GL_RGBA4_S3TC
  GL_RGBA8
  GL_RGBA8I
  GL_RGBA8I_EXT
  GL_RGBA8UI
  GL_RGBA8UI_EXT
  GL_RGBA8_EXT
  GL_RGBA8_OES
  GL_RGBA8_SNORM
  GL_RGBA_DXT5_S3TC
  GL_RGBA_EXTENDED_RANGE_SGIX
  GL_RGBA_FLOAT16_APPLE
  GL_RGBA_FLOAT16_ATI
  GL_RGBA_FLOAT32_APPLE
  GL_RGBA_FLOAT32_ATI
  GL_RGBA_FLOAT_MODE_ARB
  GL_RGBA_ICC_SGIX
  GL_RGBA_INTEGER
  GL_RGBA_INTEGER_EXT
  GL_RGBA_INTEGER_MODE_EXT
  GL_RGBA_MODE
  GL_RGBA_S3TC
  GL_RGBA_SIGNED_COMPONENTS_EXT
  GL_RGBA_SIGNED_SGIX
  GL_RGBA_SNORM
  GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV
  GL_RGB_422_APPLE
  GL_RGB_EXTENDED_RANGE_SGIX
  GL_RGB_FLOAT16_APPLE
  GL_RGB_FLOAT16_ATI
  GL_RGB_FLOAT32_APPLE
  GL_RGB_FLOAT32_ATI
  GL_RGB_ICC_SGIX
  GL_RGB_INTEGER
  GL_RGB_INTEGER_EXT
  GL_RGB_RAW_422_APPLE
  GL_RGB_S3TC
  GL_RGB_SCALE
  GL_RGB_SCALE_ARB
  GL_RGB_SCALE_EXT
  GL_RGB_SIGNED_SGIX
  GL_RGB_SNORM
  GL_RG_EXT
  GL_RG_INTEGER
  GL_RG_SNORM
  GL_RIGHT
  GL_ROUNDED_RECT2_NV
  GL_ROUNDED_RECT4_NV
  GL_ROUNDED_RECT8_NV
  GL_ROUNDED_RECT_NV
  GL_ROUND_NV
  GL_S
  GL_SAMPLER
  GL_SAMPLER_1D
  GL_SAMPLER_1D_ARB
  GL_SAMPLER_1D_ARRAY
  GL_SAMPLER_1D_ARRAY_EXT
  GL_SAMPLER_1D_ARRAY_SHADOW
  GL_SAMPLER_1D_ARRAY_SHADOW_EXT
  GL_SAMPLER_1D_SHADOW
  GL_SAMPLER_1D_SHADOW_ARB
  GL_SAMPLER_2D
  GL_SAMPLER_2D_ARB
  GL_SAMPLER_2D_ARRAY
  GL_SAMPLER_2D_ARRAY_EXT
  GL_SAMPLER_2D_ARRAY_NV
  GL_SAMPLER_2D_ARRAY_SHADOW
  GL_SAMPLER_2D_ARRAY_SHADOW_EXT
  GL_SAMPLER_2D_ARRAY_SHADOW_NV
  GL_SAMPLER_2D_MULTISAMPLE
  GL_SAMPLER_2D_MULTISAMPLE_ARRAY
  GL_SAMPLER_2D_RECT
  GL_SAMPLER_2D_RECT_ARB
  GL_SAMPLER_2D_RECT_SHADOW
  GL_SAMPLER_2D_RECT_SHADOW_ARB
  GL_SAMPLER_2D_SHADOW
  GL_SAMPLER_2D_SHADOW_ARB
  GL_SAMPLER_2D_SHADOW_EXT
  GL_SAMPLER_3D
  GL_SAMPLER_3D_ARB
  GL_SAMPLER_BINDING
  GL_SAMPLER_BUFFER
  GL_SAMPLER_BUFFER_AMD
  GL_SAMPLER_BUFFER_EXT
  GL_SAMPLER_CUBE
  GL_SAMPLER_CUBE_ARB
  GL_SAMPLER_CUBE_MAP_ARRAY
  GL_SAMPLER_CUBE_MAP_ARRAY_ARB
  GL_SAMPLER_CUBE_MAP_ARRAY_EXT
  GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW
  GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB
  GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT
  GL_SAMPLER_CUBE_SHADOW
  GL_SAMPLER_CUBE_SHADOW_EXT
  GL_SAMPLER_CUBE_SHADOW_NV
  GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT
  GL_SAMPLER_EXTERNAL_OES
  GL_SAMPLER_OBJECT_AMD
  GL_SAMPLER_RENDERBUFFER_NV
  GL_SAMPLES
  GL_SAMPLES_3DFX
  GL_SAMPLES_ARB
  GL_SAMPLES_EXT
  GL_SAMPLES_PASSED
  GL_SAMPLES_PASSED_ARB
  GL_SAMPLES_SGIS
  GL_SAMPLE_ALPHA_TO_COVERAGE
  GL_SAMPLE_ALPHA_TO_COVERAGE_ARB
  GL_SAMPLE_ALPHA_TO_MASK_EXT
  GL_SAMPLE_ALPHA_TO_MASK_SGIS
  GL_SAMPLE_ALPHA_TO_ONE
  GL_SAMPLE_ALPHA_TO_ONE_ARB
  GL_SAMPLE_ALPHA_TO_ONE_EXT
  GL_SAMPLE_ALPHA_TO_ONE_SGIS
  GL_SAMPLE_BUFFERS
  GL_SAMPLE_BUFFERS_3DFX
  GL_SAMPLE_BUFFERS_ARB
  GL_SAMPLE_BUFFERS_EXT
  GL_SAMPLE_BUFFERS_SGIS
  GL_SAMPLE_COUNT_BITS_NV
  GL_SAMPLE_COUNT_NV
  GL_SAMPLE_COVERAGE
  GL_SAMPLE_COVERAGE_ARB
  GL_SAMPLE_COVERAGE_INVERT
  GL_SAMPLE_COVERAGE_INVERT_ARB
  GL_SAMPLE_COVERAGE_VALUE
  GL_SAMPLE_COVERAGE_VALUE_ARB
  GL_SAMPLE_LOCATION_ARB
  GL_SAMPLE_LOCATION_NV
  GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB
  GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV
  GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB
  GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV
  GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB
  GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV
  GL_SAMPLE_MASK
  GL_SAMPLE_MASK_EXT
  GL_SAMPLE_MASK_INVERT_EXT
  GL_SAMPLE_MASK_INVERT_SGIS
  GL_SAMPLE_MASK_NV
  GL_SAMPLE_MASK_SGIS
  GL_SAMPLE_MASK_VALUE
  GL_SAMPLE_MASK_VALUE_EXT
  GL_SAMPLE_MASK_VALUE_NV
  GL_SAMPLE_MASK_VALUE_SGIS
  GL_SAMPLE_PATTERN_EXT
  GL_SAMPLE_PATTERN_SGIS
  GL_SAMPLE_POSITION
  GL_SAMPLE_POSITION_NV
  GL_SAMPLE_SHADING
  GL_SAMPLE_SHADING_ARB
  GL_SATURATE_BIT_ATI
  GL_SCALAR_EXT
  GL_SCALEBIAS_HINT_SGIX
  GL_SCALED_RESOLVE_FASTEST_EXT
  GL_SCALED_RESOLVE_NICEST_EXT
  GL_SCALE_BY_FOUR_NV
  GL_SCALE_BY_ONE_HALF_NV
  GL_SCALE_BY_TWO_NV
  GL_SCISSOR_BIT
  GL_SCISSOR_BOX
  GL_SCISSOR_COMMAND_NV
  GL_SCISSOR_TEST
  GL_SCREEN_COORDINATES_REND
  GL_SCREEN_KHR
  GL_SCREEN_NV
  GL_SECONDARY_COLOR_ARRAY
  GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
  GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING
  GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB
  GL_SECONDARY_COLOR_ARRAY_EXT
  GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
  GL_SECONDARY_COLOR_ARRAY_LIST_IBM
  GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
  GL_SECONDARY_COLOR_ARRAY_POINTER
  GL_SECONDARY_COLOR_ARRAY_POINTER_EXT
  GL_SECONDARY_COLOR_ARRAY_SIZE
  GL_SECONDARY_COLOR_ARRAY_SIZE_EXT
  GL_SECONDARY_COLOR_ARRAY_STRIDE
  GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT
  GL_SECONDARY_COLOR_ARRAY_TYPE
  GL_SECONDARY_COLOR_ARRAY_TYPE_EXT
  GL_SECONDARY_COLOR_ATIX
  GL_SECONDARY_COLOR_NV
  GL_SECONDARY_INTERPOLATOR_ATI
  GL_SELECT
  GL_SELECTED_TEXTURE_COORD_SET_SGIS
  GL_SELECTED_TEXTURE_SGIS
  GL_SELECTED_TEXTURE_TRANSFORM_SGIS
  GL_SELECTION_BUFFER_POINTER
  GL_SELECTION_BUFFER_SIZE
  GL_SEPARABLE_2D
  GL_SEPARABLE_2D_EXT
  GL_SEPARATE_ATTRIBS
  GL_SEPARATE_ATTRIBS_EXT
  GL_SEPARATE_ATTRIBS_NV
  GL_SEPARATE_SPECULAR_COLOR
  GL_SEPARATE_SPECULAR_COLOR_EXT
  GL_SET
  GL_SET_AMD
  GL_SHADER
  GL_SHADER_BINARY_FORMATS
  GL_SHADER_BINARY_FORMAT_SPIR_V
  GL_SHADER_BINARY_FORMAT_SPIR_V_ARB
  GL_SHADER_COMPILER
  GL_SHADER_CONSISTENT_NV
  GL_SHADER_IMAGE_ACCESS_BARRIER_BIT
  GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT
  GL_SHADER_IMAGE_ATOMIC
  GL_SHADER_IMAGE_LOAD
  GL_SHADER_IMAGE_STORE
  GL_SHADER_INCLUDE_ARB
  GL_SHADER_OBJECT_ARB
  GL_SHADER_OBJECT_EXT
  GL_SHADER_OPERATION_NV
  GL_SHADER_PIXEL_LOCAL_STORAGE_EXT
  GL_SHADER_SOURCE_LENGTH
  GL_SHADER_STORAGE_BARRIER_BIT
  GL_SHADER_STORAGE_BLOCK
  GL_SHADER_STORAGE_BUFFER
  GL_SHADER_STORAGE_BUFFER_BINDING
  GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT
  GL_SHADER_STORAGE_BUFFER_SIZE
  GL_SHADER_STORAGE_BUFFER_START
  GL_SHADER_TYPE
  GL_SHADE_MODEL
  GL_SHADING_LANGUAGE_VERSION
  GL_SHADING_LANGUAGE_VERSION_ARB
  GL_SHADOW_AMBIENT_SGIX
  GL_SHADOW_ATTENUATION_EXT
  GL_SHARED_EDGE_NV
  GL_SHARED_TEXTURE_PALETTE_EXT
  GL_SHININESS
  GL_SHORT
  GL_SIGNALED
  GL_SIGNALED_APPLE
  GL_SIGNED_ALPHA8_NV
  GL_SIGNED_ALPHA_NV
  GL_SIGNED_HILO16_NV
  GL_SIGNED_HILO8_NV
  GL_SIGNED_HILO_NV
  GL_SIGNED_IDENTITY_NV
  GL_SIGNED_INTENSITY8_NV
  GL_SIGNED_INTENSITY_NV
  GL_SIGNED_LUMINANCE8_ALPHA8_NV
  GL_SIGNED_LUMINANCE8_NV
  GL_SIGNED_LUMINANCE_ALPHA_NV
  GL_SIGNED_LUMINANCE_NV
  GL_SIGNED_NEGATE_NV
  GL_SIGNED_NORMALIZED
  GL_SIGNED_RGB8_NV
  GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV
  GL_SIGNED_RGBA8_NV
  GL_SIGNED_RGBA_NV
  GL_SIGNED_RGB_NV
  GL_SIGNED_RGB_UNSIGNED_ALPHA_NV
  GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
  GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
  GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
  GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
  GL_SINGLE_COLOR
  GL_SINGLE_COLOR_EXT
  GL_SKIP_DECODE_EXT
  GL_SKIP_MISSING_GLYPH_NV
  GL_SLICE_ACCUM_SUN
  GL_SLIM10U_SGIX
  GL_SLIM12S_SGIX
  GL_SLIM8U_SGIX
  GL_SLUMINANCE
  GL_SLUMINANCE8
  GL_SLUMINANCE8_ALPHA8
  GL_SLUMINANCE8_ALPHA8_EXT
  GL_SLUMINANCE8_ALPHA8_NV
  GL_SLUMINANCE8_EXT
  GL_SLUMINANCE8_NV
  GL_SLUMINANCE_ALPHA
  GL_SLUMINANCE_ALPHA_EXT
  GL_SLUMINANCE_ALPHA_NV
  GL_SLUMINANCE_EXT
  GL_SLUMINANCE_NV
  GL_SMALL_CCW_ARC_TO_NV
  GL_SMALL_CW_ARC_TO_NV
  GL_SMOOTH
  GL_SMOOTH_CUBIC_CURVE_TO_NV
  GL_SMOOTH_LINE_WIDTH_GRANULARITY
  GL_SMOOTH_LINE_WIDTH_RANGE
  GL_SMOOTH_POINT_SIZE_GRANULARITY
  GL_SMOOTH_POINT_SIZE_RANGE
  GL_SMOOTH_QUADRATIC_CURVE_TO_NV
  GL_SM_COUNT_NV
  GL_SOFTLIGHT_KHR
  GL_SOFTLIGHT_NV
  GL_SOURCE0_ALPHA
  GL_SOURCE0_ALPHA_ARB
  GL_SOURCE0_ALPHA_EXT
  GL_SOURCE0_RGB
  GL_SOURCE0_RGB_ARB
  GL_SOURCE0_RGB_EXT
  GL_SOURCE1_ALPHA
  GL_SOURCE1_ALPHA_ARB
  GL_SOURCE1_ALPHA_EXT
  GL_SOURCE1_RGB
  GL_SOURCE1_RGB_ARB
  GL_SOURCE1_RGB_EXT
  GL_SOURCE2_ALPHA
  GL_SOURCE2_ALPHA_ARB
  GL_SOURCE2_ALPHA_EXT
  GL_SOURCE2_RGB
  GL_SOURCE2_RGB_ARB
  GL_SOURCE2_RGB_EXT
  GL_SOURCE3_ALPHA_NV
  GL_SOURCE3_RGB_NV
  GL_SPARE0_NV
  GL_SPARE0_PLUS_SECONDARY_COLOR_NV
  GL_SPARE1_NV
  GL_SPARSE_BUFFER_PAGE_SIZE_ARB
  GL_SPARSE_STORAGE_BIT_ARB
  GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB
  GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT
  GL_SPECULAR
  GL_SPHERE_MAP
  GL_SPIR_V_BINARY
  GL_SPIR_V_BINARY_ARB
  GL_SPIR_V_EXTENSIONS
  GL_SPOT_CUTOFF
  GL_SPOT_CUTOFF_DELTA_SGIX
  GL_SPOT_DIRECTION
  GL_SPOT_EXPONENT
  GL_SQUARE_NV
  GL_SR8_EXT
  GL_SRC0_ALPHA
  GL_SRC0_RGB
  GL_SRC1_ALPHA
  GL_SRC1_ALPHA_EXT
  GL_SRC1_COLOR
  GL_SRC1_COLOR_EXT
  GL_SRC1_RGB
  GL_SRC2_ALPHA
  GL_SRC2_RGB
  GL_SRC_ALPHA
  GL_SRC_ALPHA_SATURATE
  GL_SRC_ALPHA_SATURATE_EXT
  GL_SRC_ATOP_NV
  GL_SRC_COLOR
  GL_SRC_IN_NV
  GL_SRC_NV
  GL_SRC_OUT_NV
  GL_SRC_OVER_NV
  GL_SRG8_EXT
  GL_SRGB
  GL_SRGB8
  GL_SRGB8_ALPHA8
  GL_SRGB8_ALPHA8_EXT
  GL_SRGB8_EXT
  GL_SRGB8_NV
  GL_SRGB_ALPHA
  GL_SRGB_ALPHA_EXT
  GL_SRGB_DECODE_ARB
  GL_SRGB_EXT
  GL_SRGB_READ
  GL_SRGB_WRITE
  GL_STACK_OVERFLOW
  GL_STACK_UNDERFLOW
  GL_STANDARD_FONT_FORMAT_NV
  GL_STANDARD_FONT_NAME_NV
  GL_STATE_RESTORE
  GL_STATIC_ATI
  GL_STATIC_COPY
  GL_STATIC_COPY_ARB
  GL_STATIC_DRAW
  GL_STATIC_DRAW_ARB
  GL_STATIC_READ
  GL_STATIC_READ_ARB
  GL_STATIC_VERTEX_ARRAY_IBM
  GL_STATISTICS_REGAL
  GL_STENCIL
  GL_STENCIL_ATTACHMENT
  GL_STENCIL_ATTACHMENT_EXT
  GL_STENCIL_BACK_FAIL
  GL_STENCIL_BACK_FAIL_ATI
  GL_STENCIL_BACK_FUNC
  GL_STENCIL_BACK_FUNC_ATI
  GL_STENCIL_BACK_OP_VALUE_AMD
  GL_STENCIL_BACK_PASS_DEPTH_FAIL
  GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI
  GL_STENCIL_BACK_PASS_DEPTH_PASS
  GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI
  GL_STENCIL_BACK_REF
  GL_STENCIL_BACK_VALUE_MASK
  GL_STENCIL_BACK_WRITEMASK
  GL_STENCIL_BITS
  GL_STENCIL_BUFFER
  GL_STENCIL_BUFFER_BIT
  GL_STENCIL_BUFFER_BIT0_QCOM
  GL_STENCIL_BUFFER_BIT1_QCOM
  GL_STENCIL_BUFFER_BIT2_QCOM
  GL_STENCIL_BUFFER_BIT3_QCOM
  GL_STENCIL_BUFFER_BIT4_QCOM
  GL_STENCIL_BUFFER_BIT5_QCOM
  GL_STENCIL_BUFFER_BIT6_QCOM
  GL_STENCIL_BUFFER_BIT7_QCOM
  GL_STENCIL_CLEAR_TAG_VALUE_EXT
  GL_STENCIL_CLEAR_VALUE
  GL_STENCIL_COMPONENTS
  GL_STENCIL_EXT
  GL_STENCIL_FAIL
  GL_STENCIL_FUNC
  GL_STENCIL_INDEX
  GL_STENCIL_INDEX1
  GL_STENCIL_INDEX16
  GL_STENCIL_INDEX16_EXT
  GL_STENCIL_INDEX1_EXT
  GL_STENCIL_INDEX4
  GL_STENCIL_INDEX4_EXT
  GL_STENCIL_INDEX8
  GL_STENCIL_INDEX8_EXT
  GL_STENCIL_OP_VALUE_AMD
  GL_STENCIL_PASS_DEPTH_FAIL
  GL_STENCIL_PASS_DEPTH_PASS
  GL_STENCIL_REF
  GL_STENCIL_REF_COMMAND_NV
  GL_STENCIL_RENDERABLE
  GL_STENCIL_SAMPLES_NV
  GL_STENCIL_TAG_BITS_EXT
  GL_STENCIL_TEST
  GL_STENCIL_TEST_TWO_SIDE_EXT
  GL_STENCIL_VALUE_MASK
  GL_STENCIL_WRITEMASK
  GL_STEREO
  GL_STEREO_CONVERGENCE_NV
  GL_STEREO_CUTOFF_NV
  GL_STEREO_PROJECTION_NV
  GL_STEREO_PROJECTION_ORTHO_NV
  GL_STEREO_PROJECTION_PERSPECTIVE_NV
  GL_STEREO_SEPARATION_NV
  GL_STORAGE_CACHED_APPLE
  GL_STORAGE_CLIENT_APPLE
  GL_STORAGE_PRIVATE_APPLE
  GL_STORAGE_SHARED_APPLE
  GL_STREAM_COPY
  GL_STREAM_COPY_ARB
  GL_STREAM_DRAW
  GL_STREAM_DRAW_ARB
  GL_STREAM_RASTERIZATION_AMD
  GL_STREAM_READ
  GL_STREAM_READ_ARB
  GL_STRICT_DEPTHFUNC_HINT_PGI
  GL_STRICT_LIGHTING_HINT_PGI
  GL_STRICT_SCISSOR_HINT_PGI
  GL_SUBPIXEL_BITS
  GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV
  GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV
  GL_SUBSAMPLE_DISTANCE_AMD
  GL_SUBTRACT
  GL_SUBTRACT_ARB
  GL_SUB_ATI
  GL_SUCCESS_NV
  GL_SUPERSAMPLE_SCALE_X_NV
  GL_SUPERSAMPLE_SCALE_Y_NV
  GL_SURFACE_MAPPED_NV
  GL_SURFACE_REGISTERED_NV
  GL_SURFACE_STATE_NV
  GL_SWIZZLE_STQ_ATI
  GL_SWIZZLE_STQ_DQ_ATI
  GL_SWIZZLE_STRQ_ATI
  GL_SWIZZLE_STRQ_DQ_ATI
  GL_SWIZZLE_STR_ATI
  GL_SWIZZLE_STR_DR_ATI
  GL_SYNC_CL_EVENT_ARB
  GL_SYNC_CL_EVENT_COMPLETE_ARB
  GL_SYNC_CONDITION
  GL_SYNC_CONDITION_APPLE
  GL_SYNC_FENCE
  GL_SYNC_FENCE_APPLE
  GL_SYNC_FLAGS
  GL_SYNC_FLAGS_APPLE
  GL_SYNC_FLUSH_COMMANDS_BIT
  GL_SYNC_FLUSH_COMMANDS_BIT_APPLE
  GL_SYNC_GPU_COMMANDS_COMPLETE
  GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE
  GL_SYNC_OBJECT_APPLE
  GL_SYNC_STATUS
  GL_SYNC_STATUS_APPLE
  GL_SYNC_X11_FENCE_EXT
  GL_SYSTEM_FONT_NAME_NV
  GL_T
  GL_T2F_C3F_V3F
  GL_T2F_C4F_N3F_V3F
  GL_T2F_C4UB_V3F
  GL_T2F_N3F_V3F
  GL_T2F_V3F
  GL_T4F_C4F_N3F_V4F
  GL_T4F_V4F
  GL_TABLE_TOO_LARGE
  GL_TANGENT_ARRAY_EXT
  GL_TANGENT_ARRAY_POINTER_EXT
  GL_TANGENT_ARRAY_STRIDE_EXT
  GL_TANGENT_ARRAY_TYPE_EXT
  GL_TANGENT_SPACE_SGIX
  GL_TERMINATE_SEQUENCE_COMMAND_NV
  GL_TESSELLATION_FACTOR_AMD
  GL_TESSELLATION_MODE_AMD
  GL_TESS_CONTROL_OUTPUT_VERTICES
  GL_TESS_CONTROL_PROGRAM_NV
  GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV
  GL_TESS_CONTROL_SHADER
  GL_TESS_CONTROL_SHADER_BIT
  GL_TESS_CONTROL_SHADER_PATCHES
  GL_TESS_CONTROL_SHADER_PATCHES_ARB
  GL_TESS_CONTROL_SUBROUTINE
  GL_TESS_CONTROL_SUBROUTINE_UNIFORM
  GL_TESS_CONTROL_TEXTURE
  GL_TESS_EVALUATION_PROGRAM_NV
  GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV
  GL_TESS_EVALUATION_SHADER
  GL_TESS_EVALUATION_SHADER_BIT
  GL_TESS_EVALUATION_SHADER_INVOCATIONS
  GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB
  GL_TESS_EVALUATION_SUBROUTINE
  GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
  GL_TESS_EVALUATION_TEXTURE
  GL_TESS_GEN_MODE
  GL_TESS_GEN_POINT_MODE
  GL_TESS_GEN_SPACING
  GL_TESS_GEN_VERTEX_ORDER
  GL_TEXCOORD1_BIT_PGI
  GL_TEXCOORD2_BIT_PGI
  GL_TEXCOORD3_BIT_PGI
  GL_TEXCOORD4_BIT_PGI
  GL_TEXTURE
  GL_TEXTURE0
  GL_TEXTURE0_ARB
  GL_TEXTURE0_SGIS
  GL_TEXTURE1
  GL_TEXTURE10
  GL_TEXTURE10_ARB
  GL_TEXTURE11
  GL_TEXTURE11_ARB
  GL_TEXTURE12
  GL_TEXTURE12_ARB
  GL_TEXTURE13
  GL_TEXTURE13_ARB
  GL_TEXTURE14
  GL_TEXTURE14_ARB
  GL_TEXTURE15
  GL_TEXTURE15_ARB
  GL_TEXTURE16
  GL_TEXTURE16_ARB
  GL_TEXTURE17
  GL_TEXTURE17_ARB
  GL_TEXTURE18
  GL_TEXTURE18_ARB
  GL_TEXTURE19
  GL_TEXTURE19_ARB
  GL_TEXTURE1_ARB
  GL_TEXTURE1_SGIS
  GL_TEXTURE2
  GL_TEXTURE20
  GL_TEXTURE20_ARB
  GL_TEXTURE21
  GL_TEXTURE21_ARB
  GL_TEXTURE22
  GL_TEXTURE22_ARB
  GL_TEXTURE23
  GL_TEXTURE23_ARB
  GL_TEXTURE24
  GL_TEXTURE24_ARB
  GL_TEXTURE25
  GL_TEXTURE25_ARB
  GL_TEXTURE26
  GL_TEXTURE26_ARB
  GL_TEXTURE27
  GL_TEXTURE27_ARB
  GL_TEXTURE28
  GL_TEXTURE28_ARB
  GL_TEXTURE29
  GL_TEXTURE29_ARB
  GL_TEXTURE2_ARB
  GL_TEXTURE2_SGIS
  GL_TEXTURE3
  GL_TEXTURE30
  GL_TEXTURE30_ARB
  GL_TEXTURE31
  GL_TEXTURE31_ARB
  GL_TEXTURE3_ARB
  GL_TEXTURE3_SGIS
  GL_TEXTURE4
  GL_TEXTURE4_ARB
  GL_TEXTURE5
  GL_TEXTURE5_ARB
  GL_TEXTURE6
  GL_TEXTURE6_ARB
  GL_TEXTURE7
  GL_TEXTURE7_ARB
  GL_TEXTURE8
  GL_TEXTURE8_ARB
  GL_TEXTURE9
  GL_TEXTURE9_ARB
  GL_TEXTURE_1D
  GL_TEXTURE_1D_ARRAY
  GL_TEXTURE_1D_ARRAY_EXT
  GL_TEXTURE_1D_BINDING_EXT
  GL_TEXTURE_1D_STACK_BINDING_MESAX
  GL_TEXTURE_1D_STACK_MESAX
  GL_TEXTURE_2D
  GL_TEXTURE_2D_ARRAY
  GL_TEXTURE_2D_ARRAY_EXT
  GL_TEXTURE_2D_ARRAY_NV
  GL_TEXTURE_2D_BINDING_EXT
  GL_TEXTURE_2D_MULTISAMPLE
  GL_TEXTURE_2D_MULTISAMPLE_ARRAY
  GL_TEXTURE_2D_STACK_BINDING_MESAX
  GL_TEXTURE_2D_STACK_MESAX
  GL_TEXTURE_3D
  GL_TEXTURE_3D_BINDING_EXT
  GL_TEXTURE_3D_EXT
  GL_TEXTURE_ALPHA_SIZE
  GL_TEXTURE_ALPHA_SIZE_EXT
  GL_TEXTURE_ALPHA_TYPE
  GL_TEXTURE_ALPHA_TYPE_ARB
  GL_TEXTURE_APPLICATION_MODE_EXT
  GL_TEXTURE_ASTC_DECODE_PRECISION_EXT
  GL_TEXTURE_BASE_LEVEL
  GL_TEXTURE_BASE_LEVEL_SGIS
  GL_TEXTURE_BINDING_1D
  GL_TEXTURE_BINDING_1D_ARRAY
  GL_TEXTURE_BINDING_1D_ARRAY_EXT
  GL_TEXTURE_BINDING_2D
  GL_TEXTURE_BINDING_2D_ARRAY
  GL_TEXTURE_BINDING_2D_ARRAY_EXT
  GL_TEXTURE_BINDING_2D_ARRAY_NV
  GL_TEXTURE_BINDING_2D_MULTISAMPLE
  GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY
  GL_TEXTURE_BINDING_3D
  GL_TEXTURE_BINDING_BUFFER
  GL_TEXTURE_BINDING_BUFFER_ARB
  GL_TEXTURE_BINDING_BUFFER_EXT
  GL_TEXTURE_BINDING_CUBE_MAP
  GL_TEXTURE_BINDING_CUBE_MAP_ARB
  GL_TEXTURE_BINDING_CUBE_MAP_ARRAY
  GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB
  GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT
  GL_TEXTURE_BINDING_CUBE_MAP_EXT
  GL_TEXTURE_BINDING_EXTERNAL_OES
  GL_TEXTURE_BINDING_RECTANGLE
  GL_TEXTURE_BINDING_RECTANGLE_ARB
  GL_TEXTURE_BINDING_RECTANGLE_EXT
  GL_TEXTURE_BINDING_RECTANGLE_NV
  GL_TEXTURE_BINDING_RENDERBUFFER_NV
  GL_TEXTURE_BIT
  GL_TEXTURE_BLUE_SIZE
  GL_TEXTURE_BLUE_SIZE_EXT
  GL_TEXTURE_BLUE_TYPE
  GL_TEXTURE_BLUE_TYPE_ARB
  GL_TEXTURE_BORDER
  GL_TEXTURE_BORDER_COLOR
  GL_TEXTURE_BORDER_COLOR_NV
  GL_TEXTURE_BORDER_VALUES_NV
  GL_TEXTURE_BUFFER
  GL_TEXTURE_BUFFER_ARB
  GL_TEXTURE_BUFFER_BINDING
  GL_TEXTURE_BUFFER_DATA_STORE_BINDING
  GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB
  GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT
  GL_TEXTURE_BUFFER_EXT
  GL_TEXTURE_BUFFER_FORMAT
  GL_TEXTURE_BUFFER_FORMAT_ARB
  GL_TEXTURE_BUFFER_FORMAT_EXT
  GL_TEXTURE_BUFFER_OFFSET
  GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT
  GL_TEXTURE_BUFFER_SIZE
  GL_TEXTURE_COLOR_SAMPLES_NV
  GL_TEXTURE_COLOR_TABLE_SGI
  GL_TEXTURE_COMPARE_FAIL_VALUE_ARB
  GL_TEXTURE_COMPARE_FUNC
  GL_TEXTURE_COMPARE_FUNC_ARB
  GL_TEXTURE_COMPARE_FUNC_EXT
  GL_TEXTURE_COMPARE_MODE
  GL_TEXTURE_COMPARE_MODE_ARB
  GL_TEXTURE_COMPARE_MODE_EXT
  GL_TEXTURE_COMPARE_OPERATOR_SGIX
  GL_TEXTURE_COMPARE_SGIX
  GL_TEXTURE_COMPONENTS
  GL_TEXTURE_COMPRESSED
  GL_TEXTURE_COMPRESSED_ARB
  GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
  GL_TEXTURE_COMPRESSED_BLOCK_SIZE
  GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
  GL_TEXTURE_COMPRESSED_IMAGE_SIZE
  GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
  GL_TEXTURE_COMPRESSION_HINT
  GL_TEXTURE_COMPRESSION_HINT_ARB
  GL_TEXTURE_CONSTANT_DATA_SUNX
  GL_TEXTURE_COORD_ARRAY
  GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
  GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
  GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB
  GL_TEXTURE_COORD_ARRAY_COUNT_EXT
  GL_TEXTURE_COORD_ARRAY_EXT
  GL_TEXTURE_COORD_ARRAY_LENGTH_NV
  GL_TEXTURE_COORD_ARRAY_LIST_IBM
  GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
  GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL
  GL_TEXTURE_COORD_ARRAY_POINTER
  GL_TEXTURE_COORD_ARRAY_POINTER_EXT
  GL_TEXTURE_COORD_ARRAY_SIZE
  GL_TEXTURE_COORD_ARRAY_SIZE_EXT
  GL_TEXTURE_COORD_ARRAY_STRIDE
  GL_TEXTURE_COORD_ARRAY_STRIDE_EXT
  GL_TEXTURE_COORD_ARRAY_TYPE
  GL_TEXTURE_COORD_ARRAY_TYPE_EXT
  GL_TEXTURE_COORD_NV
  GL_TEXTURE_COORD_SET_INTERLEAVE_FACTOR_SGIS
  GL_TEXTURE_COVERAGE_SAMPLES_NV
  GL_TEXTURE_CUBE_MAP
  GL_TEXTURE_CUBE_MAP_ARB
  GL_TEXTURE_CUBE_MAP_ARRAY
  GL_TEXTURE_CUBE_MAP_ARRAY_ARB
  GL_TEXTURE_CUBE_MAP_ARRAY_EXT
  GL_TEXTURE_CUBE_MAP_ARRAY_OES
  GL_TEXTURE_CUBE_MAP_EXT
  GL_TEXTURE_CUBE_MAP_NEGATIVE_X
  GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
  GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT
  GL_TEXTURE_CUBE_MAP_POSITIVE_X
  GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
  GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT
  GL_TEXTURE_CUBE_MAP_POSITIVE_Y
  GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
  GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT
  GL_TEXTURE_CUBE_MAP_POSITIVE_Z
  GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
  GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT
  GL_TEXTURE_CUBE_MAP_SEAMLESS
  GL_TEXTURE_DEFORMATION_BIT_SGIX
  GL_TEXTURE_DEPTH
  GL_TEXTURE_DEPTH_EXT
  GL_TEXTURE_DEPTH_QCOM
  GL_TEXTURE_DEPTH_SIZE
  GL_TEXTURE_DEPTH_SIZE_ARB
  GL_TEXTURE_DEPTH_TYPE
  GL_TEXTURE_DEPTH_TYPE_ARB
  GL_TEXTURE_DS_SIZE_NV
  GL_TEXTURE_DT_SIZE_NV
  GL_TEXTURE_ENV
  GL_TEXTURE_ENV_COLOR
  GL_TEXTURE_ENV_COORD_SET_SGIS
  GL_TEXTURE_ENV_MODE
  GL_TEXTURE_EXTERNAL_OES
  GL_TEXTURE_FETCH_BARRIER_BIT
  GL_TEXTURE_FETCH_BARRIER_BIT_EXT
  GL_TEXTURE_FILTER_CONTROL
  GL_TEXTURE_FILTER_CONTROL_EXT
  GL_TEXTURE_FIXED_SAMPLE_LOCATIONS
  GL_TEXTURE_FLOAT_COMPONENTS_NV
  GL_TEXTURE_FORMAT_QCOM
  GL_TEXTURE_FREE_MEMORY_ATI
  GL_TEXTURE_GATHER
  GL_TEXTURE_GATHER_SHADOW
  GL_TEXTURE_GEN_MODE
  GL_TEXTURE_GEN_Q
  GL_TEXTURE_GEN_R
  GL_TEXTURE_GEN_S
  GL_TEXTURE_GEN_T
  GL_TEXTURE_GEQUAL_R_SGIX
  GL_TEXTURE_GREEN_SIZE
  GL_TEXTURE_GREEN_SIZE_EXT
  GL_TEXTURE_GREEN_TYPE
  GL_TEXTURE_GREEN_TYPE_ARB
  GL_TEXTURE_HEIGHT
  GL_TEXTURE_HEIGHT_QCOM
  GL_TEXTURE_HI_SIZE_NV
  GL_TEXTURE_IMAGE_FORMAT
  GL_TEXTURE_IMAGE_TYPE
  GL_TEXTURE_IMAGE_VALID_QCOM
  GL_TEXTURE_IMMUTABLE_FORMAT
  GL_TEXTURE_IMMUTABLE_FORMAT_EXT
  GL_TEXTURE_IMMUTABLE_LEVELS
  GL_TEXTURE_INDEX_SIZE_EXT
  GL_TEXTURE_INTENSITY_SIZE
  GL_TEXTURE_INTENSITY_SIZE_EXT
  GL_TEXTURE_INTENSITY_TYPE
  GL_TEXTURE_INTENSITY_TYPE_ARB
  GL_TEXTURE_INTERNAL_FORMAT
  GL_TEXTURE_INTERNAL_FORMAT_QCOM
  GL_TEXTURE_LEQUAL_R_SGIX
  GL_TEXTURE_LIGHT_EXT
  GL_TEXTURE_LOD_BIAS
  GL_TEXTURE_LOD_BIAS_EXT
  GL_TEXTURE_LO_SIZE_NV
  GL_TEXTURE_LUMINANCE_SIZE
  GL_TEXTURE_LUMINANCE_SIZE_EXT
  GL_TEXTURE_LUMINANCE_TYPE
  GL_TEXTURE_LUMINANCE_TYPE_ARB
  GL_TEXTURE_MAG_FILTER
  GL_TEXTURE_MAG_SIZE_NV
  GL_TEXTURE_MATERIAL_FACE_EXT
  GL_TEXTURE_MATERIAL_PARAMETER_EXT
  GL_TEXTURE_MATRIX
  GL_TEXTURE_MAX_ANISOTROPY
  GL_TEXTURE_MAX_ANISOTROPY_EXT
  GL_TEXTURE_MAX_CLAMP_R_SGIX
  GL_TEXTURE_MAX_CLAMP_S_SGIX
  GL_TEXTURE_MAX_CLAMP_T_SGIX
  GL_TEXTURE_MAX_LEVEL
  GL_TEXTURE_MAX_LEVEL_APPLE
  GL_TEXTURE_MAX_LEVEL_SGIS
  GL_TEXTURE_MAX_LOD
  GL_TEXTURE_MAX_LOD_SGIS
  GL_TEXTURE_MEMORY_LAYOUT_INTEL
  GL_TEXTURE_MIN_FILTER
  GL_TEXTURE_MIN_LOD
  GL_TEXTURE_MIN_LOD_SGIS
  GL_TEXTURE_MIPMAP_ANISOTROPY_SGIX
  GL_TEXTURE_MULTI_BUFFER_HINT_SGIX
  GL_TEXTURE_NORMAL_EXT
  GL_TEXTURE_NUM_LEVELS_QCOM
  GL_TEXTURE_OBJECT_VALID_QCOM
  GL_TEXTURE_OUTPUT_ALPHA_ATIX
  GL_TEXTURE_OUTPUT_RGB_ATIX
  GL_TEXTURE_POINT_MODE_ATIX
  GL_TEXTURE_POINT_ONE_COORD_ATIX
  GL_TEXTURE_POINT_SPRITE_ATIX
  GL_TEXTURE_PRIORITY
  GL_TEXTURE_PRIORITY_EXT
  GL_TEXTURE_RANGE_LENGTH_APPLE
  GL_TEXTURE_RANGE_POINTER_APPLE
  GL_TEXTURE_RECTANGLE
  GL_TEXTURE_RECTANGLE_ARB
  GL_TEXTURE_RECTANGLE_EXT
  GL_TEXTURE_RECTANGLE_NV
  GL_TEXTURE_REDUCTION_MODE_ARB
  GL_TEXTURE_REDUCTION_MODE_EXT
  GL_TEXTURE_RED_SIZE
  GL_TEXTURE_RED_SIZE_EXT
  GL_TEXTURE_RED_TYPE
  GL_TEXTURE_RED_TYPE_ARB
  GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV
  GL_TEXTURE_RENDERBUFFER_NV
  GL_TEXTURE_RESIDENT
  GL_TEXTURE_RESIDENT_EXT
  GL_TEXTURE_SAMPLES
  GL_TEXTURE_SHADER_NV
  GL_TEXTURE_SHADOW
  GL_TEXTURE_SHARED_SIZE
  GL_TEXTURE_SHARED_SIZE_EXT
  GL_TEXTURE_SPARSE_ARB
  GL_TEXTURE_SPARSE_EXT
  GL_TEXTURE_SRGB_DECODE_EXT
  GL_TEXTURE_STACK_DEPTH
  GL_TEXTURE_STENCIL_SIZE
  GL_TEXTURE_STENCIL_SIZE_EXT
  GL_TEXTURE_STORAGE_HINT_APPLE
  GL_TEXTURE_STORAGE_SPARSE_BIT_AMD
  GL_TEXTURE_SWIZZLE_A
  GL_TEXTURE_SWIZZLE_A_EXT
  GL_TEXTURE_SWIZZLE_B
  GL_TEXTURE_SWIZZLE_B_EXT
  GL_TEXTURE_SWIZZLE_G
  GL_TEXTURE_SWIZZLE_G_EXT
  GL_TEXTURE_SWIZZLE_R
  GL_TEXTURE_SWIZZLE_RGBA
  GL_TEXTURE_SWIZZLE_RGBA_EXT
  GL_TEXTURE_SWIZZLE_R_EXT
  GL_TEXTURE_TARGET
  GL_TEXTURE_TARGET_QCOM
  GL_TEXTURE_TILING_EXT
  GL_TEXTURE_TYPE_QCOM
  GL_TEXTURE_UNSIGNED_REMAP_MODE_NV
  GL_TEXTURE_UPDATE_BARRIER_BIT
  GL_TEXTURE_UPDATE_BARRIER_BIT_EXT
  GL_TEXTURE_USAGE_ANGLE
  GL_TEXTURE_VIEW
  GL_TEXTURE_VIEW_MIN_LAYER
  GL_TEXTURE_VIEW_MIN_LAYER_EXT
  GL_TEXTURE_VIEW_MIN_LEVEL
  GL_TEXTURE_VIEW_MIN_LEVEL_EXT
  GL_TEXTURE_VIEW_NUM_LAYERS
  GL_TEXTURE_VIEW_NUM_LAYERS_EXT
  GL_TEXTURE_VIEW_NUM_LEVELS
  GL_TEXTURE_VIEW_NUM_LEVELS_EXT
  GL_TEXTURE_WIDTH
  GL_TEXTURE_WIDTH_QCOM
  GL_TEXTURE_WRAP_R
  GL_TEXTURE_WRAP_R_EXT
  GL_TEXTURE_WRAP_S
  GL_TEXTURE_WRAP_T
  GL_TEXT_FRAGMENT_SHADER_ATI
  GL_TILING_TYPES_EXT
  GL_TIMEOUT_EXPIRED
  GL_TIMEOUT_EXPIRED_APPLE
  GL_TIMEOUT_IGNORED
  GL_TIMEOUT_IGNORED_APPLE
  GL_TIMESTAMP
  GL_TIMESTAMP_ANGLE
  GL_TIME_ELAPSED
  GL_TIME_ELAPSED_ANGLE
  GL_TIME_ELAPSED_EXT
  GL_TOP_LEVEL_ARRAY_SIZE
  GL_TOP_LEVEL_ARRAY_STRIDE
  GL_TRACE_REGAL
  GL_TRACK_MATRIX_NV
  GL_TRACK_MATRIX_TRANSFORM_NV
  GL_TRANSFORM_BIT
  GL_TRANSFORM_FEEDBACK
  GL_TRANSFORM_FEEDBACK_ACTIVE
  GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
  GL_TRANSFORM_FEEDBACK_BARRIER_BIT
  GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT
  GL_TRANSFORM_FEEDBACK_BINDING
  GL_TRANSFORM_FEEDBACK_BINDING_NV
  GL_TRANSFORM_FEEDBACK_BUFFER
  GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE
  GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
  GL_TRANSFORM_FEEDBACK_BUFFER_BINDING
  GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT
  GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
  GL_TRANSFORM_FEEDBACK_BUFFER_EXT
  GL_TRANSFORM_FEEDBACK_BUFFER_INDEX
  GL_TRANSFORM_FEEDBACK_BUFFER_MODE
  GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT
  GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
  GL_TRANSFORM_FEEDBACK_BUFFER_NV
  GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED
  GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
  GL_TRANSFORM_FEEDBACK_BUFFER_SIZE
  GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT
  GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
  GL_TRANSFORM_FEEDBACK_BUFFER_START
  GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT
  GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
  GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE
  GL_TRANSFORM_FEEDBACK_NV
  GL_TRANSFORM_FEEDBACK_OVERFLOW
  GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB
  GL_TRANSFORM_FEEDBACK_PAUSED
  GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN
  GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT
  GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
  GL_TRANSFORM_FEEDBACK_RECORD_NV
  GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW
  GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB
  GL_TRANSFORM_FEEDBACK_VARYING
  GL_TRANSFORM_FEEDBACK_VARYINGS
  GL_TRANSFORM_FEEDBACK_VARYINGS_EXT
  GL_TRANSFORM_FEEDBACK_VARYINGS_NV
  GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH
  GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT
  GL_TRANSFORM_HINT_APPLE
  GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE
  GL_TRANSLATE_2D_NV
  GL_TRANSLATE_3D_NV
  GL_TRANSLATE_X_NV
  GL_TRANSLATE_Y_NV
  GL_TRANSPOSE_AFFINE_2D_NV
  GL_TRANSPOSE_AFFINE_3D_NV
  GL_TRANSPOSE_COLOR_MATRIX
  GL_TRANSPOSE_COLOR_MATRIX_ARB
  GL_TRANSPOSE_CURRENT_MATRIX_ARB
  GL_TRANSPOSE_MODELVIEW_MATRIX
  GL_TRANSPOSE_MODELVIEW_MATRIX_ARB
  GL_TRANSPOSE_NV
  GL_TRANSPOSE_PROGRAM_MATRIX_EXT
  GL_TRANSPOSE_PROJECTION_MATRIX
  GL_TRANSPOSE_PROJECTION_MATRIX_ARB
  GL_TRANSPOSE_TEXTURE_MATRIX
  GL_TRANSPOSE_TEXTURE_MATRIX_ARB
  GL_TRIANGLES
  GL_TRIANGLES_ADJACENCY
  GL_TRIANGLES_ADJACENCY_ARB
  GL_TRIANGLES_ADJACENCY_EXT
  GL_TRIANGLE_FAN
  GL_TRIANGLE_LIST_SUN
  GL_TRIANGLE_MESH_SUN
  GL_TRIANGLE_STRIP
  GL_TRIANGLE_STRIP_ADJACENCY
  GL_TRIANGLE_STRIP_ADJACENCY_ARB
  GL_TRIANGLE_STRIP_ADJACENCY_EXT
  GL_TRIANGULAR_NV
  GL_TRUE
  GL_TYPE
  GL_UNCORRELATED_NV
  GL_UNDEFINED_APPLE
  GL_UNDEFINED_VERTEX
  GL_UNDEFINED_VERTEX_EXT
  GL_UNIFORM
  GL_UNIFORM_ADDRESS_COMMAND_NV
  GL_UNIFORM_ARRAY_STRIDE
  GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX
  GL_UNIFORM_BARRIER_BIT
  GL_UNIFORM_BARRIER_BIT_EXT
  GL_UNIFORM_BLOCK
  GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS
  GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES
  GL_UNIFORM_BLOCK_BINDING
  GL_UNIFORM_BLOCK_DATA_SIZE
  GL_UNIFORM_BLOCK_INDEX
  GL_UNIFORM_BLOCK_NAME_LENGTH
  GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
  GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER
  GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER
  GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
  GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
  GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER
  GL_UNIFORM_BUFFER
  GL_UNIFORM_BUFFER_ADDRESS_NV
  GL_UNIFORM_BUFFER_BINDING
  GL_UNIFORM_BUFFER_BINDING_EXT
  GL_UNIFORM_BUFFER_EXT
  GL_UNIFORM_BUFFER_LENGTH_NV
  GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT
  GL_UNIFORM_BUFFER_SIZE
  GL_UNIFORM_BUFFER_START
  GL_UNIFORM_BUFFER_UNIFIED_NV
  GL_UNIFORM_IS_ROW_MAJOR
  GL_UNIFORM_MATRIX_STRIDE
  GL_UNIFORM_NAME_LENGTH
  GL_UNIFORM_OFFSET
  GL_UNIFORM_SGIX
  GL_UNIFORM_SIZE
  GL_UNIFORM_TYPE
  GL_UNKNOWN_CONTEXT_RESET
  GL_UNKNOWN_CONTEXT_RESET_ARB
  GL_UNPACK_ALIGNMENT
  GL_UNPACK_CLIENT_STORAGE_APPLE
  GL_UNPACK_CMYK_HINT_EXT
  GL_UNPACK_COMPRESSED_BLOCK_DEPTH
  GL_UNPACK_COMPRESSED_BLOCK_HEIGHT
  GL_UNPACK_COMPRESSED_BLOCK_SIZE
  GL_UNPACK_COMPRESSED_BLOCK_WIDTH
  GL_UNPACK_CONSTANT_DATA_SUNX
  GL_UNPACK_IMAGE_HEIGHT
  GL_UNPACK_IMAGE_HEIGHT_EXT
  GL_UNPACK_IMAGE_HEIGHT_NV
  GL_UNPACK_LSB_FIRST
  GL_UNPACK_RESAMPLE_OML
  GL_UNPACK_RESAMPLE_SGIX
  GL_UNPACK_ROW_BYTES_APPLE
  GL_UNPACK_ROW_LENGTH
  GL_UNPACK_ROW_LENGTH_EXT
  GL_UNPACK_SKIP_IMAGES
  GL_UNPACK_SKIP_IMAGES_EXT
  GL_UNPACK_SKIP_IMAGES_NV
  GL_UNPACK_SKIP_PIXELS
  GL_UNPACK_SKIP_PIXELS_EXT
  GL_UNPACK_SKIP_ROWS
  GL_UNPACK_SKIP_ROWS_EXT
  GL_UNPACK_SUBSAMPLE_RATE_SGIX
  GL_UNPACK_SWAP_BYTES
  GL_UNSIGNALED
  GL_UNSIGNALED_APPLE
  GL_UNSIGNED_BYTE
  GL_UNSIGNED_BYTE_2_3_3_REV
  GL_UNSIGNED_BYTE_3_3_2
  GL_UNSIGNED_BYTE_3_3_2_EXT
  GL_UNSIGNED_IDENTITY_NV
  GL_UNSIGNED_INT
  GL_UNSIGNED_INT16_NV
  GL_UNSIGNED_INT16_VEC2_NV
  GL_UNSIGNED_INT16_VEC3_NV
  GL_UNSIGNED_INT16_VEC4_NV
  GL_UNSIGNED_INT64_AMD
  GL_UNSIGNED_INT64_ARB
  GL_UNSIGNED_INT64_NV
  GL_UNSIGNED_INT64_VEC2_ARB
  GL_UNSIGNED_INT64_VEC2_NV
  GL_UNSIGNED_INT64_VEC3_ARB
  GL_UNSIGNED_INT64_VEC3_NV
  GL_UNSIGNED_INT64_VEC4_ARB
  GL_UNSIGNED_INT64_VEC4_NV
  GL_UNSIGNED_INT8_NV
  GL_UNSIGNED_INT8_VEC2_NV
  GL_UNSIGNED_INT8_VEC3_NV
  GL_UNSIGNED_INT8_VEC4_NV
  GL_UNSIGNED_INT_10F_11F_11F_REV
  GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE
  GL_UNSIGNED_INT_10F_11F_11F_REV_EXT
  GL_UNSIGNED_INT_10F_11F_11F_REV_NV
  GL_UNSIGNED_INT_10_10_10_2
  GL_UNSIGNED_INT_10_10_10_2_EXT
  GL_UNSIGNED_INT_24_8
  GL_UNSIGNED_INT_24_8_EXT
  GL_UNSIGNED_INT_24_8_NV
  GL_UNSIGNED_INT_2_10_10_10_REV
  GL_UNSIGNED_INT_2_10_10_10_REV_EXT
  GL_UNSIGNED_INT_5_9_9_9_REV
  GL_UNSIGNED_INT_5_9_9_9_REV_APPLE
  GL_UNSIGNED_INT_5_9_9_9_REV_EXT
  GL_UNSIGNED_INT_8_8_8_8
  GL_UNSIGNED_INT_8_8_8_8_EXT
  GL_UNSIGNED_INT_8_8_8_8_REV
  GL_UNSIGNED_INT_8_8_S8_S8_REV_NV
  GL_UNSIGNED_INT_ATOMIC_COUNTER
  GL_UNSIGNED_INT_IMAGE_1D
  GL_UNSIGNED_INT_IMAGE_1D_ARRAY
  GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT
  GL_UNSIGNED_INT_IMAGE_1D_EXT
  GL_UNSIGNED_INT_IMAGE_2D
  GL_UNSIGNED_INT_IMAGE_2D_ARRAY
  GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT
  GL_UNSIGNED_INT_IMAGE_2D_EXT
  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE
  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY
  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT
  GL_UNSIGNED_INT_IMAGE_2D_RECT
  GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT
  GL_UNSIGNED_INT_IMAGE_3D
  GL_UNSIGNED_INT_IMAGE_3D_EXT
  GL_UNSIGNED_INT_IMAGE_BUFFER
  GL_UNSIGNED_INT_IMAGE_BUFFER_EXT
  GL_UNSIGNED_INT_IMAGE_CUBE
  GL_UNSIGNED_INT_IMAGE_CUBE_EXT
  GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY
  GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT
  GL_UNSIGNED_INT_S8_S8_8_8_NV
  GL_UNSIGNED_INT_SAMPLER_1D
  GL_UNSIGNED_INT_SAMPLER_1D_ARRAY
  GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT
  GL_UNSIGNED_INT_SAMPLER_1D_EXT
  GL_UNSIGNED_INT_SAMPLER_2D
  GL_UNSIGNED_INT_SAMPLER_2D_ARRAY
  GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT
  GL_UNSIGNED_INT_SAMPLER_2D_EXT
  GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE
  GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
  GL_UNSIGNED_INT_SAMPLER_2D_RECT
  GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT
  GL_UNSIGNED_INT_SAMPLER_3D
  GL_UNSIGNED_INT_SAMPLER_3D_EXT
  GL_UNSIGNED_INT_SAMPLER_BUFFER
  GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD
  GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT
  GL_UNSIGNED_INT_SAMPLER_CUBE
  GL_UNSIGNED_INT_SAMPLER_CUBE_EXT
  GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY
  GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB
  GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT
  GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV
  GL_UNSIGNED_INT_VEC2
  GL_UNSIGNED_INT_VEC2_EXT
  GL_UNSIGNED_INT_VEC3
  GL_UNSIGNED_INT_VEC3_EXT
  GL_UNSIGNED_INT_VEC4
  GL_UNSIGNED_INT_VEC4_EXT
  GL_UNSIGNED_INVERT_NV
  GL_UNSIGNED_NORMALIZED
  GL_UNSIGNED_NORMALIZED_ARB
  GL_UNSIGNED_NORMALIZED_EXT
  GL_UNSIGNED_SHORT
  GL_UNSIGNED_SHORT_1_5_5_5_REV
  GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT
  GL_UNSIGNED_SHORT_4_4_4_4
  GL_UNSIGNED_SHORT_4_4_4_4_EXT
  GL_UNSIGNED_SHORT_4_4_4_4_REV
  GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT
  GL_UNSIGNED_SHORT_5_5_5_1
  GL_UNSIGNED_SHORT_5_5_5_1_EXT
  GL_UNSIGNED_SHORT_5_6_5
  GL_UNSIGNED_SHORT_5_6_5_REV
  GL_UNSIGNED_SHORT_8_8_APPLE
  GL_UNSIGNED_SHORT_8_8_MESA
  GL_UNSIGNED_SHORT_8_8_REV_APPLE
  GL_UNSIGNED_SHORT_8_8_REV_MESA
  GL_UPPER_LEFT
  GL_USE_MISSING_GLYPH_NV
  GL_UTF16_NV
  GL_UTF8_NV
  GL_UUID_SIZE_EXT
  GL_V2F
  GL_V3F
  GL_VALIDATE_STATUS
  GL_VARIABLE_A_NV
  GL_VARIABLE_B_NV
  GL_VARIABLE_C_NV
  GL_VARIABLE_D_NV
  GL_VARIABLE_E_NV
  GL_VARIABLE_F_NV
  GL_VARIABLE_G_NV
  GL_VARIANT_ARRAY_EXT
  GL_VARIANT_ARRAY_POINTER_EXT
  GL_VARIANT_ARRAY_STRIDE_EXT
  GL_VARIANT_ARRAY_TYPE_EXT
  GL_VARIANT_DATATYPE_EXT
  GL_VARIANT_EXT
  GL_VARIANT_VALUE_EXT
  GL_VBO_FREE_MEMORY_ATI
  GL_VECTOR_EXT
  GL_VENDOR
  GL_VERSION
  GL_VERTEX23_BIT_PGI
  GL_VERTEX4_BIT_PGI
  GL_VERTEX_ARRAY
  GL_VERTEX_ARRAY_ADDRESS_NV
  GL_VERTEX_ARRAY_BINDING
  GL_VERTEX_ARRAY_BINDING_APPLE
  GL_VERTEX_ARRAY_BUFFER_BINDING
  GL_VERTEX_ARRAY_BUFFER_BINDING_ARB
  GL_VERTEX_ARRAY_COUNT_EXT
  GL_VERTEX_ARRAY_EXT
  GL_VERTEX_ARRAY_LENGTH_NV
  GL_VERTEX_ARRAY_LIST_IBM
  GL_VERTEX_ARRAY_LIST_STRIDE_IBM
  GL_VERTEX_ARRAY_OBJECT_AMD
  GL_VERTEX_ARRAY_OBJECT_EXT
  GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL
  GL_VERTEX_ARRAY_POINTER
  GL_VERTEX_ARRAY_POINTER_EXT
  GL_VERTEX_ARRAY_RANGE_APPLE
  GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE
  GL_VERTEX_ARRAY_RANGE_LENGTH_NV
  GL_VERTEX_ARRAY_RANGE_NV
  GL_VERTEX_ARRAY_RANGE_POINTER_APPLE
  GL_VERTEX_ARRAY_RANGE_POINTER_NV
  GL_VERTEX_ARRAY_RANGE_VALID_NV
  GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV
  GL_VERTEX_ARRAY_SIZE
  GL_VERTEX_ARRAY_SIZE_EXT
  GL_VERTEX_ARRAY_STORAGE_HINT_APPLE
  GL_VERTEX_ARRAY_STRIDE
  GL_VERTEX_ARRAY_STRIDE_EXT
  GL_VERTEX_ARRAY_TYPE
  GL_VERTEX_ARRAY_TYPE_EXT
  GL_VERTEX_ATTRIB_ARRAY0_NV
  GL_VERTEX_ATTRIB_ARRAY10_NV
  GL_VERTEX_ATTRIB_ARRAY11_NV
  GL_VERTEX_ATTRIB_ARRAY12_NV
  GL_VERTEX_ATTRIB_ARRAY13_NV
  GL_VERTEX_ATTRIB_ARRAY14_NV
  GL_VERTEX_ATTRIB_ARRAY15_NV
  GL_VERTEX_ATTRIB_ARRAY1_NV
  GL_VERTEX_ATTRIB_ARRAY2_NV
  GL_VERTEX_ATTRIB_ARRAY3_NV
  GL_VERTEX_ATTRIB_ARRAY4_NV
  GL_VERTEX_ATTRIB_ARRAY5_NV
  GL_VERTEX_ATTRIB_ARRAY6_NV
  GL_VERTEX_ATTRIB_ARRAY7_NV
  GL_VERTEX_ATTRIB_ARRAY8_NV
  GL_VERTEX_ATTRIB_ARRAY9_NV
  GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
  GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT
  GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT
  GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
  GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV
  GL_VERTEX_ATTRIB_ARRAY_ENABLED
  GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB
  GL_VERTEX_ATTRIB_ARRAY_INTEGER
  GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT
  GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV
  GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
  GL_VERTEX_ATTRIB_ARRAY_LONG
  GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
  GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB
  GL_VERTEX_ATTRIB_ARRAY_POINTER
  GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB
  GL_VERTEX_ATTRIB_ARRAY_SIZE
  GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB
  GL_VERTEX_ATTRIB_ARRAY_STRIDE
  GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB
  GL_VERTEX_ATTRIB_ARRAY_TYPE
  GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB
  GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
  GL_VERTEX_ATTRIB_BINDING
  GL_VERTEX_ATTRIB_MAP1_APPLE
  GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE
  GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE
  GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE
  GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE
  GL_VERTEX_ATTRIB_MAP2_APPLE
  GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE
  GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE
  GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE
  GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE
  GL_VERTEX_ATTRIB_RELATIVE_OFFSET
  GL_VERTEX_BINDING_BUFFER
  GL_VERTEX_BINDING_DIVISOR
  GL_VERTEX_BINDING_OFFSET
  GL_VERTEX_BINDING_STRIDE
  GL_VERTEX_BLEND_ARB
  GL_VERTEX_CONSISTENT_HINT_PGI
  GL_VERTEX_DATA_HINT_PGI
  GL_VERTEX_ELEMENT_SWIZZLE_AMD
  GL_VERTEX_ID_NV
  GL_VERTEX_ID_SWIZZLE_AMD
  GL_VERTEX_PRECLIP_HINT_SGIX
  GL_VERTEX_PRECLIP_SGIX
  GL_VERTEX_PROGRAM_ARB
  GL_VERTEX_PROGRAM_BINDING_NV
  GL_VERTEX_PROGRAM_NV
  GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV
  GL_VERTEX_PROGRAM_POINT_SIZE
  GL_VERTEX_PROGRAM_POINT_SIZE_ARB
  GL_VERTEX_PROGRAM_POINT_SIZE_NV
  GL_VERTEX_PROGRAM_TWO_SIDE
  GL_VERTEX_PROGRAM_TWO_SIDE_ARB
  GL_VERTEX_PROGRAM_TWO_SIDE_NV
  GL_VERTEX_SHADER
  GL_VERTEX_SHADER_ARB
  GL_VERTEX_SHADER_BINDING_EXT
  GL_VERTEX_SHADER_BIT
  GL_VERTEX_SHADER_EXT
  GL_VERTEX_SHADER_INSTRUCTIONS_EXT
  GL_VERTEX_SHADER_INVARIANTS_EXT
  GL_VERTEX_SHADER_INVOCATIONS
  GL_VERTEX_SHADER_INVOCATIONS_ARB
  GL_VERTEX_SHADER_LOCALS_EXT
  GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
  GL_VERTEX_SHADER_OPTIMIZED_EXT
  GL_VERTEX_SHADER_VARIANTS_EXT
  GL_VERTEX_SOURCE_ATI
  GL_VERTEX_STATE_PROGRAM_NV
  GL_VERTEX_STREAM0_ATI
  GL_VERTEX_STREAM1_ATI
  GL_VERTEX_STREAM2_ATI
  GL_VERTEX_STREAM3_ATI
  GL_VERTEX_STREAM4_ATI
  GL_VERTEX_STREAM5_ATI
  GL_VERTEX_STREAM6_ATI
  GL_VERTEX_STREAM7_ATI
  GL_VERTEX_SUBROUTINE
  GL_VERTEX_SUBROUTINE_UNIFORM
  GL_VERTEX_TEXTURE
  GL_VERTEX_WEIGHTING_EXT
  GL_VERTEX_WEIGHT_ARRAY_EXT
  GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT
  GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT
  GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT
  GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT
  GL_VERTICAL_LINE_TO_NV
  GL_VERTICES_SUBMITTED
  GL_VERTICES_SUBMITTED_ARB
  GL_VIBRANCE_BIAS_NV
  GL_VIBRANCE_SCALE_NV
  GL_VIDEO_BUFFER_BINDING_NV
  GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV
  GL_VIDEO_BUFFER_NV
  GL_VIDEO_BUFFER_PITCH_NV
  GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV
  GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV
  GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV
  GL_VIDEO_CAPTURE_FRAME_WIDTH_NV
  GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV
  GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV
  GL_VIDEO_COLOR_CONVERSION_MATRIX_NV
  GL_VIDEO_COLOR_CONVERSION_MAX_NV
  GL_VIDEO_COLOR_CONVERSION_MIN_NV
  GL_VIDEO_COLOR_CONVERSION_OFFSET_NV
  GL_VIEWPORT
  GL_VIEWPORT_BIT
  GL_VIEWPORT_BOUNDS_RANGE
  GL_VIEWPORT_BOUNDS_RANGE_NV
  GL_VIEWPORT_COMMAND_NV
  GL_VIEWPORT_INDEX_PROVOKING_VERTEX
  GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV
  GL_VIEWPORT_POSITION_W_SCALE_NV
  GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV
  GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV
  GL_VIEWPORT_SUBPIXEL_BITS
  GL_VIEWPORT_SUBPIXEL_BITS_NV
  GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV
  GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV
  GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV
  GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV
  GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV
  GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV
  GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV
  GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV
  GL_VIEWPORT_SWIZZLE_W_NV
  GL_VIEWPORT_SWIZZLE_X_NV
  GL_VIEWPORT_SWIZZLE_Y_NV
  GL_VIEWPORT_SWIZZLE_Z_NV
  GL_VIEW_CLASS_128_BITS
  GL_VIEW_CLASS_16_BITS
  GL_VIEW_CLASS_24_BITS
  GL_VIEW_CLASS_32_BITS
  GL_VIEW_CLASS_48_BITS
  GL_VIEW_CLASS_64_BITS
  GL_VIEW_CLASS_8_BITS
  GL_VIEW_CLASS_96_BITS
  GL_VIEW_CLASS_BPTC_FLOAT
  GL_VIEW_CLASS_BPTC_UNORM
  GL_VIEW_CLASS_RGTC1_RED
  GL_VIEW_CLASS_RGTC2_RG
  GL_VIEW_CLASS_S3TC_DXT1_RGB
  GL_VIEW_CLASS_S3TC_DXT1_RGBA
  GL_VIEW_CLASS_S3TC_DXT3_RGBA
  GL_VIEW_CLASS_S3TC_DXT5_RGBA
  GL_VIEW_COMPATIBILITY_CLASS
  GL_VIRTUAL_PAGE_SIZE_INDEX_ARB
  GL_VIRTUAL_PAGE_SIZE_INDEX_EXT
  GL_VIRTUAL_PAGE_SIZE_X_AMD
  GL_VIRTUAL_PAGE_SIZE_X_ARB
  GL_VIRTUAL_PAGE_SIZE_X_EXT
  GL_VIRTUAL_PAGE_SIZE_Y_AMD
  GL_VIRTUAL_PAGE_SIZE_Y_ARB
  GL_VIRTUAL_PAGE_SIZE_Y_EXT
  GL_VIRTUAL_PAGE_SIZE_Z_AMD
  GL_VIRTUAL_PAGE_SIZE_Z_ARB
  GL_VIRTUAL_PAGE_SIZE_Z_EXT
  GL_VIVIDLIGHT_NV
  GL_VOLATILE_APPLE
  GL_WAIT_FAILED
  GL_WAIT_FAILED_APPLE
  GL_WARPS_PER_SM_NV
  GL_WARP_SIZE_NV
  GL_WEIGHTED_AVERAGE_ARB
  GL_WEIGHTED_AVERAGE_EXT
  GL_WEIGHT_ARRAY_ARB
  GL_WEIGHT_ARRAY_BUFFER_BINDING
  GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB
  GL_WEIGHT_ARRAY_POINTER_ARB
  GL_WEIGHT_ARRAY_SIZE_ARB
  GL_WEIGHT_ARRAY_STRIDE_ARB
  GL_WEIGHT_ARRAY_TYPE_ARB
  GL_WEIGHT_SUM_UNITY_ARB
  GL_WIDE_LINE_HINT_PGI
  GL_WINDOW_RECTANGLE_EXT
  GL_WINDOW_RECTANGLE_MODE_EXT
  GL_WRAP_BORDER
  GL_WRAP_BORDER_SUN
  GL_WRITEONLY_RENDERING_QCOM
  GL_WRITE_DISCARD_NV
  GL_WRITE_ONLY
  GL_WRITE_ONLY_ARB
  GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV
  GL_WRITE_PIXEL_DATA_RANGE_NV
  GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV
  GL_W_EXT
  GL_XOR
  GL_XOR_NV
  GL_X_EXT
  GL_YCBAYCR8A_4224_NV
  GL_YCBCR_422_APPLE
  GL_YCBCR_MESA
  GL_YCBYCR8_422_NV
  GL_YCRCBA_SGIX
  GL_YCRCB_SGIX
  GL_Y_EXT
  GL_Z400_BINARY_AMD
  GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV
  GL_Z4Y12Z4CB12Z4CR12_444_NV
  GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV
  GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV
  GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV
  GL_ZERO
  GL_ZERO_EXT
  GL_ZERO_TO_ONE
  GL_ZOOM_X
  GL_ZOOM_Y
  GL_Z_EXT
);

1;
